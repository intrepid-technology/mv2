// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: VH6Z-VtTrt
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import BadgeSectionTitle from "../../BadgeSectionTitle"; // plasmic-import: kKmAboE5L2/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: koVqNkx_82/component
import IconElementCircle from "../../IconElementCircle"; // plasmic-import: NwC_LltBnY/component
import CardFeatureHeadlineDescriptionPrimary from "../../CardFeatureHeadlineDescriptionPrimary"; // plasmic-import: qwkYbKgKSI/component
import IconPrimary from "../../IconPrimary"; // plasmic-import: -fEFICkFUf/component
import { useScreenVariants as useScreenVariantso9SjFZaOqjqz } from "../market_v_2/PlasmicGlobalVariant__Screen"; // plasmic-import: o9sjFZaOQJQZ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../market_v_2/plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import sty from "./PlasmicSellerPricing.module.css"; // plasmic-import: VH6Z-VtTrt/css
import SyncMergeIcon from "./icons/PlasmicIcon__SyncMerge"; // plasmic-import: GLtM0zdRZ-/icon
import FileInvoiceIcon from "../market_v_2/icons/PlasmicIcon__FileInvoice"; // plasmic-import: 5y-W1ac1tp/icon
import InsuranceUmbrellaIcon from "../market_v_2/icons/PlasmicIcon__InsuranceUmbrella"; // plasmic-import: Ht43jLmKl/icon
import Icon171Icon from "../market_v_2/icons/PlasmicIcon__Icon171"; // plasmic-import: RfkUw6C5x0/icon
import CircleCheckedIcon from "../market_v_2/icons/PlasmicIcon__CircleChecked"; // plasmic-import: Ebjr5Ebml/icon
import BoltLightningIcon from "./icons/PlasmicIcon__BoltLightning"; // plasmic-import: Axjbj_hFbI/icon
import MoneySellIcon from "./icons/PlasmicIcon__MoneySell"; // plasmic-import: BN2Ri_oEti/icon
import HourglassFullIcon from "./icons/PlasmicIcon__HourglassFull"; // plasmic-import: ZCuRKhupjm/icon

export const PlasmicSellerPricing__VariantProps = new Array();

export const PlasmicSellerPricing__ArgProps = new Array();

function PlasmicSellerPricing__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantso9SjFZaOqjqz()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"partnerHeroOne"}
        data-plasmic-override={overrides.partnerHeroOne}
        hasGap={true}
        className={classNames(projectcss.all, sty.partnerHeroOne)}
      >
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__udI8D)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"overline"}
              data-plasmic-override={overrides.overline}
              hasGap={true}
              className={classNames(projectcss.all, sty.overline)}
            >
              <BadgeSectionTitle
                className={classNames(
                  "__wab_instance",
                  sty.badgeSectionTitle__rL20R
                )}
                colors={"light"}
                sectionTitleSlot={"remote os"}
              />

              <div
                data-plasmic-name={"heroTextParent"}
                data-plasmic-override={overrides.heroTextParent}
                className={classNames(projectcss.all, sty.heroTextParent)}
              >
                <div
                  data-plasmic-name={"heroText"}
                  data-plasmic-override={overrides.heroText}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.heroText
                  )}
                >
                  {
                    "Find new clients. Grow your creative business and get paid on your terms"
                  }
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eKo7)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ieqNk
                )}
              >
                {
                  "Remote OS enables you to grow your freelance or creator business, and live your remote work lifestyle to the max. Find work, manage clients, and get paid from anywhereâ€”minus the stress and annoying admin work"
                }
              </div>

              <ButtonPrimary
                className={classNames(
                  "__wab_instance",
                  sty.buttonPrimary__wl2Ta
                )}
                color={"primary"}
                destination={
                  "https://intrepidventures.typeform.com/to/qoNxle4D"
                }
                height={"_48"}
                width={"_360"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qzum
                  )}
                >
                  {"Request an invite"}
                </div>
              </ButtonPrimary>
            </p.Stack>
          </p.Stack>
        ) : null}

        <img
          alt={""}
          className={classNames(projectcss.all, projectcss.img, sty.img__eDRt)}
          loading={"lazy"}
          src={
            "/plasmic/remote_v_1/images/intrepidRemoteOsFreelanceOnIntrepidpng2.png"
          }
        />
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"partnerWhatIsRemote"}
        data-plasmic-override={overrides.partnerWhatIsRemote}
        hasGap={true}
        className={classNames(projectcss.all, sty.partnerWhatIsRemote)}
      >
        <BadgeSectionTitle
          border={true}
          className={classNames(
            "__wab_instance",
            sty.badgeSectionTitle___3InfU
          )}
          colors={"brand"}
          sectionTitleSlot={"what is remote os?"}
        />

        <div className={classNames(projectcss.all, sty.freeBox__sqRy5)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ms04W
            )}
          >
            {
              "Client matching, financial services, and back-office automation to grow your creative business"
            }
          </div>
        </div>

        <div className={classNames(projectcss.all, sty.freeBox___7Ku7G)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__o1I78
            )}
          >
            {
              "Remote OS gives you client matching, invoicing with up to 90-day payment terms, automated accounting, and customised insurance for your business and lifestyle"
            }
          </div>
        </div>

        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"sellerFeatures"}
            data-plasmic-override={overrides.sellerFeatures}
            hasGap={true}
            className={classNames(projectcss.all, sty.sellerFeatures)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___1MtD)}
            >
              <IconElementCircle
                className={classNames(
                  "__wab_instance",
                  sty.iconElementCircle___6TdNz
                )}
                color={"brand"}
                iconSlot={
                  <SyncMergeIcon
                    className={classNames(projectcss.all, sty.svg__fdhEv)}
                    role={"img"}
                  />
                }
              />

              <CardFeatureHeadlineDescriptionPrimary
                bodyTextSlot={
                  "Client matching and recommendations based on over 100 data points including your values, content, skills, and pricing"
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardFeatureHeadlineDescriptionPrimary___7Hl0W
                )}
                headlineSlot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tnsIl
                    )}
                  >
                    {"Client matching and recommendations"}
                  </div>
                }
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tX9U)}
            >
              <IconElementCircle
                className={classNames(
                  "__wab_instance",
                  sty.iconElementCircle__xQAr
                )}
                color={"brand"}
                iconSlot={
                  <FileInvoiceIcon
                    className={classNames(projectcss.all, sty.svg__qsYd4)}
                    role={"img"}
                  />
                }
              />

              <CardFeatureHeadlineDescriptionPrimary
                bodyTextSlot={
                  "Invoice automation and payment terms for your worldwide clients. Offer 90 day net payment terms and get paid upfront"
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardFeatureHeadlineDescriptionPrimary__tcChu
                )}
                headlineSlot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o1FIh
                    )}
                  >
                    {"Automated Invoices and net payment terms"}
                  </div>
                }
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jPv6)}
            >
              <IconElementCircle
                className={classNames(
                  "__wab_instance",
                  sty.iconElementCircle__l2ITn
                )}
                color={"brand"}
                iconSlot={
                  <InsuranceUmbrellaIcon
                    className={classNames(projectcss.all, sty.svg__iDuBq)}
                    role={"img"}
                  />
                }
              />

              <CardFeatureHeadlineDescriptionPrimary
                bodyTextSlot={
                  "Insurance that fits your business and lifestyle without shopping around and dealing with confusing policies"
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardFeatureHeadlineDescriptionPrimary__fNfh3
                )}
                headlineSlot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__egmKk
                    )}
                  >
                    {"Insurance designed for your business & lifestyle"}
                  </div>
                }
              />
            </p.Stack>
          </p.Stack>
        ) : null}
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"pricing"}
        data-plasmic-override={overrides.pricing}
        hasGap={true}
        className={classNames(projectcss.all, sty.pricing)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___7QUw4)}
        >
          <BadgeSectionTitle
            border={true}
            className={classNames(
              "__wab_instance",
              sty.badgeSectionTitle__zmc77
            )}
            colors={"brand"}
            sectionTitleSlot={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ewAjv
                )}
              >
                {"Pricing"}
              </div>
            }
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___6Ix1A)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__afnk7)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3FiCw
                )}
              >
                {"$0"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nBuju
                )}
              >
                {"/month"}
              </div>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__xz4Ju)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0OLJt
                )}
              >
                {
                  "Everything a solo entrepreneur, freelancer, or a creator needs to become a global business"
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__w3Wqj)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mysYn
                )}
              >
                {
                  "25 free invoices per month\n0.5% for each additional paid invoice.\nIntrepid branding on invoices"
                }
              </div>
            </div>

            <ButtonPrimary
              className={classNames("__wab_instance", sty.buttonPrimary__j1K4K)}
              destination={"https://intrepidventures.typeform.com/to/qoNxle4D"}
              height={"_48"}
              width={"_360"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hqmcN
                )}
              >
                {"Request an invite"}
              </div>
            </ButtonPrimary>
          </p.Stack>
        </p.Stack>

        <img
          alt={""}
          className={classNames(projectcss.all, projectcss.img, sty.img__u7KuM)}
          loading={"lazy"}
          src={
            "/plasmic/remote_v_1/images/intrepidRemoteCompanySetup2022Png.png"
          }
        />
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"partnerCta"}
        data-plasmic-override={overrides.partnerCta}
        hasGap={true}
        className={classNames(projectcss.all, sty.partnerCta)}
      >
        <BadgeSectionTitle
          className={classNames("__wab_instance", sty.badgeSectionTitle__a4555)}
          colors={"light"}
          sectionTitleSlot={"machine learning"}
        />

        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___55Ju)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__iHRl)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bcIrU
                )}
              >
                {
                  "Client recommendations that match your unique skills, content, and ratesâ€”without searching"
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__zfOzm)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rOWl
                )}
              >
                {
                  "Stop chasing and cold emailing clients and brands. Start getting recommendations and matches to the startups and global brands that value your unique abilities."
                }
              </div>
            </div>
          </p.Stack>
        ) : null}

        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary__zlYj1)}
          color={"primary"}
          destination={"https://intrepidventures.typeform.com/to/qoNxle4D"}
          width={"_360"}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__tp5Hy
            )}
          >
            {"Request an invite"}
          </div>
        </ButtonPrimary>
      </p.Stack>

      <div
        data-plasmic-name={"partnerInvoicing"}
        data-plasmic-override={overrides.partnerInvoicing}
        className={classNames(projectcss.all, sty.partnerInvoicing)}
      >
        <p.Stack
          as={"div"}
          data-plasmic-name={"descriptionInvoiceParent"}
          data-plasmic-override={overrides.descriptionInvoiceParent}
          hasGap={true}
          className={classNames(projectcss.all, sty.descriptionInvoiceParent)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__yYJtk)}
          >
            <BadgeSectionTitle
              border={true}
              className={classNames(
                "__wab_instance",
                sty.badgeSectionTitle__xAozM
              )}
              colors={"brand"}
              sectionTitleSlot={"INVOICING"}
            />

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dduTf)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tQh0
                  )}
                >
                  {"Automate your Invoices.\nGet paid faster."}
                </div>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aksYo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jFz2E
                      )}
                    >
                      {
                        "Request, track, and retain more clients with an all-in-one invoicing and financial service tool that helps freelancers and creators get paid faster."
                      }
                    </div>
                  </div>
                ) : null}
              </p.Stack>
            ) : null}
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__zaViZ)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__g2Ey5)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__orQ3U)}
                size={"_32Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon60"}
                    data-plasmic-override={overrides.svgIcon60}
                    className={classNames(projectcss.all, sty.svgIcon60)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon61"}
                    data-plasmic-override={overrides.svgIcon61}
                    className={classNames(projectcss.all, sty.svgIcon61)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon62"}
                    data-plasmic-override={overrides.svgIcon62}
                    className={classNames(projectcss.all, sty.svgIcon62)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon63"}
                    data-plasmic-override={overrides.svgIcon63}
                    className={classNames(projectcss.all, sty.svgIcon63)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon64"}
                    data-plasmic-override={overrides.svgIcon64}
                    className={classNames(projectcss.all, sty.svgIcon64)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon65"}
                    data-plasmic-override={overrides.svgIcon65}
                    className={classNames(projectcss.all, sty.svgIcon65)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon69"}
                    data-plasmic-override={overrides.svgIcon69}
                    className={classNames(projectcss.all, sty.svgIcon69)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon66"}
                    data-plasmic-override={overrides.svgIcon66}
                    className={classNames(projectcss.all, sty.svgIcon66)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon67"}
                    data-plasmic-override={overrides.svgIcon67}
                    className={classNames(projectcss.all, sty.svgIcon67)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon68"}
                    data-plasmic-override={overrides.svgIcon68}
                    className={classNames(projectcss.all, sty.svgIcon68)}
                    role={"img"}
                  />
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4IUu8
                )}
              >
                {"Single or recurring invoices"}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uxby)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__pkerR)}
                size={"_32Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon70"}
                    data-plasmic-override={overrides.svgIcon70}
                    className={classNames(projectcss.all, sty.svgIcon70)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon71"}
                    data-plasmic-override={overrides.svgIcon71}
                    className={classNames(projectcss.all, sty.svgIcon71)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon72"}
                    data-plasmic-override={overrides.svgIcon72}
                    className={classNames(projectcss.all, sty.svgIcon72)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon73"}
                    data-plasmic-override={overrides.svgIcon73}
                    className={classNames(projectcss.all, sty.svgIcon73)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon74"}
                    data-plasmic-override={overrides.svgIcon74}
                    className={classNames(projectcss.all, sty.svgIcon74)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon75"}
                    data-plasmic-override={overrides.svgIcon75}
                    className={classNames(projectcss.all, sty.svgIcon75)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon79"}
                    data-plasmic-override={overrides.svgIcon79}
                    className={classNames(projectcss.all, sty.svgIcon79)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon76"}
                    data-plasmic-override={overrides.svgIcon76}
                    className={classNames(projectcss.all, sty.svgIcon76)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon77"}
                    data-plasmic-override={overrides.svgIcon77}
                    className={classNames(projectcss.all, sty.svgIcon77)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon78"}
                    data-plasmic-override={overrides.svgIcon78}
                    className={classNames(projectcss.all, sty.svgIcon78)}
                    role={"img"}
                  />
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bOf9T
                )}
              >
                {"Advance deposit"}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__w7Aa)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__e8Ly)}
                size={"_32Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon80"}
                    data-plasmic-override={overrides.svgIcon80}
                    className={classNames(projectcss.all, sty.svgIcon80)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon81"}
                    data-plasmic-override={overrides.svgIcon81}
                    className={classNames(projectcss.all, sty.svgIcon81)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon82"}
                    data-plasmic-override={overrides.svgIcon82}
                    className={classNames(projectcss.all, sty.svgIcon82)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon83"}
                    data-plasmic-override={overrides.svgIcon83}
                    className={classNames(projectcss.all, sty.svgIcon83)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon84"}
                    data-plasmic-override={overrides.svgIcon84}
                    className={classNames(projectcss.all, sty.svgIcon84)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon85"}
                    data-plasmic-override={overrides.svgIcon85}
                    className={classNames(projectcss.all, sty.svgIcon85)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon89"}
                    data-plasmic-override={overrides.svgIcon89}
                    className={classNames(projectcss.all, sty.svgIcon89)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon86"}
                    data-plasmic-override={overrides.svgIcon86}
                    className={classNames(projectcss.all, sty.svgIcon86)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon87"}
                    data-plasmic-override={overrides.svgIcon87}
                    className={classNames(projectcss.all, sty.svgIcon87)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon88"}
                    data-plasmic-override={overrides.svgIcon88}
                    className={classNames(projectcss.all, sty.svgIcon88)}
                    role={"img"}
                  />
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zj9P0
                )}
              >
                {"Payment status tracking"}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___94Gfw)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__e2EF)}
                size={"_32Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon90"}
                    data-plasmic-override={overrides.svgIcon90}
                    className={classNames(projectcss.all, sty.svgIcon90)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon91"}
                    data-plasmic-override={overrides.svgIcon91}
                    className={classNames(projectcss.all, sty.svgIcon91)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon92"}
                    data-plasmic-override={overrides.svgIcon92}
                    className={classNames(projectcss.all, sty.svgIcon92)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon93"}
                    data-plasmic-override={overrides.svgIcon93}
                    className={classNames(projectcss.all, sty.svgIcon93)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon94"}
                    data-plasmic-override={overrides.svgIcon94}
                    className={classNames(projectcss.all, sty.svgIcon94)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon95"}
                    data-plasmic-override={overrides.svgIcon95}
                    className={classNames(projectcss.all, sty.svgIcon95)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon99"}
                    data-plasmic-override={overrides.svgIcon99}
                    className={classNames(projectcss.all, sty.svgIcon99)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon96"}
                    data-plasmic-override={overrides.svgIcon96}
                    className={classNames(projectcss.all, sty.svgIcon96)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon97"}
                    data-plasmic-override={overrides.svgIcon97}
                    className={classNames(projectcss.all, sty.svgIcon97)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon98"}
                    data-plasmic-override={overrides.svgIcon98}
                    className={classNames(projectcss.all, sty.svgIcon98)}
                    role={"img"}
                  />
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__owGq5
                )}
              >
                {"Automated email reminders"}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kQs8Q)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__gzhdE)}
                size={"_32Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon100"}
                    data-plasmic-override={overrides.svgIcon100}
                    className={classNames(projectcss.all, sty.svgIcon100)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon101"}
                    data-plasmic-override={overrides.svgIcon101}
                    className={classNames(projectcss.all, sty.svgIcon101)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon102"}
                    data-plasmic-override={overrides.svgIcon102}
                    className={classNames(projectcss.all, sty.svgIcon102)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon103"}
                    data-plasmic-override={overrides.svgIcon103}
                    className={classNames(projectcss.all, sty.svgIcon103)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon104"}
                    data-plasmic-override={overrides.svgIcon104}
                    className={classNames(projectcss.all, sty.svgIcon104)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon105"}
                    data-plasmic-override={overrides.svgIcon105}
                    className={classNames(projectcss.all, sty.svgIcon105)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon109"}
                    data-plasmic-override={overrides.svgIcon109}
                    className={classNames(projectcss.all, sty.svgIcon109)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon106"}
                    data-plasmic-override={overrides.svgIcon106}
                    className={classNames(projectcss.all, sty.svgIcon106)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon107"}
                    data-plasmic-override={overrides.svgIcon107}
                    className={classNames(projectcss.all, sty.svgIcon107)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon108"}
                    data-plasmic-override={overrides.svgIcon108}
                    className={classNames(projectcss.all, sty.svgIcon108)}
                    role={"img"}
                  />
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vTnyw
                )}
              >
                {"ACH and credit card payments"}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uEnFy)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__yPEhC)}
                size={"_32Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon110"}
                    data-plasmic-override={overrides.svgIcon110}
                    className={classNames(projectcss.all, sty.svgIcon110)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon111"}
                    data-plasmic-override={overrides.svgIcon111}
                    className={classNames(projectcss.all, sty.svgIcon111)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon112"}
                    data-plasmic-override={overrides.svgIcon112}
                    className={classNames(projectcss.all, sty.svgIcon112)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon113"}
                    data-plasmic-override={overrides.svgIcon113}
                    className={classNames(projectcss.all, sty.svgIcon113)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon114"}
                    data-plasmic-override={overrides.svgIcon114}
                    className={classNames(projectcss.all, sty.svgIcon114)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <CircleCheckedIcon
                    data-plasmic-name={"svgIcon115"}
                    data-plasmic-override={overrides.svgIcon115}
                    className={classNames(projectcss.all, sty.svgIcon115)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon119"}
                    data-plasmic-override={overrides.svgIcon119}
                    className={classNames(projectcss.all, sty.svgIcon119)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon116"}
                    data-plasmic-override={overrides.svgIcon116}
                    className={classNames(projectcss.all, sty.svgIcon116)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon117"}
                    data-plasmic-override={overrides.svgIcon117}
                    className={classNames(projectcss.all, sty.svgIcon117)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon118"}
                    data-plasmic-override={overrides.svgIcon118}
                    className={classNames(projectcss.all, sty.svgIcon118)}
                    role={"img"}
                  />
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uvjeO
                )}
              >
                {"Auto-charge and auto-pay"}
              </div>
            </p.Stack>
          </p.Stack>
        </p.Stack>

        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__fLh6Y)}>
            <img
              alt={""}
              className={classNames(
                projectcss.all,
                projectcss.img,
                sty.img__lfaOj
              )}
              loading={"lazy"}
              src={"/plasmic/remote_v_1/images/netTermspng.png"}
            />
          </div>
        ) : null}
      </div>

      <p.Stack
        as={"div"}
        data-plasmic-name={"paymentTerms"}
        data-plasmic-override={overrides.paymentTerms}
        hasGap={true}
        className={classNames(projectcss.all, sty.paymentTerms)}
      >
        <BadgeSectionTitle
          border={true}
          className={classNames("__wab_instance", sty.badgeSectionTitle__t8K3P)}
          colors={"brand"}
          sectionTitleSlot={"payment terms"}
        />

        <div className={classNames(projectcss.all, sty.freeBox__nLfTd)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__p97Oq
            )}
          >
            {
              "Buy now and pay later for creators and freelancers. Offer up to +90 day net payment termsâ€” risk free. "
            }
          </div>
        </div>

        <div className={classNames(projectcss.all, sty.freeBox__ksd4Q)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__cC5Z4
            )}
          >
            {
              "Get more clients, and keep them, with up to +90 day net payment terms for your content or services. You get with the lowest rates and instant payouts while your clients pay up to +90 days later."
            }
          </div>
        </div>

        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"sellerFeatures2"}
            data-plasmic-override={overrides.sellerFeatures2}
            hasGap={true}
            className={classNames(projectcss.all, sty.sellerFeatures2)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___8Bvrd)}
            >
              <IconElementCircle
                className={classNames(
                  "__wab_instance",
                  sty.iconElementCircle__wtR8U
                )}
                color={"brand"}
                iconSlot={
                  <BoltLightningIcon
                    className={classNames(projectcss.all, sty.svg__oHlN7)}
                    role={"img"}
                  />
                }
              />

              <CardFeatureHeadlineDescriptionPrimary
                bodyTextSlot={
                  "Your buyers can apply for Net Terms in seconds, or assess buyers ahead of time"
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardFeatureHeadlineDescriptionPrimary___9WvaD
                )}
                headlineSlot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l5NZu
                    )}
                  >
                    {"One-click credit check "}
                  </div>
                }
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__t6GSw)}
            >
              <IconElementCircle
                className={classNames(
                  "__wab_instance",
                  sty.iconElementCircle__oVuJm
                )}
                color={"brand"}
                iconSlot={
                  <MoneySellIcon
                    className={classNames(projectcss.all, sty.svg__rc7Dx)}
                    role={"img"}
                  />
                }
              />

              <CardFeatureHeadlineDescriptionPrimary
                bodyTextSlot={
                  "Intrepid pays you 100% of the invoice after completion of delivery/services."
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardFeatureHeadlineDescriptionPrimary__tMPqt
                )}
                headlineSlot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4XRp8
                    )}
                  >
                    {"You get paid upfront"}
                  </div>
                }
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vvXsr)}
            >
              <IconElementCircle
                className={classNames(
                  "__wab_instance",
                  sty.iconElementCircle__kwdDh
                )}
                color={"brand"}
                iconSlot={
                  <HourglassFullIcon
                    className={classNames(projectcss.all, sty.svg__j7IaX)}
                    role={"img"}
                  />
                }
              />

              <CardFeatureHeadlineDescriptionPrimary
                bodyTextSlot={
                  "We take on 100% of the risk, whether your buyers pay or not"
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardFeatureHeadlineDescriptionPrimary__iseK2
                )}
                headlineSlot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tAr5E
                    )}
                  >
                    {"Your clients pay later"}
                  </div>
                }
              />
            </p.Stack>
          </p.Stack>
        ) : null}
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"insurance"}
        data-plasmic-override={overrides.insurance}
        hasGap={true}
        className={classNames(projectcss.all, sty.insurance)}
      >
        <img
          alt={""}
          className={classNames(projectcss.all, projectcss.img, sty.img__zu9Iy)}
          loading={"lazy"}
          src={"/plasmic/remote_v_1/images/intrepidRemoteInsurance2022Png.png"}
        />

        <div className={classNames(projectcss.all, sty.freeBox__fKIm4)}>
          <BadgeSectionTitle
            border={true}
            className={classNames(
              "__wab_instance",
              sty.badgeSectionTitle___9JfqK
            )}
            colors={"brand"}
            sectionTitleSlot={"INSURANCE"}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___3AlaO)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__jym88)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eZcRy
                )}
              >
                {
                  "Insurance for freelancers, content creators, and solo entrepreneurs"
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__cUpMj)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aNiGo
                )}
              >
                {
                  "Insurance that fits your business and lifestyle without shopping around and dealing with confusing policies and sales people that sell you things you don't need"
                }
              </div>
            </div>

            <ButtonPrimary
              className={classNames("__wab_instance", sty.buttonPrimary__qYaFs)}
              destination={"https://intrepidventures.typeform.com/to/qoNxle4D"}
              width={"_360"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kcJJx
                )}
              >
                {"Request an invite"}
              </div>
            </ButtonPrimary>
          </p.Stack>
        </div>
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"community"}
        data-plasmic-override={overrides.community}
        hasGap={true}
        className={classNames(projectcss.all, sty.community)}
      >
        <BadgeSectionTitle
          border={true}
          className={classNames("__wab_instance", sty.badgeSectionTitle__gTFoe)}
          colors={"brand"}
          sectionTitleSlot={"community"}
        />

        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__v1QG)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__kYoD)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bRoHc
                )}
              >
                {"Join a global creative community"}
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox___3HmJo)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___83Ddi
                )}
              >
                {
                  "Join an exclusive community of freelancers, creators, and remote work professionals who use Intrepid to save time, grow their business, and gain the freedom to live the way they want."
                }
              </div>
            </div>
          </p.Stack>
        ) : null}

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__y2QwE)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__qpOtu)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mmz8C
              )}
            >
              {"180"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uge9R
              )}
            >
              {"Countries where you can accept payments"}
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__cNtN4)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zV4KD
              )}
            >
              {"500"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___5McZy
              )}
            >
              {"Global brands and startups"}
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___5DpsW)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hhZoS
              )}
            >
              {"90"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__l8Om
              )}
            >
              {"Day net payment terms for your clients "}
            </div>
          </p.Stack>
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"closingCta"}
        data-plasmic-override={overrides.closingCta}
        hasGap={true}
        className={classNames(projectcss.all, sty.closingCta)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__dtSnM)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___7Oqwx
            )}
          >
            {hasVariant(globalVariants, "screen", "iphone12ProMax")
              ? "Get started\nfor free"
              : "Get started for free"}
          </div>
        </div>

        <div className={classNames(projectcss.all, sty.freeBox__fn5Ck)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__raZ9E
            )}
          >
            {
              "Join a trusted community of world class brands and fast growing startups on a platform built for todayâ€™s world of work"
            }
          </div>
        </div>

        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary__czfvc)}
          color={"primary"}
          destination={"https://intrepidventures.typeform.com/to/qoNxle4D"}
          type={"primary"}
          width={"_360"}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__zh4Rk
            )}
          >
            {"Request an invite"}
          </div>
        </ButtonPrimary>
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "partnerHeroOne",
    "overline",
    "heroTextParent",
    "heroText",
    "partnerWhatIsRemote",
    "sellerFeatures",
    "pricing",
    "partnerCta",
    "partnerInvoicing",
    "descriptionInvoiceParent",
    "svgIcon60",
    "svgIcon61",
    "svgIcon62",
    "svgIcon63",
    "svgIcon64",
    "svgIcon65",
    "svgIcon66",
    "svgIcon67",
    "svgIcon68",
    "svgIcon69",
    "svgIcon70",
    "svgIcon71",
    "svgIcon72",
    "svgIcon73",
    "svgIcon74",
    "svgIcon75",
    "svgIcon76",
    "svgIcon77",
    "svgIcon78",
    "svgIcon79",
    "svgIcon80",
    "svgIcon81",
    "svgIcon82",
    "svgIcon83",
    "svgIcon84",
    "svgIcon85",
    "svgIcon86",
    "svgIcon87",
    "svgIcon88",
    "svgIcon89",
    "svgIcon90",
    "svgIcon91",
    "svgIcon92",
    "svgIcon93",
    "svgIcon94",
    "svgIcon95",
    "svgIcon96",
    "svgIcon97",
    "svgIcon98",
    "svgIcon99",
    "svgIcon100",
    "svgIcon101",
    "svgIcon102",
    "svgIcon103",
    "svgIcon104",
    "svgIcon105",
    "svgIcon106",
    "svgIcon107",
    "svgIcon108",
    "svgIcon109",
    "svgIcon110",
    "svgIcon111",
    "svgIcon112",
    "svgIcon113",
    "svgIcon114",
    "svgIcon115",
    "svgIcon116",
    "svgIcon117",
    "svgIcon118",
    "svgIcon119",
    "paymentTerms",
    "sellerFeatures2",
    "insurance",
    "community",
    "closingCta"
  ],

  partnerHeroOne: ["partnerHeroOne", "overline", "heroTextParent", "heroText"],
  overline: ["overline", "heroTextParent", "heroText"],
  heroTextParent: ["heroTextParent", "heroText"],
  heroText: ["heroText"],
  partnerWhatIsRemote: ["partnerWhatIsRemote", "sellerFeatures"],
  sellerFeatures: ["sellerFeatures"],
  pricing: ["pricing"],
  partnerCta: ["partnerCta"],
  partnerInvoicing: [
    "partnerInvoicing",
    "descriptionInvoiceParent",
    "svgIcon60",
    "svgIcon61",
    "svgIcon62",
    "svgIcon63",
    "svgIcon64",
    "svgIcon65",
    "svgIcon66",
    "svgIcon67",
    "svgIcon68",
    "svgIcon69",
    "svgIcon70",
    "svgIcon71",
    "svgIcon72",
    "svgIcon73",
    "svgIcon74",
    "svgIcon75",
    "svgIcon76",
    "svgIcon77",
    "svgIcon78",
    "svgIcon79",
    "svgIcon80",
    "svgIcon81",
    "svgIcon82",
    "svgIcon83",
    "svgIcon84",
    "svgIcon85",
    "svgIcon86",
    "svgIcon87",
    "svgIcon88",
    "svgIcon89",
    "svgIcon90",
    "svgIcon91",
    "svgIcon92",
    "svgIcon93",
    "svgIcon94",
    "svgIcon95",
    "svgIcon96",
    "svgIcon97",
    "svgIcon98",
    "svgIcon99",
    "svgIcon100",
    "svgIcon101",
    "svgIcon102",
    "svgIcon103",
    "svgIcon104",
    "svgIcon105",
    "svgIcon106",
    "svgIcon107",
    "svgIcon108",
    "svgIcon109",
    "svgIcon110",
    "svgIcon111",
    "svgIcon112",
    "svgIcon113",
    "svgIcon114",
    "svgIcon115",
    "svgIcon116",
    "svgIcon117",
    "svgIcon118",
    "svgIcon119"
  ],

  descriptionInvoiceParent: [
    "descriptionInvoiceParent",
    "svgIcon60",
    "svgIcon61",
    "svgIcon62",
    "svgIcon63",
    "svgIcon64",
    "svgIcon65",
    "svgIcon66",
    "svgIcon67",
    "svgIcon68",
    "svgIcon69",
    "svgIcon70",
    "svgIcon71",
    "svgIcon72",
    "svgIcon73",
    "svgIcon74",
    "svgIcon75",
    "svgIcon76",
    "svgIcon77",
    "svgIcon78",
    "svgIcon79",
    "svgIcon80",
    "svgIcon81",
    "svgIcon82",
    "svgIcon83",
    "svgIcon84",
    "svgIcon85",
    "svgIcon86",
    "svgIcon87",
    "svgIcon88",
    "svgIcon89",
    "svgIcon90",
    "svgIcon91",
    "svgIcon92",
    "svgIcon93",
    "svgIcon94",
    "svgIcon95",
    "svgIcon96",
    "svgIcon97",
    "svgIcon98",
    "svgIcon99",
    "svgIcon100",
    "svgIcon101",
    "svgIcon102",
    "svgIcon103",
    "svgIcon104",
    "svgIcon105",
    "svgIcon106",
    "svgIcon107",
    "svgIcon108",
    "svgIcon109",
    "svgIcon110",
    "svgIcon111",
    "svgIcon112",
    "svgIcon113",
    "svgIcon114",
    "svgIcon115",
    "svgIcon116",
    "svgIcon117",
    "svgIcon118",
    "svgIcon119"
  ],

  svgIcon60: ["svgIcon60"],
  svgIcon61: ["svgIcon61"],
  svgIcon62: ["svgIcon62"],
  svgIcon63: ["svgIcon63"],
  svgIcon64: ["svgIcon64"],
  svgIcon65: ["svgIcon65"],
  svgIcon66: ["svgIcon66"],
  svgIcon67: ["svgIcon67"],
  svgIcon68: ["svgIcon68"],
  svgIcon69: ["svgIcon69"],
  svgIcon70: ["svgIcon70"],
  svgIcon71: ["svgIcon71"],
  svgIcon72: ["svgIcon72"],
  svgIcon73: ["svgIcon73"],
  svgIcon74: ["svgIcon74"],
  svgIcon75: ["svgIcon75"],
  svgIcon76: ["svgIcon76"],
  svgIcon77: ["svgIcon77"],
  svgIcon78: ["svgIcon78"],
  svgIcon79: ["svgIcon79"],
  svgIcon80: ["svgIcon80"],
  svgIcon81: ["svgIcon81"],
  svgIcon82: ["svgIcon82"],
  svgIcon83: ["svgIcon83"],
  svgIcon84: ["svgIcon84"],
  svgIcon85: ["svgIcon85"],
  svgIcon86: ["svgIcon86"],
  svgIcon87: ["svgIcon87"],
  svgIcon88: ["svgIcon88"],
  svgIcon89: ["svgIcon89"],
  svgIcon90: ["svgIcon90"],
  svgIcon91: ["svgIcon91"],
  svgIcon92: ["svgIcon92"],
  svgIcon93: ["svgIcon93"],
  svgIcon94: ["svgIcon94"],
  svgIcon95: ["svgIcon95"],
  svgIcon96: ["svgIcon96"],
  svgIcon97: ["svgIcon97"],
  svgIcon98: ["svgIcon98"],
  svgIcon99: ["svgIcon99"],
  svgIcon100: ["svgIcon100"],
  svgIcon101: ["svgIcon101"],
  svgIcon102: ["svgIcon102"],
  svgIcon103: ["svgIcon103"],
  svgIcon104: ["svgIcon104"],
  svgIcon105: ["svgIcon105"],
  svgIcon106: ["svgIcon106"],
  svgIcon107: ["svgIcon107"],
  svgIcon108: ["svgIcon108"],
  svgIcon109: ["svgIcon109"],
  svgIcon110: ["svgIcon110"],
  svgIcon111: ["svgIcon111"],
  svgIcon112: ["svgIcon112"],
  svgIcon113: ["svgIcon113"],
  svgIcon114: ["svgIcon114"],
  svgIcon115: ["svgIcon115"],
  svgIcon116: ["svgIcon116"],
  svgIcon117: ["svgIcon117"],
  svgIcon118: ["svgIcon118"],
  svgIcon119: ["svgIcon119"],
  paymentTerms: ["paymentTerms", "sellerFeatures2"],
  sellerFeatures2: ["sellerFeatures2"],
  insurance: ["insurance"],
  community: ["community"],
  closingCta: ["closingCta"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSellerPricing__ArgProps,
      internalVariantPropNames: PlasmicSellerPricing__VariantProps
    });

    return PlasmicSellerPricing__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSellerPricing";
  } else {
    func.displayName = `PlasmicSellerPricing.${nodeName}`;
  }
  return func;
}

export const PlasmicSellerPricing = Object.assign(
  // Top-level PlasmicSellerPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    partnerHeroOne: makeNodeComponent("partnerHeroOne"),
    overline: makeNodeComponent("overline"),
    heroTextParent: makeNodeComponent("heroTextParent"),
    heroText: makeNodeComponent("heroText"),
    partnerWhatIsRemote: makeNodeComponent("partnerWhatIsRemote"),
    sellerFeatures: makeNodeComponent("sellerFeatures"),
    pricing: makeNodeComponent("pricing"),
    partnerCta: makeNodeComponent("partnerCta"),
    partnerInvoicing: makeNodeComponent("partnerInvoicing"),
    descriptionInvoiceParent: makeNodeComponent("descriptionInvoiceParent"),
    svgIcon60: makeNodeComponent("svgIcon60"),
    svgIcon61: makeNodeComponent("svgIcon61"),
    svgIcon62: makeNodeComponent("svgIcon62"),
    svgIcon63: makeNodeComponent("svgIcon63"),
    svgIcon64: makeNodeComponent("svgIcon64"),
    svgIcon65: makeNodeComponent("svgIcon65"),
    svgIcon66: makeNodeComponent("svgIcon66"),
    svgIcon67: makeNodeComponent("svgIcon67"),
    svgIcon68: makeNodeComponent("svgIcon68"),
    svgIcon69: makeNodeComponent("svgIcon69"),
    svgIcon70: makeNodeComponent("svgIcon70"),
    svgIcon71: makeNodeComponent("svgIcon71"),
    svgIcon72: makeNodeComponent("svgIcon72"),
    svgIcon73: makeNodeComponent("svgIcon73"),
    svgIcon74: makeNodeComponent("svgIcon74"),
    svgIcon75: makeNodeComponent("svgIcon75"),
    svgIcon76: makeNodeComponent("svgIcon76"),
    svgIcon77: makeNodeComponent("svgIcon77"),
    svgIcon78: makeNodeComponent("svgIcon78"),
    svgIcon79: makeNodeComponent("svgIcon79"),
    svgIcon80: makeNodeComponent("svgIcon80"),
    svgIcon81: makeNodeComponent("svgIcon81"),
    svgIcon82: makeNodeComponent("svgIcon82"),
    svgIcon83: makeNodeComponent("svgIcon83"),
    svgIcon84: makeNodeComponent("svgIcon84"),
    svgIcon85: makeNodeComponent("svgIcon85"),
    svgIcon86: makeNodeComponent("svgIcon86"),
    svgIcon87: makeNodeComponent("svgIcon87"),
    svgIcon88: makeNodeComponent("svgIcon88"),
    svgIcon89: makeNodeComponent("svgIcon89"),
    svgIcon90: makeNodeComponent("svgIcon90"),
    svgIcon91: makeNodeComponent("svgIcon91"),
    svgIcon92: makeNodeComponent("svgIcon92"),
    svgIcon93: makeNodeComponent("svgIcon93"),
    svgIcon94: makeNodeComponent("svgIcon94"),
    svgIcon95: makeNodeComponent("svgIcon95"),
    svgIcon96: makeNodeComponent("svgIcon96"),
    svgIcon97: makeNodeComponent("svgIcon97"),
    svgIcon98: makeNodeComponent("svgIcon98"),
    svgIcon99: makeNodeComponent("svgIcon99"),
    svgIcon100: makeNodeComponent("svgIcon100"),
    svgIcon101: makeNodeComponent("svgIcon101"),
    svgIcon102: makeNodeComponent("svgIcon102"),
    svgIcon103: makeNodeComponent("svgIcon103"),
    svgIcon104: makeNodeComponent("svgIcon104"),
    svgIcon105: makeNodeComponent("svgIcon105"),
    svgIcon106: makeNodeComponent("svgIcon106"),
    svgIcon107: makeNodeComponent("svgIcon107"),
    svgIcon108: makeNodeComponent("svgIcon108"),
    svgIcon109: makeNodeComponent("svgIcon109"),
    svgIcon110: makeNodeComponent("svgIcon110"),
    svgIcon111: makeNodeComponent("svgIcon111"),
    svgIcon112: makeNodeComponent("svgIcon112"),
    svgIcon113: makeNodeComponent("svgIcon113"),
    svgIcon114: makeNodeComponent("svgIcon114"),
    svgIcon115: makeNodeComponent("svgIcon115"),
    svgIcon116: makeNodeComponent("svgIcon116"),
    svgIcon117: makeNodeComponent("svgIcon117"),
    svgIcon118: makeNodeComponent("svgIcon118"),
    svgIcon119: makeNodeComponent("svgIcon119"),
    paymentTerms: makeNodeComponent("paymentTerms"),
    sellerFeatures2: makeNodeComponent("sellerFeatures2"),
    insurance: makeNodeComponent("insurance"),
    community: makeNodeComponent("community"),
    closingCta: makeNodeComponent("closingCta"),
    // Metadata about props expected for PlasmicSellerPricing
    internalVariantProps: PlasmicSellerPricing__VariantProps,
    internalArgProps: PlasmicSellerPricing__ArgProps
  }
);

export default PlasmicSellerPricing;
/* prettier-ignore-end */
