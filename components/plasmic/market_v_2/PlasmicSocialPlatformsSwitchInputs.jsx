// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: KT8HFDqoR9t
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import FormSwitchInput from "../../FormSwitchInput"; // plasmic-import: Q6uFqZTeF8/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicSocialPlatformsSwitchInputs.module.css"; // plasmic-import: KT8HFDqoR9t/css
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: mYZ3_5X8rB/icon
import FacebookSquareFillIcon from "./icons/PlasmicIcon__FacebookSquareFill"; // plasmic-import: wOX2gl0oUy/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: DEc54POMG/icon
import TwitterSquareFillIcon from "./icons/PlasmicIcon__TwitterSquareFill"; // plasmic-import: YS9smaNhXs/icon
import YoutubeSquareFillIcon from "./icons/PlasmicIcon__YoutubeSquareFill"; // plasmic-import: jYcAOxOO7/icon
import TiktokIcon from "./icons/PlasmicIcon__Tiktok"; // plasmic-import: LokkjUavSF/icon
import GithubIcon from "./icons/PlasmicIcon__Github"; // plasmic-import: 3czk3Wymzb/icon
import DribbbleIcon from "./icons/PlasmicIcon__Dribbble"; // plasmic-import: bWmFTef-m/icon

export const PlasmicSocialPlatformsSwitchInputs__VariantProps = new Array();

export const PlasmicSocialPlatformsSwitchInputs__ArgProps = new Array();

function PlasmicSocialPlatformsSwitchInputs__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <FormSwitchInput
        data-plasmic-name={"instagramSwitchInput"}
        data-plasmic-override={overrides.instagramSwitchInput}
        className={classNames("__wab_instance", sty.instagramSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper"}
            data-plasmic-override={overrides.contentWrapper}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper)}
          >
            <Icon6Icon
              className={classNames(projectcss.all, sty.svg__dfTBz)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___3EX3D
              )}
            >
              {"Instagram"}
            </div>
          </p.Stack>
        }
        name={"social.instagram"}
      />

      <FormSwitchInput
        data-plasmic-name={"facebookSwitchInput"}
        data-plasmic-override={overrides.facebookSwitchInput}
        className={classNames("__wab_instance", sty.facebookSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper2"}
            data-plasmic-override={overrides.contentWrapper2}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper2)}
          >
            <FacebookSquareFillIcon
              className={classNames(projectcss.all, sty.svg__a4Mnv)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__udGbk
              )}
            >
              {"Facebook"}
            </div>
          </p.Stack>
        }
        name={"social.facebook"}
      />

      <FormSwitchInput
        data-plasmic-name={"linkedInSwitchInput"}
        data-plasmic-override={overrides.linkedInSwitchInput}
        className={classNames("__wab_instance", sty.linkedInSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper3"}
            data-plasmic-override={overrides.contentWrapper3}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper3)}
          >
            <Icon10Icon
              className={classNames(projectcss.all, sty.svg__fNlXn)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kei7L
              )}
            >
              {"Linkedin"}
            </div>
          </p.Stack>
        }
        name={"social.linkedin"}
      />

      <FormSwitchInput
        data-plasmic-name={"twitterSwitchInput"}
        data-plasmic-override={overrides.twitterSwitchInput}
        className={classNames("__wab_instance", sty.twitterSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper4"}
            data-plasmic-override={overrides.contentWrapper4}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper4)}
          >
            <TwitterSquareFillIcon
              className={classNames(projectcss.all, sty.svg__fcK80)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qXyE8
              )}
            >
              {"Twitter"}
            </div>
          </p.Stack>
        }
        name={"social.twitter"}
      />

      <FormSwitchInput
        data-plasmic-name={"youtubeSwitchInput"}
        data-plasmic-override={overrides.youtubeSwitchInput}
        className={classNames("__wab_instance", sty.youtubeSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper5"}
            data-plasmic-override={overrides.contentWrapper5}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper5)}
          >
            <YoutubeSquareFillIcon
              className={classNames(projectcss.all, sty.svg__aiYKh)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ym009
              )}
            >
              {"Youtube"}
            </div>
          </p.Stack>
        }
        name={"social.youtube"}
      />

      <FormSwitchInput
        data-plasmic-name={"tiktokSwitchInput"}
        data-plasmic-override={overrides.tiktokSwitchInput}
        className={classNames("__wab_instance", sty.tiktokSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper6"}
            data-plasmic-override={overrides.contentWrapper6}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper6)}
          >
            <TiktokIcon
              className={classNames(projectcss.all, sty.svg__bI76Z)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__asmWs
              )}
            >
              {"Tik Tok"}
            </div>
          </p.Stack>
        }
        name={"social.tiktok"}
      />

      <FormSwitchInput
        data-plasmic-name={"githubSwitchInput"}
        data-plasmic-override={overrides.githubSwitchInput}
        className={classNames("__wab_instance", sty.githubSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper7"}
            data-plasmic-override={overrides.contentWrapper7}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper7)}
          >
            <GithubIcon
              className={classNames(projectcss.all, sty.svg__ysset)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___55Vm9
              )}
            >
              {"Github"}
            </div>
          </p.Stack>
        }
        name={"social.github"}
      />

      <FormSwitchInput
        data-plasmic-name={"dribbleSwitchInput"}
        data-plasmic-override={overrides.dribbleSwitchInput}
        className={classNames("__wab_instance", sty.dribbleSwitchInput)}
        content={
          <p.Stack
            as={"div"}
            data-plasmic-name={"contentWrapper8"}
            data-plasmic-override={overrides.contentWrapper8}
            hasGap={true}
            className={classNames(projectcss.all, sty.contentWrapper8)}
          >
            <DribbbleIcon
              className={classNames(projectcss.all, sty.svg__lceDh)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iWsfa
              )}
            >
              {"Dribble"}
            </div>
          </p.Stack>
        }
        name={"social.dribble"}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "instagramSwitchInput",
    "contentWrapper",
    "facebookSwitchInput",
    "contentWrapper2",
    "linkedInSwitchInput",
    "contentWrapper3",
    "twitterSwitchInput",
    "contentWrapper4",
    "youtubeSwitchInput",
    "contentWrapper5",
    "tiktokSwitchInput",
    "contentWrapper6",
    "githubSwitchInput",
    "contentWrapper7",
    "dribbleSwitchInput",
    "contentWrapper8"
  ],

  instagramSwitchInput: ["instagramSwitchInput", "contentWrapper"],
  contentWrapper: ["contentWrapper"],
  facebookSwitchInput: ["facebookSwitchInput", "contentWrapper2"],
  contentWrapper2: ["contentWrapper2"],
  linkedInSwitchInput: ["linkedInSwitchInput", "contentWrapper3"],
  contentWrapper3: ["contentWrapper3"],
  twitterSwitchInput: ["twitterSwitchInput", "contentWrapper4"],
  contentWrapper4: ["contentWrapper4"],
  youtubeSwitchInput: ["youtubeSwitchInput", "contentWrapper5"],
  contentWrapper5: ["contentWrapper5"],
  tiktokSwitchInput: ["tiktokSwitchInput", "contentWrapper6"],
  contentWrapper6: ["contentWrapper6"],
  githubSwitchInput: ["githubSwitchInput", "contentWrapper7"],
  contentWrapper7: ["contentWrapper7"],
  dribbleSwitchInput: ["dribbleSwitchInput", "contentWrapper8"],
  contentWrapper8: ["contentWrapper8"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSocialPlatformsSwitchInputs__ArgProps,
      internalVariantPropNames: PlasmicSocialPlatformsSwitchInputs__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicSocialPlatformsSwitchInputs__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSocialPlatformsSwitchInputs";
  } else {
    func.displayName = `PlasmicSocialPlatformsSwitchInputs.${nodeName}`;
  }
  return func;
}

export const PlasmicSocialPlatformsSwitchInputs = Object.assign(
  // Top-level PlasmicSocialPlatformsSwitchInputs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    instagramSwitchInput: makeNodeComponent("instagramSwitchInput"),
    contentWrapper: makeNodeComponent("contentWrapper"),
    facebookSwitchInput: makeNodeComponent("facebookSwitchInput"),
    contentWrapper2: makeNodeComponent("contentWrapper2"),
    linkedInSwitchInput: makeNodeComponent("linkedInSwitchInput"),
    contentWrapper3: makeNodeComponent("contentWrapper3"),
    twitterSwitchInput: makeNodeComponent("twitterSwitchInput"),
    contentWrapper4: makeNodeComponent("contentWrapper4"),
    youtubeSwitchInput: makeNodeComponent("youtubeSwitchInput"),
    contentWrapper5: makeNodeComponent("contentWrapper5"),
    tiktokSwitchInput: makeNodeComponent("tiktokSwitchInput"),
    contentWrapper6: makeNodeComponent("contentWrapper6"),
    githubSwitchInput: makeNodeComponent("githubSwitchInput"),
    contentWrapper7: makeNodeComponent("contentWrapper7"),
    dribbleSwitchInput: makeNodeComponent("dribbleSwitchInput"),
    contentWrapper8: makeNodeComponent("contentWrapper8"),
    // Metadata about props expected for PlasmicSocialPlatformsSwitchInputs
    internalVariantProps: PlasmicSocialPlatformsSwitchInputs__VariantProps,
    internalArgProps: PlasmicSocialPlatformsSwitchInputs__ArgProps
  }
);

export default PlasmicSocialPlatformsSwitchInputs;
/* prettier-ignore-end */
