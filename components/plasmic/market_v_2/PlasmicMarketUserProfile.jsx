// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: Kq0Npq6HpD
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import ChipUserProfile from "../../ChipUserProfile"; // plasmic-import: 0x8Ex9CEDPX/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as sty from "./PlasmicMarketUserProfile.module.css"; // plasmic-import: Kq0Npq6HpD/css

export const PlasmicMarketUserProfile__VariantProps = new Array();

export const PlasmicMarketUserProfile__ArgProps = new Array();

function PlasmicMarketUserProfile__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <ChipUserProfile
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      attributes={["rating"]}
      className={classNames("__wab_instance", sty.root)}
      navUserAvatar80={null}
    />
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicMarketUserProfile__ArgProps,
      internalVariantPropNames: PlasmicMarketUserProfile__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicMarketUserProfile__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicMarketUserProfile";
  } else {
    func.displayName = `PlasmicMarketUserProfile.${nodeName}`;
  }
  return func;
}

export const PlasmicMarketUserProfile = Object.assign(
  // Top-level PlasmicMarketUserProfile renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicMarketUserProfile
    internalVariantProps: PlasmicMarketUserProfile__VariantProps,
    internalArgProps: PlasmicMarketUserProfile__ArgProps
  }
);

export default PlasmicMarketUserProfile;
/* prettier-ignore-end */
