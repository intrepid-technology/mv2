// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: _JiJRs8HZJg
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarPrimary from "../../NavbarPrimary"; // plasmic-import: Wo-euFIot3l/component
import CardMemberProfile from "../../CardMemberProfile"; // plasmic-import: Jh4JXlZHnwY/component
import FooterB from "../../FooterB"; // plasmic-import: kxeO2gTzwxU/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: o9sjFZaOQJQZ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicTeamProfile.module.css"; // plasmic-import: _JiJRs8HZJg/css
import OfficeWorkIcon from "./icons/PlasmicIcon__OfficeWork"; // plasmic-import: b-UKc3bHG7/icon
import BriefOrdersIcon from "./icons/PlasmicIcon__BriefOrders"; // plasmic-import: IHBDow0Bv/icon
import JobPositionRoleIcon from "./icons/PlasmicIcon__JobPositionRole"; // plasmic-import: gXnq0rSCEb/icon
import LocationIcon from "./icons/PlasmicIcon__Location"; // plasmic-import: XbuUvkV9FO/icon

export const PlasmicTeamProfile__VariantProps = new Array();

export const PlasmicTeamProfile__ArgProps = new Array();

function PlasmicTeamProfile__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style global jsx>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarPrimary
            data-plasmic-name={"navbarPrimary"}
            data-plasmic-override={overrides.navbarPrimary}
            className={classNames("__wab_instance", sty.navbarPrimary)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"sectionProfileParent"}
            data-plasmic-override={overrides.sectionProfileParent}
            hasGap={true}
            className={classNames(defaultcss.all, sty.sectionProfileParent)}
          >
            <CardMemberProfile
              data-plasmic-name={"cardMemberProfile"}
              data-plasmic-override={overrides.cardMemberProfile}
              className={classNames("__wab_instance", sty.cardMemberProfile)}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"userProfileAbout"}
              data-plasmic-override={overrides.userProfileAbout}
              hasGap={true}
              className={classNames(defaultcss.all, sty.userProfileAbout)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__evBs
                )}
              >
                {"About"}
              </div>

              <div
                data-plasmic-name={"userDescription500CharMax"}
                data-plasmic-override={overrides.userDescription500CharMax}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.userDescription500CharMax
                )}
              >
                {
                  'One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about helplessly as he looked. "What\'s happened to me?" he tho'
                }
              </div>

              <div className={classNames(defaultcss.all, sty.box__s16XB)} />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box___4TwyU)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__y2UyR)}
                >
                  <div className={classNames(defaultcss.all, sty.box___67Grh)}>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__vfbUo)}
                    >
                      <OfficeWorkIcon
                        className={classNames(defaultcss.all, sty.svg__it53K)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"userCompanyName"}
                        data-plasmic-override={overrides.userCompanyName}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.userCompanyName
                        )}
                      >
                        {"Company name"}
                      </div>
                    </p.Stack>
                  </div>

                  <div className={classNames(defaultcss.all, sty.box__qivmq)}>
                    <div className={classNames(defaultcss.all, sty.box__e1JlK)}>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__wQdVg)}
                      >
                        <BriefOrdersIcon
                          className={classNames(
                            defaultcss.all,
                            sty.svg___5UEni
                          )}
                          role={"img"}
                        />

                        <div
                          data-plasmic-name={"userIndustry"}
                          data-plasmic-override={overrides.userIndustry}
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.userIndustry
                          )}
                        >
                          {"Position"}
                        </div>
                      </p.Stack>
                    </div>
                  </div>
                </p.Stack>

                <div className={classNames(defaultcss.all, sty.box__inSlI)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__emsfH)}
                  >
                    <div
                      className={classNames(defaultcss.all, sty.box___5LfDs)}
                    >
                      <div
                        className={classNames(defaultcss.all, sty.box__icGEo)}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__ir8N4)}
                        >
                          <JobPositionRoleIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__xaGe7
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"userRole"}
                            data-plasmic-override={overrides.userRole}
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.userRole
                            )}
                          >
                            {"Job Title"}
                          </div>
                        </p.Stack>
                      </div>
                    </div>

                    <div className={classNames(defaultcss.all, sty.box__uExKk)}>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box___1FefG)}
                      >
                        <LocationIcon
                          className={classNames(
                            defaultcss.all,
                            sty.svg___8Rq4T
                          )}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"userLocation"}
                          data-plasmic-override={overrides.userLocation}
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.userLocation
                          )}
                        >
                          <div
                            data-plasmic-name={"userCity"}
                            data-plasmic-override={overrides.userCity}
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.userCity
                            )}
                          >
                            {"City"}
                          </div>

                          <div
                            data-plasmic-name={"seperator"}
                            data-plasmic-override={overrides.seperator}
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.seperator
                            )}
                          >
                            {"|"}
                          </div>

                          <div
                            data-plasmic-name={"userCountry"}
                            data-plasmic-override={overrides.userCountry}
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.userCountry
                            )}
                          >
                            {"Country"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </div>
                  </p.Stack>
                </div>
              </p.Stack>

              <div className={classNames(defaultcss.all, sty.box__l9VAo)} />
            </p.Stack>
          </p.Stack>

          <FooterB
            data-plasmic-name={"footerB"}
            data-plasmic-override={overrides.footerB}
            className={classNames("__wab_instance", sty.footerB)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarPrimary",
    "sectionProfileParent",
    "cardMemberProfile",
    "userProfileAbout",
    "userDescription500CharMax",
    "userCompanyName",
    "userIndustry",
    "userRole",
    "userLocation",
    "userCity",
    "seperator",
    "userCountry",
    "footerB"
  ],

  navbarPrimary: ["navbarPrimary"],
  sectionProfileParent: [
    "sectionProfileParent",
    "cardMemberProfile",
    "userProfileAbout",
    "userDescription500CharMax",
    "userCompanyName",
    "userIndustry",
    "userRole",
    "userLocation",
    "userCity",
    "seperator",
    "userCountry"
  ],

  cardMemberProfile: ["cardMemberProfile"],
  userProfileAbout: [
    "userProfileAbout",
    "userDescription500CharMax",
    "userCompanyName",
    "userIndustry",
    "userRole",
    "userLocation",
    "userCity",
    "seperator",
    "userCountry"
  ],

  userDescription500CharMax: ["userDescription500CharMax"],
  userCompanyName: ["userCompanyName"],
  userIndustry: ["userIndustry"],
  userRole: ["userRole"],
  userLocation: ["userLocation", "userCity", "seperator", "userCountry"],
  userCity: ["userCity"],
  seperator: ["seperator"],
  userCountry: ["userCountry"],
  footerB: ["footerB"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTeamProfile__ArgProps,
      internalVariantPropNames: PlasmicTeamProfile__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicTeamProfile__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTeamProfile";
  } else {
    func.displayName = `PlasmicTeamProfile.${nodeName}`;
  }
  return func;
}

export const PlasmicTeamProfile = Object.assign(
  // Top-level PlasmicTeamProfile renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarPrimary: makeNodeComponent("navbarPrimary"),
    sectionProfileParent: makeNodeComponent("sectionProfileParent"),
    cardMemberProfile: makeNodeComponent("cardMemberProfile"),
    userProfileAbout: makeNodeComponent("userProfileAbout"),
    userDescription500CharMax: makeNodeComponent("userDescription500CharMax"),
    userCompanyName: makeNodeComponent("userCompanyName"),
    userIndustry: makeNodeComponent("userIndustry"),
    userRole: makeNodeComponent("userRole"),
    userLocation: makeNodeComponent("userLocation"),
    userCity: makeNodeComponent("userCity"),
    seperator: makeNodeComponent("seperator"),
    userCountry: makeNodeComponent("userCountry"),
    footerB: makeNodeComponent("footerB"),
    // Metadata about props expected for PlasmicTeamProfile
    internalVariantProps: PlasmicTeamProfile__VariantProps,
    internalArgProps: PlasmicTeamProfile__ArgProps
  }
);

export default PlasmicTeamProfile;
/* prettier-ignore-end */
