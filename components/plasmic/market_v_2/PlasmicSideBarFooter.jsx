// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: y532Y0sDIf
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import TextLinkUnderlinePrimary from "../../TextLinkUnderlinePrimary"; // plasmic-import: fFeX6kEAMB/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicSideBarFooter.module.css"; // plasmic-import: y532Y0sDIf/css

export const PlasmicSideBarFooter__VariantProps = new Array();

export const PlasmicSideBarFooter__ArgProps = new Array();

function PlasmicSideBarFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <TextLinkUnderlinePrimary
        className={classNames(
          "__wab_instance",
          sty.textLinkUnderlinePrimary__q9OKm
        )}
        size={"_16"}
        target={""}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__hiDuc
          )}
        >
          {"About"}
        </div>
      </TextLinkUnderlinePrimary>

      <TextLinkUnderlinePrimary
        className={classNames(
          "__wab_instance",
          sty.textLinkUnderlinePrimary__qsokV
        )}
        size={"_16"}
        target={"/terms"}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__swZbn
          )}
        >
          {"Terms"}
        </div>
      </TextLinkUnderlinePrimary>

      <TextLinkUnderlinePrimary
        className={classNames(
          "__wab_instance",
          sty.textLinkUnderlinePrimary__vOv1V
        )}
        size={"_16"}
        target={"/privacy"}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__jQ4No
          )}
        >
          {"Privacy"}
        </div>
      </TextLinkUnderlinePrimary>

      <TextLinkUnderlinePrimary
        className={classNames(
          "__wab_instance",
          sty.textLinkUnderlinePrimary___7JgrH
        )}
        size={"_16"}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__aktZk
          )}
        >
          {"Help"}
        </div>
      </TextLinkUnderlinePrimary>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSideBarFooter__ArgProps,
      internalVariantPropNames: PlasmicSideBarFooter__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicSideBarFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSideBarFooter";
  } else {
    func.displayName = `PlasmicSideBarFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicSideBarFooter = Object.assign(
  // Top-level PlasmicSideBarFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicSideBarFooter
    internalVariantProps: PlasmicSideBarFooter__VariantProps,
    internalArgProps: PlasmicSideBarFooter__ArgProps
  }
);

export default PlasmicSideBarFooter;
/* prettier-ignore-end */
