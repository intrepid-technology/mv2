// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: j8kezDqiX0q
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavbarInternal from "../../NavbarInternal"; // plasmic-import: BXWgCr5-vns/component
import NavbarMemberEdit from "../../NavbarMemberEdit"; // plasmic-import: oTyBGj7jMRD/component
import CardHeaderTitleDisplay from "../../CardHeaderTitleDisplay"; // plasmic-import: 1wS8JpmDTD/component
import CardHeaderTitlePrimary from "../../CardHeaderTitlePrimary"; // plasmic-import: hIka2k2fkY/component
import InputTextField from "../../InputTextField"; // plasmic-import: ATs3nXJ-Tjc/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: koVqNkx_82/component
import ButtonLinkPrimary from "../../ButtonLinkPrimary"; // plasmic-import: d7dGAYuRCt/component
import CardSocialConnectSwitch from "../../CardSocialConnectSwitch"; // plasmic-import: PjlQKkmde-/component
import SelectGroupDropdownPrimary from "../../SelectGroupDropdownPrimary"; // plasmic-import: -teiDn_7Z-/component
import InputTextForm from "../../InputTextForm"; // plasmic-import: Hp_zc6XLro/component
import SwitchTextGroupPrimary from "../../SwitchTextGroupPrimary"; // plasmic-import: dxvh7jp8PC/component
import CheckboxTextPrimary from "../../CheckboxTextPrimary"; // plasmic-import: DzJ8mMkLUy2/component
import FooterB from "../../FooterB"; // plasmic-import: kxeO2gTzwxU/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicEditmembersettings.module.css"; // plasmic-import: j8kezDqiX0q/css

export const PlasmicEditmembersettings__VariantProps = new Array();

export const PlasmicEditmembersettings__ArgProps = new Array();

function PlasmicEditmembersettings__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarInternal
            data-plasmic-name={"navbarInternal"}
            data-plasmic-override={overrides.navbarInternal}
            className={classNames("__wab_instance", sty.navbarInternal)}
          />

          <NavbarMemberEdit
            data-plasmic-name={"navbarMemberEdit"}
            data-plasmic-override={overrides.navbarMemberEdit}
            className={classNames("__wab_instance", sty.navbarMemberEdit)}
            navItems={[
              "notifications",
              "messages",
              "lists",
              "reviews",
              "wallet"
            ]}
            selected={"settings"}
          />

          <p.Stack
            as={"section"}
            data-plasmic-name={"sectionMemberSettingsEmail"}
            data-plasmic-override={overrides.sectionMemberSettingsEmail}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionMemberSettingsEmail
            )}
          >
            <CardHeaderTitleDisplay
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay__xaX3Z
              )}
              size={"_720"}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text___1J1Ku
                  )}
                >
                  {"Manage your account"}
                </div>
              }
              textDisplay={"Settings"}
              textSubhead={"Maintain a safe and secure community experience  "}
            />

            <p.Stack
              as={"form"}
              data-plasmic-name={"formMemberEditEmail"}
              data-plasmic-override={overrides.formMemberEditEmail}
              hasGap={true}
              className={classNames(defaultcss.all, sty.formMemberEditEmail)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__pZx7J)}
              >
                <CardHeaderTitlePrimary
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitlePrimary__vfOg5
                  )}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__stdky
                      )}
                    >
                      {
                        "Enter a new email address to update the one you use to log in"
                      }
                    </div>
                  }
                >
                  {"Email"}
                </CardHeaderTitlePrimary>

                <InputTextField
                  data-plasmic-name={"inputTextField"}
                  data-plasmic-override={overrides.inputTextField}
                  className={classNames("__wab_instance", sty.inputTextField)}
                  size={"_540"}
                  type={"secondary"}
                />
              </p.Stack>

              <ButtonPrimary
                className={classNames(
                  "__wab_instance",
                  sty.buttonPrimary__n7To8
                )}
                size={"_140"}
                type={"primary"}
              >
                {"Update email"}
              </ButtonPrimary>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"sectionMemberSettingsPasswordReset"}
            data-plasmic-override={overrides.sectionMemberSettingsPasswordReset}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionMemberSettingsPasswordReset
            )}
          >
            <p.Stack
              as={"section"}
              data-plasmic-name={"sectionMemberPasswordReset"}
              data-plasmic-override={overrides.sectionMemberPasswordReset}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.sectionMemberPasswordReset
              )}
            >
              <CardHeaderTitlePrimary
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitlePrimary__rmGSc
                )}
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__pucdn
                    )}
                  >
                    {
                      "click the button to reset your password and we will send you a verification link"
                    }
                  </div>
                }
              >
                {"Password reset"}
              </CardHeaderTitlePrimary>

              <ButtonLinkPrimary
                data-plasmic-name={"buttonLinkPrimary"}
                data-plasmic-override={overrides.buttonLinkPrimary}
                border={"border"}
                className={classNames("__wab_instance", sty.buttonLinkPrimary)}
                height={"_40"}
                text={"Send password reset link"}
                type={"ghost"}
                width={"_270"}
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"sectionMemberSettingsLoginConnections"}
            data-plasmic-override={
              overrides.sectionMemberSettingsLoginConnections
            }
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionMemberSettingsLoginConnections
            )}
          >
            <p.Stack
              as={"section"}
              data-plasmic-name={"sectionMemberLoginConnections"}
              data-plasmic-override={overrides.sectionMemberLoginConnections}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.sectionMemberLoginConnections
              )}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__ta5FN)}
              >
                <CardHeaderTitlePrimary
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitlePrimary__qzg0M
                  )}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__lhHaq
                      )}
                    >
                      {"Connect your social accounts to log in to Intrepid."}
                    </div>
                  }
                >
                  {"Login connections"}
                </CardHeaderTitlePrimary>

                <div
                  data-plasmic-name={"inputGroupMemberLoginSocial"}
                  data-plasmic-override={overrides.inputGroupMemberLoginSocial}
                  className={classNames(
                    defaultcss.all,
                    sty.inputGroupMemberLoginSocial
                  )}
                >
                  <CardSocialConnectSwitch
                    className={classNames(
                      "__wab_instance",
                      sty.cardSocialConnectSwitch___6Ds01
                    )}
                    socialNetwork={"google"}
                    width={"_540"}
                  />

                  <CardSocialConnectSwitch
                    className={classNames(
                      "__wab_instance",
                      sty.cardSocialConnectSwitch__lnZ66
                    )}
                    socialNetwork={"facebook"}
                    width={"_540"}
                  />

                  <CardSocialConnectSwitch
                    className={classNames(
                      "__wab_instance",
                      sty.cardSocialConnectSwitch__fsmhh
                    )}
                    socialNetwork={"twitter"}
                    width={"_540"}
                  />

                  <CardSocialConnectSwitch
                    className={classNames(
                      "__wab_instance",
                      sty.cardSocialConnectSwitch__uTrrq
                    )}
                    socialNetwork={"linkedin"}
                    width={"_540"}
                  />

                  <CardSocialConnectSwitch
                    className={classNames(
                      "__wab_instance",
                      sty.cardSocialConnectSwitch__oiQix
                    )}
                    socialNetwork={"github"}
                    width={"_540"}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"sectionMemberMobileNumber"}
            data-plasmic-override={overrides.sectionMemberMobileNumber}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionMemberMobileNumber
            )}
          >
            <p.Stack
              as={"form"}
              data-plasmic-name={"formMemberEditMobileNumber"}
              data-plasmic-override={overrides.formMemberEditMobileNumber}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.formMemberEditMobileNumber
              )}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__ltCq0)}
              >
                <CardHeaderTitlePrimary
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitlePrimary__xC5L
                  )}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__lzt1R
                      )}
                    >
                      {"Membership perks and offers sent directly to you"}
                    </div>
                  }
                >
                  {"Mobile number"}
                </CardHeaderTitlePrimary>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"memberLocationGroup"}
                  data-plasmic-override={overrides.memberLocationGroup}
                  hasGap={true}
                  className={classNames(
                    defaultcss.all,
                    sty.memberLocationGroup
                  )}
                >
                  <SelectGroupDropdownPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.selectGroupDropdownPrimary__yUjcX
                    )}
                    description={"description"}
                    width={"_144"}
                  >
                    {"Country"}
                  </SelectGroupDropdownPrimary>

                  <InputTextForm
                    className={classNames(
                      "__wab_instance",
                      sty.inputTextForm__skNv7
                    )}
                    labelHeadline={"Number"}
                    subhead={"subhead"}
                    type={"primary"}
                    width={"_360"}
                  />
                </p.Stack>
              </p.Stack>

              <ButtonPrimary
                className={classNames(
                  "__wab_instance",
                  sty.buttonPrimary__zWkB3
                )}
                size={"_140"}
                type={"primary"}
              >
                {"Save mobile"}
              </ButtonPrimary>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"sectionMemberSettingsAddress"}
            data-plasmic-override={overrides.sectionMemberSettingsAddress}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionMemberSettingsAddress
            )}
          >
            <p.Stack
              as={"form"}
              data-plasmic-name={"formMemberEditAddress"}
              data-plasmic-override={overrides.formMemberEditAddress}
              hasGap={true}
              className={classNames(defaultcss.all, sty.formMemberEditAddress)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__zJ5N8)}
              >
                <CardHeaderTitlePrimary
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitlePrimary__lgaOa
                  )}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__bNhrh
                      )}
                    >
                      {
                        "Add your address if you want to appear in search results for local businesses"
                      }
                    </div>
                  }
                >
                  {"Address"}
                </CardHeaderTitlePrimary>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__qvHgH)}
                >
                  <InputTextForm
                    labelHeadline={"Address"}
                    subhead={"subhead"}
                    type={"primary"}
                    width={"_540"}
                  />

                  <InputTextForm
                    label={"label"}
                    labelHeadline={"Number"}
                    subhead={"subhead"}
                    type={"primary"}
                    width={"_540"}
                  />

                  <SelectGroupDropdownPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.selectGroupDropdownPrimary___1V7D4
                    )}
                    description={"description"}
                    width={"_360"}
                  >
                    {"Country"}
                  </SelectGroupDropdownPrimary>

                  <InputTextForm
                    className={classNames(
                      "__wab_instance",
                      sty.inputTextForm__voLi1
                    )}
                    labelHeadline={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__peQdh
                        )}
                      >
                        {"City"}
                      </div>
                    }
                    subhead={"subhead"}
                    type={"primary"}
                    width={"_360"}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__nosSi)}
                  >
                    <InputTextForm
                      labelHeadline={"Province/State"}
                      subhead={"subhead"}
                      type={"primary"}
                      width={"_160"}
                    />

                    <InputTextForm
                      labelHeadline={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.text__ay7A6
                          )}
                        >
                          {"Zip/Postal code"}
                        </div>
                      }
                      subhead={"subhead"}
                      type={"primary"}
                      width={"_160"}
                    />
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <ButtonPrimary
                className={classNames(
                  "__wab_instance",
                  sty.buttonPrimary__p09Nl
                )}
                size={"_140"}
                type={"primary"}
              >
                {"Save address"}
              </ButtonPrimary>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"sectionMemberNotifications"}
            data-plasmic-override={overrides.sectionMemberNotifications}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionMemberNotifications
            )}
          >
            <CardHeaderTitleDisplay
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay__zEnmS
              )}
              headings={["title"]}
              size={"_720"}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__aYd0W
                  )}
                >
                  {"Notifications"}
                </div>
              }
              textDisplay={"Profile edit"}
              textSubhead={"Get notified about activity on Intrepid"}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"notificationPushEmail"}
              data-plasmic-override={overrides.notificationPushEmail}
              hasGap={true}
              className={classNames(defaultcss.all, sty.notificationPushEmail)}
            >
              <CardHeaderTitlePrimary
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitlePrimary__czoXf
                )}
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__xzQ8E
                    )}
                  >
                    {"Updates when you're away from the community."}
                  </div>
                }
              >
                {"Speak easy"}
              </CardHeaderTitlePrimary>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox___51Yhm)}
              >
                <SwitchTextGroupPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.switchTextGroupPrimary__o3R2G
                  )}
                  descriptionText={
                    "What's going on in the community - sent to your mobile"
                  }
                  textGroup={"Push notifications"}
                />

                <SwitchTextGroupPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.switchTextGroupPrimary__mLzG
                  )}
                  descriptionText={
                    "What's going on in the community - sent to your inbox"
                  }
                  textGroup={"Email notifications"}
                />
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"notificationActivity"}
              data-plasmic-override={overrides.notificationActivity}
              hasGap={true}
              className={classNames(defaultcss.all, sty.notificationActivity)}
            >
              <CardHeaderTitlePrimary
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitlePrimary___8JzHe
                )}
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__pBeAe
                    )}
                  >
                    {
                      "Get notifications from your interactions within the community."
                    }
                  </div>
                }
              >
                {"Heads up"}
              </CardHeaderTitlePrimary>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox___4KphC)}
              >
                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary__fZLt
                  )}
                  text={"_16"}
                >
                  {"New subscriber"}
                </CheckboxTextPrimary>

                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary___2Bttz
                  )}
                  text={"_16"}
                >
                  {"New tip"}
                </CheckboxTextPrimary>

                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary__uceV2
                  )}
                  text={"_16"}
                >
                  {"New review"}
                </CheckboxTextPrimary>

                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary__qxgB5
                  )}
                  text={"_16"}
                >
                  {"New comment"}
                </CheckboxTextPrimary>

                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary__wQ3En
                  )}
                  text={"_16"}
                >
                  {"New follower"}
                </CheckboxTextPrimary>

                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary__qQc8Q
                  )}
                  text={"_16"}
                >
                  {"New connection request"}
                </CheckboxTextPrimary>

                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary___2QH1
                  )}
                  text={"_16"}
                >
                  {"Added to list"}
                </CheckboxTextPrimary>

                <CheckboxTextPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.checkboxTextPrimary__j2M9C
                  )}
                  text={"_16"}
                >
                  {"New reaction"}
                </CheckboxTextPrimary>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"notificationNewsEvents"}
              data-plasmic-override={overrides.notificationNewsEvents}
              hasGap={true}
              className={classNames(defaultcss.all, sty.notificationNewsEvents)}
            >
              <CardHeaderTitlePrimary
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitlePrimary__yvvDp
                )}
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__slsfD
                    )}
                  >
                    {
                      "All the fun things going on in the community- be in the know."
                    }
                  </div>
                }
              >
                {"Happenings"}
              </CardHeaderTitlePrimary>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__iUdaa)}
              >
                <SwitchTextGroupPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.switchTextGroupPrimary__y6Ojs
                  )}
                  descriptionText={
                    "Our weekly newsletter packed with fun stuff"
                  }
                  textGroup={"Email newsletter"}
                />

                <SwitchTextGroupPrimary
                  className={classNames(
                    "__wab_instance",
                    sty.switchTextGroupPrimary__p7Gag
                  )}
                  descriptionText={"Meet members live and in person"}
                  textGroup={"Events and meetups"}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"sectionMemberSettingsDeleteAccount"}
            data-plasmic-override={overrides.sectionMemberSettingsDeleteAccount}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionMemberSettingsDeleteAccount
            )}
          >
            <p.Stack
              as={"section"}
              data-plasmic-name={"sectionMemberDeleteAccount"}
              data-plasmic-override={overrides.sectionMemberDeleteAccount}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.sectionMemberDeleteAccount
              )}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox___6BojG)}
              >
                <CardHeaderTitlePrimary
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitlePrimary___84IO
                  )}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__rRcFg
                      )}
                    >
                      {
                        "Permanently remove your account and all of its contents from the Intrepid community. This action is not reversible, so please continue with caution."
                      }
                    </div>
                  }
                >
                  {"Delete account"}
                </CardHeaderTitlePrimary>
              </p.Stack>

              <ButtonPrimary
                className={classNames(
                  "__wab_instance",
                  sty.buttonPrimary__vBKf7
                )}
                color={"caution"}
                size={"_140"}
                type={"ghost"}
              >
                {"Delete account"}
              </ButtonPrimary>
            </p.Stack>
          </p.Stack>

          <FooterB
            data-plasmic-name={"footerB"}
            data-plasmic-override={overrides.footerB}
            className={classNames("__wab_instance", sty.footerB)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarInternal",
    "navbarMemberEdit",
    "sectionMemberSettingsEmail",
    "formMemberEditEmail",
    "inputTextField",
    "sectionMemberSettingsPasswordReset",
    "sectionMemberPasswordReset",
    "buttonLinkPrimary",
    "sectionMemberSettingsLoginConnections",
    "sectionMemberLoginConnections",
    "inputGroupMemberLoginSocial",
    "sectionMemberMobileNumber",
    "formMemberEditMobileNumber",
    "memberLocationGroup",
    "sectionMemberSettingsAddress",
    "formMemberEditAddress",
    "sectionMemberNotifications",
    "notificationPushEmail",
    "notificationActivity",
    "notificationNewsEvents",
    "sectionMemberSettingsDeleteAccount",
    "sectionMemberDeleteAccount",
    "footerB"
  ],

  navbarInternal: ["navbarInternal"],
  navbarMemberEdit: ["navbarMemberEdit"],
  sectionMemberSettingsEmail: [
    "sectionMemberSettingsEmail",
    "formMemberEditEmail",
    "inputTextField"
  ],

  formMemberEditEmail: ["formMemberEditEmail", "inputTextField"],
  inputTextField: ["inputTextField"],
  sectionMemberSettingsPasswordReset: [
    "sectionMemberSettingsPasswordReset",
    "sectionMemberPasswordReset",
    "buttonLinkPrimary"
  ],

  sectionMemberPasswordReset: [
    "sectionMemberPasswordReset",
    "buttonLinkPrimary"
  ],

  buttonLinkPrimary: ["buttonLinkPrimary"],
  sectionMemberSettingsLoginConnections: [
    "sectionMemberSettingsLoginConnections",
    "sectionMemberLoginConnections",
    "inputGroupMemberLoginSocial"
  ],

  sectionMemberLoginConnections: [
    "sectionMemberLoginConnections",
    "inputGroupMemberLoginSocial"
  ],

  inputGroupMemberLoginSocial: ["inputGroupMemberLoginSocial"],
  sectionMemberMobileNumber: [
    "sectionMemberMobileNumber",
    "formMemberEditMobileNumber",
    "memberLocationGroup"
  ],

  formMemberEditMobileNumber: [
    "formMemberEditMobileNumber",
    "memberLocationGroup"
  ],

  memberLocationGroup: ["memberLocationGroup"],
  sectionMemberSettingsAddress: [
    "sectionMemberSettingsAddress",
    "formMemberEditAddress"
  ],

  formMemberEditAddress: ["formMemberEditAddress"],
  sectionMemberNotifications: [
    "sectionMemberNotifications",
    "notificationPushEmail",
    "notificationActivity",
    "notificationNewsEvents"
  ],

  notificationPushEmail: ["notificationPushEmail"],
  notificationActivity: ["notificationActivity"],
  notificationNewsEvents: ["notificationNewsEvents"],
  sectionMemberSettingsDeleteAccount: [
    "sectionMemberSettingsDeleteAccount",
    "sectionMemberDeleteAccount"
  ],

  sectionMemberDeleteAccount: ["sectionMemberDeleteAccount"],
  footerB: ["footerB"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicEditmembersettings__ArgProps,
      internalVariantPropNames: PlasmicEditmembersettings__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicEditmembersettings__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicEditmembersettings";
  } else {
    func.displayName = `PlasmicEditmembersettings.${nodeName}`;
  }
  return func;
}

export const PlasmicEditmembersettings = Object.assign(
  // Top-level PlasmicEditmembersettings renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarInternal: makeNodeComponent("navbarInternal"),
    navbarMemberEdit: makeNodeComponent("navbarMemberEdit"),
    sectionMemberSettingsEmail: makeNodeComponent("sectionMemberSettingsEmail"),
    formMemberEditEmail: makeNodeComponent("formMemberEditEmail"),
    inputTextField: makeNodeComponent("inputTextField"),
    sectionMemberSettingsPasswordReset: makeNodeComponent(
      "sectionMemberSettingsPasswordReset"
    ),

    sectionMemberPasswordReset: makeNodeComponent("sectionMemberPasswordReset"),
    buttonLinkPrimary: makeNodeComponent("buttonLinkPrimary"),
    sectionMemberSettingsLoginConnections: makeNodeComponent(
      "sectionMemberSettingsLoginConnections"
    ),

    sectionMemberLoginConnections: makeNodeComponent(
      "sectionMemberLoginConnections"
    ),

    inputGroupMemberLoginSocial: makeNodeComponent(
      "inputGroupMemberLoginSocial"
    ),

    sectionMemberMobileNumber: makeNodeComponent("sectionMemberMobileNumber"),
    formMemberEditMobileNumber: makeNodeComponent("formMemberEditMobileNumber"),
    memberLocationGroup: makeNodeComponent("memberLocationGroup"),
    sectionMemberSettingsAddress: makeNodeComponent(
      "sectionMemberSettingsAddress"
    ),

    formMemberEditAddress: makeNodeComponent("formMemberEditAddress"),
    sectionMemberNotifications: makeNodeComponent("sectionMemberNotifications"),
    notificationPushEmail: makeNodeComponent("notificationPushEmail"),
    notificationActivity: makeNodeComponent("notificationActivity"),
    notificationNewsEvents: makeNodeComponent("notificationNewsEvents"),
    sectionMemberSettingsDeleteAccount: makeNodeComponent(
      "sectionMemberSettingsDeleteAccount"
    ),

    sectionMemberDeleteAccount: makeNodeComponent("sectionMemberDeleteAccount"),
    footerB: makeNodeComponent("footerB"),
    // Metadata about props expected for PlasmicEditmembersettings
    internalVariantProps: PlasmicEditmembersettings__VariantProps,
    internalArgProps: PlasmicEditmembersettings__ArgProps
  }
);

export default PlasmicEditmembersettings;
/* prettier-ignore-end */
