// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: TN5u_5IVRmW
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import PricingTableHeadlineCard from "../../PricingTableHeadlineCard"; // plasmic-import: zy3wpM99j_/component
import PricingTableHeadlinePriceCard from "../../PricingTableHeadlinePriceCard"; // plasmic-import: _lVEBPxny8/component
import PricingPageElementTeamBlock from "../../PricingPageElementTeamBlock"; // plasmic-import: XT0p4nILA-/component
import PricingPageElementFeaturesBlock from "../../PricingPageElementFeaturesBlock"; // plasmic-import: V3M8MRUkN2Q/component
import PricingPageElementServiceBlock from "../../PricingPageElementServiceBlock"; // plasmic-import: 7N2UMf446In/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: koVqNkx_82/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicPricingTable.module.css"; // plasmic-import: TN5u_5IVRmW/css
import Icon164Icon from "./icons/PlasmicIcon__Icon164"; // plasmic-import: ly7C2Lrvqk/icon
import Icon122Icon from "./icons/PlasmicIcon__Icon122"; // plasmic-import: 5y-W1ac1tp/icon
import ListingIcon from "./icons/PlasmicIcon__Listing"; // plasmic-import: NNbE63A0Ys/icon
import Icon169Icon from "./icons/PlasmicIcon__Icon169"; // plasmic-import: kZwjesU0eU/icon

export const PlasmicPricingTable__VariantProps = new Array("_switch");

export const PlasmicPricingTable__ArgProps = new Array(
  "children",
  "slot",
  "slot2",
  "slot3",
  "slot4",
  "slot5",
  "slot6",
  "slot7",
  "slot8",
  "slot9",
  "slot10",
  "slot11",
  "slot12",
  "slot13",
  "slot14",
  "slot15",
  "slot16",
  "slot17",
  "slot18",
  "slot19",
  "slot20",
  "slot21",
  "slot22",
  "slot23",
  "slot24",
  "slot25",
  "slot26",
  "slot27",
  "slot28"
);

function PlasmicPricingTable__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return true ? (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root, {
        [sty.root___switch]: hasVariant(variants, "_switch", "_switch")
      })}
    >
      <PricingTableHeadlineCard
        data-plasmic-name={"pricingTableHeadlineCard"}
        data-plasmic-override={overrides.pricingTableHeadlineCard}
        className={classNames("__wab_instance", sty.pricingTableHeadlineCard)}
        slot={
          <div
            data-plasmic-name={"box"}
            data-plasmic-override={overrides.box}
            className={classNames(defaultcss.all, sty.box)}
          >
            {p.renderPlasmicSlot({
              defaultContents:
                "Choose if you are an independent creative professional, solopreneur, or founder getting ready to grow your startup.",
              value: args.slot,
              className: classNames(sty.slotSlot)
            })}
          </div>
        }
        slot2={p.renderPlasmicSlot({
          defaultContents: "Partner",
          value: args.slot21
        })}
      >
        {p.renderPlasmicSlot({
          defaultContents: "Pro",
          value: args.children
        })}
      </PricingTableHeadlineCard>

      {true ? (
        <p.Stack
          as={"div"}
          data-plasmic-name={"pricingTableDropDownDrawerParent"}
          data-plasmic-override={overrides.pricingTableDropDownDrawerParent}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            sty.pricingTableDropDownDrawerParent,
            {
              [sty.pricingTableDropDownDrawerParent___switch]: hasVariant(
                variants,
                "_switch",
                "_switch"
              )
            }
          )}
        >
          <PricingTableHeadlinePriceCard
            data-plasmic-name={"pricingTableHeadlinePriceCard"}
            data-plasmic-override={overrides.pricingTableHeadlinePriceCard}
            className={classNames(
              "__wab_instance",
              sty.pricingTableHeadlinePriceCard
            )}
            slot={p.renderPlasmicSlot({
              defaultContents: (
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box___3Db6E
                  )}
                >
                  {
                    "Get all the tools you need to grow a global audience and build a valuable business."
                  }
                </div>
              ),

              value: args.slot3
            })}
            slot2={p.renderPlasmicSlot({
              defaultContents: (
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__wZbrp
                  )}
                >
                  {"$"}
                </div>
              ),

              value: args.slot23
            })}
            slot3={p.renderPlasmicSlot({
              defaultContents: (
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__zt6PV
                  )}
                >
                  {"50"}
                </div>
              ),

              value: args.slot2
            })}
            slot4={p.renderPlasmicSlot({
              defaultContents: (
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__tScVb
                  )}
                >
                  {"/year"}
                </div>
              ),

              value: args.slot22
            })}
          >
            {p.renderPlasmicSlot({
              defaultContents: "Membership",
              value: args.slot24
            })}
          </PricingTableHeadlinePriceCard>

          <p.Stack
            as={"div"}
            data-plasmic-name={"pricingTableDropDownChildItems"}
            data-plasmic-override={overrides.pricingTableDropDownChildItems}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.pricingTableDropDownChildItems
            )}
          >
            <PricingPageElementTeamBlock
              data-plasmic-name={"pricingPageElementTeamBlock"}
              data-plasmic-override={overrides.pricingPageElementTeamBlock}
              className={classNames(
                "__wab_instance",
                sty.pricingPageElementTeamBlock
              )}
              slot={p.renderPlasmicSlot({
                defaultContents: "5",
                value: args.slot4
              })}
            >
              {p.renderPlasmicSlot({
                defaultContents: "Team members included",
                value: args.slot19
              })}
            </PricingPageElementTeamBlock>

            <PricingPageElementFeaturesBlock
              data-plasmic-name={"pricingPageElementFeaturesBlock"}
              data-plasmic-override={overrides.pricingPageElementFeaturesBlock}
              className={classNames(
                "__wab_instance",
                sty.pricingPageElementFeaturesBlock
              )}
              slot={p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__wD7Qq
                    )}
                  >
                    {"feature value proposition"}
                  </div>
                ),

                value: args.slot15
              })}
              slot2={p.renderPlasmicSlot({
                defaultContents: "feature value proposition",
                value: args.slot16
              })}
              slot3={p.renderPlasmicSlot({
                defaultContents: "feature value proposition",
                value: args.slot17
              })}
              slot4={p.renderPlasmicSlot({
                defaultContents: "feature value proposition",
                value: args.slot18
              })}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__cIzHl
                    )}
                  >
                    {"feature value proposition"}
                  </div>
                ),

                value: args.slot14
              })}
            </PricingPageElementFeaturesBlock>

            <PricingPageElementServiceBlock
              data-plasmic-name={"pricingPageElementServiceBlock"}
              data-plasmic-override={overrides.pricingPageElementServiceBlock}
              className={classNames(
                "__wab_instance",
                sty.pricingPageElementServiceBlock
              )}
              featurevalueText={p.renderPlasmicSlot({
                defaultContents: "Priority upgrade per listing",
                value: args.slot9
              })}
              slot={p.renderPlasmicSlot({
                defaultContents: "3",
                value: args.slot5
              })}
              slot10={p.renderPlasmicSlot({
                defaultContents: "Standard rate per listing",
                value: args.slot10
              })}
              slot11={p.renderPlasmicSlot({
                defaultContents: "Payment processing fees",
                value: args.slot13
              })}
              slot12={p.renderPlasmicSlot({
                defaultContents: (
                  <Icon164Icon
                    className={classNames(defaultcss.all, sty.svg__tvas)}
                    role={"img"}
                  />
                ),

                value: args.slot28
              })}
              slot13={p.renderPlasmicSlot({
                defaultContents: (
                  <Icon122Icon
                    className={classNames(defaultcss.all, sty.svg__uAas)}
                    role={"img"}
                  />
                ),

                value: args.slot27
              })}
              slot14={p.renderPlasmicSlot({
                defaultContents: (
                  <ListingIcon
                    className={classNames(defaultcss.all, sty.svg__kKdiI)}
                    role={"img"}
                  />
                ),

                value: args.slot26
              })}
              slot15={p.renderPlasmicSlot({
                defaultContents: (
                  <Icon169Icon
                    className={classNames(defaultcss.all, sty.svg__xFvFm)}
                    role={"img"}
                  />
                ),

                value: args.slot25
              })}
              slot2={p.renderPlasmicSlot({
                defaultContents: "1",
                value: args.slot6
              })}
              slot3={p.renderPlasmicSlot({
                defaultContents: "1",
                value: args.slot7
              })}
              slot4={p.renderPlasmicSlot({
                defaultContents: "Service rate on earned income",
                value: args.slot12
              })}
              slot5={p.renderPlasmicSlot({
                defaultContents: "$",
                value: args.slot8
              })}
              slot7={p.renderPlasmicSlot({
                defaultContents: "$",
                value: args.slot11
              })}
            />
          </p.Stack>
        </p.Stack>
      ) : null}

      <ButtonPrimary
        data-plasmic-name={"partnerMembership"}
        data-plasmic-override={overrides.partnerMembership}
        className={classNames("__wab_instance", sty.partnerMembership)}
        color={"brand"}
        size={"_360"}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box___7UBdg
              )}
            >
              {"Get started"}
            </div>
          ),

          value: args.slot20
        })}
      </ButtonPrimary>
    </p.Stack>
  ) : null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "pricingTableHeadlineCard",
    "box",
    "pricingTableDropDownDrawerParent",
    "pricingTableHeadlinePriceCard",
    "pricingTableDropDownChildItems",
    "pricingPageElementTeamBlock",
    "pricingPageElementFeaturesBlock",
    "pricingPageElementServiceBlock",
    "partnerMembership"
  ],

  pricingTableHeadlineCard: ["pricingTableHeadlineCard", "box"],
  box: ["box"],
  pricingTableDropDownDrawerParent: [
    "pricingTableDropDownDrawerParent",
    "pricingTableHeadlinePriceCard",
    "pricingTableDropDownChildItems",
    "pricingPageElementTeamBlock",
    "pricingPageElementFeaturesBlock",
    "pricingPageElementServiceBlock"
  ],

  pricingTableHeadlinePriceCard: ["pricingTableHeadlinePriceCard"],
  pricingTableDropDownChildItems: [
    "pricingTableDropDownChildItems",
    "pricingPageElementTeamBlock",
    "pricingPageElementFeaturesBlock",
    "pricingPageElementServiceBlock"
  ],

  pricingPageElementTeamBlock: ["pricingPageElementTeamBlock"],
  pricingPageElementFeaturesBlock: ["pricingPageElementFeaturesBlock"],
  pricingPageElementServiceBlock: ["pricingPageElementServiceBlock"],
  partnerMembership: ["partnerMembership"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricingTable__ArgProps,
      internalVariantPropNames: PlasmicPricingTable__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPricingTable__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricingTable";
  } else {
    func.displayName = `PlasmicPricingTable.${nodeName}`;
  }
  return func;
}

export const PlasmicPricingTable = Object.assign(
  // Top-level PlasmicPricingTable renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    pricingTableHeadlineCard: makeNodeComponent("pricingTableHeadlineCard"),
    box: makeNodeComponent("box"),
    pricingTableDropDownDrawerParent: makeNodeComponent(
      "pricingTableDropDownDrawerParent"
    ),

    pricingTableHeadlinePriceCard: makeNodeComponent(
      "pricingTableHeadlinePriceCard"
    ),

    pricingTableDropDownChildItems: makeNodeComponent(
      "pricingTableDropDownChildItems"
    ),

    pricingPageElementTeamBlock: makeNodeComponent(
      "pricingPageElementTeamBlock"
    ),

    pricingPageElementFeaturesBlock: makeNodeComponent(
      "pricingPageElementFeaturesBlock"
    ),

    pricingPageElementServiceBlock: makeNodeComponent(
      "pricingPageElementServiceBlock"
    ),

    partnerMembership: makeNodeComponent("partnerMembership"),
    // Metadata about props expected for PlasmicPricingTable
    internalVariantProps: PlasmicPricingTable__VariantProps,
    internalArgProps: PlasmicPricingTable__ArgProps
  }
);

export default PlasmicPricingTable;
/* prettier-ignore-end */
