// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: 62pZUpsW52
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import InputCardNumberField from "../../InputCardNumberField"; // plasmic-import: gjyxgsDEI-/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import sty from "./PlasmicSectionServiceContent.module.css"; // plasmic-import: 62pZUpsW52/css

export const PlasmicSectionServiceContent__VariantProps = new Array(
  "breadcrumbs",
  "serviceType"
);

export const PlasmicSectionServiceContent__ArgProps = new Array("children");

function PlasmicSectionServiceContent__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      {(hasVariant(variants, "breadcrumbs", "breadcrumbs") ? false : true)
        ? p.renderPlasmicSlot({
            defaultContents: hasVariant(
              variants,
              "serviceType",
              "webMultiplePage"
            )
              ? "Web | Application | Multi-page"
              : hasVariant(variants, "serviceType", "webSinglePage")
              ? "Web | Application | Single page"
              : hasVariant(variants, "serviceType", "usabilityTesting")
              ? "UX Design | Usability"
              : hasVariant(variants, "serviceType", "wireframes")
              ? "UX Design | Wireframes"
              : hasVariant(variants, "serviceType", "prototype")
              ? "UX Design | Prototype"
              : hasVariant(variants, "serviceType", "userResearch")
              ? "UX Design | User Research"
              : hasVariant(variants, "serviceType", "designSystem")
              ? "Brand Design | Design System"
              : hasVariant(variants, "serviceType", "slidePresentation")
              ? "Brand Design | Presentation"
              : hasVariant(variants, "serviceType", "mobileCommerce")
              ? "Mobile | Application | Ecommerce"
              : hasVariant(variants, "serviceType", "mobile")
              ? "Mobile | application"
              : hasVariant(variants, "serviceType", "webEcommerce")
              ? "Web | Application | Multi-page"
              : "Web | Application | Multi-Screen",
            value: args.children,
            className: classNames(sty.slotTargetChildren, {
              [sty.slotTargetChildren__breadcrumbs]: hasVariant(
                variants,
                "breadcrumbs",
                "breadcrumbs"
              ),

              [sty.slotTargetChildren__serviceType_designSystem]: hasVariant(
                variants,
                "serviceType",
                "designSystem"
              ),

              [sty.slotTargetChildren__serviceType_mobileCommerce]: hasVariant(
                variants,
                "serviceType",
                "mobileCommerce"
              ),

              [sty.slotTargetChildren__serviceType_mobile]: hasVariant(
                variants,
                "serviceType",
                "mobile"
              ),

              [sty.slotTargetChildren__serviceType_prototype]: hasVariant(
                variants,
                "serviceType",
                "prototype"
              ),

              [sty.slotTargetChildren__serviceType_slidePresentation]:
                hasVariant(variants, "serviceType", "slidePresentation"),
              [sty.slotTargetChildren__serviceType_usabilityTesting]:
                hasVariant(variants, "serviceType", "usabilityTesting"),
              [sty.slotTargetChildren__serviceType_userResearch]: hasVariant(
                variants,
                "serviceType",
                "userResearch"
              ),

              [sty.slotTargetChildren__serviceType_webEcommerce]: hasVariant(
                variants,
                "serviceType",
                "webEcommerce"
              ),

              [sty.slotTargetChildren__serviceType_webMultiplePage]: hasVariant(
                variants,
                "serviceType",
                "webMultiplePage"
              ),

              [sty.slotTargetChildren__serviceType_webSinglePage]: hasVariant(
                variants,
                "serviceType",
                "webSinglePage"
              ),

              [sty.slotTargetChildren__serviceType_wireframes]: hasVariant(
                variants,
                "serviceType",
                "wireframes"
              )
            })
          })
        : null}

      <InputCardNumberField
        className={classNames(
          "__wab_instance",
          sty.inputCardNumberField__i4EX,
          {
            [sty.inputCardNumberField__serviceType_designSystem__i4EXU721P]:
              hasVariant(variants, "serviceType", "designSystem"),
            [sty.inputCardNumberField__serviceType_slidePresentation__i4EX5E1Tn]:
              hasVariant(variants, "serviceType", "slidePresentation"),
            [sty.inputCardNumberField__serviceType_userResearch__i4EXXf2Wt]:
              hasVariant(variants, "serviceType", "userResearch"),
            [sty.inputCardNumberField__serviceType_webMultiplePage__i4EXVMvut]:
              hasVariant(variants, "serviceType", "webMultiplePage"),
            [sty.inputCardNumberField__serviceType_wireframes__i4EX7462Y]:
              hasVariant(variants, "serviceType", "wireframes")
          }
        )}
        description={true}
      >
        {hasVariant(variants, "serviceType", "webMultiplePage")
          ? "Screens"
          : hasVariant(variants, "serviceType", "webSinglePage")
          ? "Sections"
          : hasVariant(variants, "serviceType", "usabilityTesting")
          ? "Screens"
          : hasVariant(variants, "serviceType", "wireframes")
          ? "Screens"
          : hasVariant(variants, "serviceType", "prototype")
          ? "Screens"
          : hasVariant(variants, "serviceType", "userResearch")
          ? "Interviews"
          : hasVariant(variants, "serviceType", "designSystem")
          ? "Components"
          : hasVariant(variants, "serviceType", "slidePresentation")
          ? "Pages"
          : hasVariant(variants, "serviceType", "mobileCommerce")
          ? "Screens"
          : hasVariant(variants, "serviceType", "mobile")
          ? "Screens"
          : hasVariant(variants, "serviceType", "webEcommerce")
          ? "Screens"
          : "Content"}
      </InputCardNumberField>

      <InputCardNumberField
        className={classNames(
          "__wab_instance",
          sty.inputCardNumberField__llAoN,
          {
            [sty.inputCardNumberField__serviceType_designSystem__llAoNu721P]:
              hasVariant(variants, "serviceType", "designSystem"),
            [sty.inputCardNumberField__serviceType_slidePresentation__llAoN5E1Tn]:
              hasVariant(variants, "serviceType", "slidePresentation"),
            [sty.inputCardNumberField__serviceType_userResearch__llAoNxf2Wt]:
              hasVariant(variants, "serviceType", "userResearch"),
            [sty.inputCardNumberField__serviceType_webMultiplePage__llAoNvMvut]:
              hasVariant(variants, "serviceType", "webMultiplePage"),
            [sty.inputCardNumberField__serviceType_wireframes__llAoN7462Y]:
              hasVariant(variants, "serviceType", "wireframes")
          }
        )}
        description={true}
      >
        {hasVariant(variants, "serviceType", "webMultiplePage")
          ? "Screens"
          : hasVariant(variants, "serviceType", "webSinglePage")
          ? "Sections"
          : hasVariant(variants, "serviceType", "usabilityTesting")
          ? "Screens"
          : hasVariant(variants, "serviceType", "wireframes")
          ? "Screens"
          : hasVariant(variants, "serviceType", "prototype")
          ? "Screens"
          : hasVariant(variants, "serviceType", "userResearch")
          ? "Interviews"
          : hasVariant(variants, "serviceType", "designSystem")
          ? "Components"
          : hasVariant(variants, "serviceType", "slidePresentation")
          ? "Pages"
          : hasVariant(variants, "serviceType", "mobileCommerce")
          ? "Screens"
          : hasVariant(variants, "serviceType", "mobile")
          ? "Screens"
          : hasVariant(variants, "serviceType", "webEcommerce")
          ? "Screens"
          : "Content"}
      </InputCardNumberField>

      <InputCardNumberField
        className={classNames(
          "__wab_instance",
          sty.inputCardNumberField___0Sjtm,
          {
            [sty.inputCardNumberField__serviceType_designSystem___0SjtmU721P]:
              hasVariant(variants, "serviceType", "designSystem"),
            [sty.inputCardNumberField__serviceType_slidePresentation___0Sjtm5E1Tn]:
              hasVariant(variants, "serviceType", "slidePresentation"),
            [sty.inputCardNumberField__serviceType_userResearch___0SjtmXf2Wt]:
              hasVariant(variants, "serviceType", "userResearch"),
            [sty.inputCardNumberField__serviceType_webMultiplePage___0SjtmvMvut]:
              hasVariant(variants, "serviceType", "webMultiplePage"),
            [sty.inputCardNumberField__serviceType_wireframes___0Sjtm7462Y]:
              hasVariant(variants, "serviceType", "wireframes")
          }
        )}
        description={true}
      >
        {hasVariant(variants, "serviceType", "webMultiplePage")
          ? "Screens"
          : hasVariant(variants, "serviceType", "webSinglePage")
          ? "Sections"
          : hasVariant(variants, "serviceType", "usabilityTesting")
          ? "Screens"
          : hasVariant(variants, "serviceType", "wireframes")
          ? "Screens"
          : hasVariant(variants, "serviceType", "prototype")
          ? "Screens"
          : hasVariant(variants, "serviceType", "userResearch")
          ? "Interviews"
          : hasVariant(variants, "serviceType", "designSystem")
          ? "Components"
          : hasVariant(variants, "serviceType", "slidePresentation")
          ? "Pages"
          : hasVariant(variants, "serviceType", "mobileCommerce")
          ? "Screens"
          : hasVariant(variants, "serviceType", "mobile")
          ? "Screens"
          : hasVariant(variants, "serviceType", "webEcommerce")
          ? "Screens"
          : "Content"}
      </InputCardNumberField>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSectionServiceContent__ArgProps,
      internalVariantPropNames: PlasmicSectionServiceContent__VariantProps
    });

    return PlasmicSectionServiceContent__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionServiceContent";
  } else {
    func.displayName = `PlasmicSectionServiceContent.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionServiceContent = Object.assign(
  // Top-level PlasmicSectionServiceContent renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicSectionServiceContent
    internalVariantProps: PlasmicSectionServiceContent__VariantProps,
    internalArgProps: PlasmicSectionServiceContent__ArgProps
  }
);

export default PlasmicSectionServiceContent;
/* prettier-ignore-end */
