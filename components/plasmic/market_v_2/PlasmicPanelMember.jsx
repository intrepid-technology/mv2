// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: ouYaxX0ZfJN
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import PanelButtonHeader from "../../PanelButtonHeader"; // plasmic-import: l8x-1W9kbZ/component
import PanelCommunityScores from "../../PanelCommunityScores"; // plasmic-import: JsYhtV8o3HC/component
import PanelMemberSectionMarket from "../../PanelMemberSectionMarket"; // plasmic-import: 8_xnKrMMUML/component
import PanelMemberSectionMember from "../../PanelMemberSectionMember"; // plasmic-import: Q3RBslsHoHs/component
import PanelMemberSectionAccount from "../../PanelMemberSectionAccount"; // plasmic-import: nJJCy4YRIm/component
import PanelFooter from "../../PanelFooter"; // plasmic-import: y532Y0sDIf/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicPanelMember.module.css"; // plasmic-import: ouYaxX0ZfJN/css

export const PlasmicPanelMember__VariantProps = new Array();

export const PlasmicPanelMember__ArgProps = new Array();

function PlasmicPanelMember__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"parent"}
        data-plasmic-override={overrides.parent}
        hasGap={true}
        className={classNames(defaultcss.all, sty.parent)}
      >
        <p.Stack
          as={"div"}
          data-plasmic-name={"header"}
          data-plasmic-override={overrides.header}
          hasGap={true}
          className={classNames(defaultcss.all, sty.header)}
        >
          <PanelButtonHeader
            data-plasmic-name={"memberButtonHeader"}
            data-plasmic-override={overrides.memberButtonHeader}
            className={classNames("__wab_instance", sty.memberButtonHeader)}
            user={"member"}
          />

          <PanelCommunityScores
            data-plasmic-name={"memberCommunityScores"}
            data-plasmic-override={overrides.memberCommunityScores}
            className={classNames("__wab_instance", sty.memberCommunityScores)}
            user={"member"}
          />
        </p.Stack>

        <PanelMemberSectionMarket
          data-plasmic-name={"memberMarket"}
          data-plasmic-override={overrides.memberMarket}
          className={classNames("__wab_instance", sty.memberMarket)}
        />

        <PanelMemberSectionMember
          data-plasmic-name={"panelMemberSectionMember"}
          data-plasmic-override={overrides.panelMemberSectionMember}
          className={classNames("__wab_instance", sty.panelMemberSectionMember)}
        />

        <PanelMemberSectionAccount
          data-plasmic-name={"panelMemberSectionAccount"}
          data-plasmic-override={overrides.panelMemberSectionAccount}
          className={classNames(
            "__wab_instance",
            sty.panelMemberSectionAccount
          )}
        />
      </p.Stack>

      <div
        data-plasmic-name={"footer"}
        data-plasmic-override={overrides.footer}
        className={classNames(defaultcss.all, sty.footer)}
      >
        <PanelFooter
          data-plasmic-name={"panelFooter"}
          data-plasmic-override={overrides.panelFooter}
          className={classNames("__wab_instance", sty.panelFooter)}
        />
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "parent",
    "header",
    "memberButtonHeader",
    "memberCommunityScores",
    "memberMarket",
    "panelMemberSectionMember",
    "panelMemberSectionAccount",
    "footer",
    "panelFooter"
  ],

  parent: [
    "parent",
    "header",
    "memberButtonHeader",
    "memberCommunityScores",
    "memberMarket",
    "panelMemberSectionMember",
    "panelMemberSectionAccount"
  ],

  header: ["header", "memberButtonHeader", "memberCommunityScores"],
  memberButtonHeader: ["memberButtonHeader"],
  memberCommunityScores: ["memberCommunityScores"],
  memberMarket: ["memberMarket"],
  panelMemberSectionMember: ["panelMemberSectionMember"],
  panelMemberSectionAccount: ["panelMemberSectionAccount"],
  footer: ["footer", "panelFooter"],
  panelFooter: ["panelFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPanelMember__ArgProps,
      internalVariantPropNames: PlasmicPanelMember__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPanelMember__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPanelMember";
  } else {
    func.displayName = `PlasmicPanelMember.${nodeName}`;
  }
  return func;
}

export const PlasmicPanelMember = Object.assign(
  // Top-level PlasmicPanelMember renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    parent: makeNodeComponent("parent"),
    header: makeNodeComponent("header"),
    memberButtonHeader: makeNodeComponent("memberButtonHeader"),
    memberCommunityScores: makeNodeComponent("memberCommunityScores"),
    memberMarket: makeNodeComponent("memberMarket"),
    panelMemberSectionMember: makeNodeComponent("panelMemberSectionMember"),
    panelMemberSectionAccount: makeNodeComponent("panelMemberSectionAccount"),
    footer: makeNodeComponent("footer"),
    panelFooter: makeNodeComponent("panelFooter"),
    // Metadata about props expected for PlasmicPanelMember
    internalVariantProps: PlasmicPanelMember__VariantProps,
    internalArgProps: PlasmicPanelMember__ArgProps
  }
);

export default PlasmicPanelMember;
/* prettier-ignore-end */
