// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: 8_xnKrMMUML
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import ElementIconListItem from "../../ElementIconListItem"; // plasmic-import: 61axZSTp8Y/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicElementSideBarMarketPanel.module.css"; // plasmic-import: 8_xnKrMMUML/css
import Icon156Icon from "./icons/PlasmicIcon__Icon156"; // plasmic-import: 1NJKfj9Nne/icon
import Icon155Icon from "./icons/PlasmicIcon__Icon155"; // plasmic-import: oyqz-4i0N/icon
import BookmarkIcon from "./icons/PlasmicIcon__Bookmark"; // plasmic-import: 2qZ8N9GyOr/icon
import Icon154Icon from "./icons/PlasmicIcon__Icon154"; // plasmic-import: UjSs9MO0SC/icon
import Icon151Icon from "./icons/PlasmicIcon__Icon151"; // plasmic-import: -J5xEi65H/icon
import CommentReviewIcon from "./icons/PlasmicIcon__CommentReview"; // plasmic-import: ebuPCBFlqJ/icon

export const PlasmicElementSideBarMarketPanel__VariantProps = new Array();

export const PlasmicElementSideBarMarketPanel__ArgProps = new Array();

function PlasmicElementSideBarMarketPanel__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box__y3FIv)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__nMyDx
          )}
        >
          {"Market"}
        </div>
      </p.Stack>

      <ElementIconListItem
        className={classNames("__wab_instance", sty.elementIconListItem__e7Dob)}
        navImage={
          <Icon156Icon
            className={classNames(defaultcss.all, sty.svg__qFwiw)}
            role={"img"}
          />
        }
        navText={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__ikOGy
            )}
          >
            {"Home"}
          </div>
        }
      />

      <ElementIconListItem
        className={classNames("__wab_instance", sty.elementIconListItem__fgRr)}
        navImage={
          <Icon155Icon
            className={classNames(defaultcss.all, sty.svg__ahxoV)}
            role={"img"}
          />
        }
        navText={"Recommendations"}
      />

      <ElementIconListItem
        className={classNames("__wab_instance", sty.elementIconListItem__il9Fd)}
        navImage={
          <BookmarkIcon
            className={classNames(defaultcss.all, sty.svg__rvplu)}
            role={"img"}
          />
        }
        navText={"Bookmarks"}
      />

      <ElementIconListItem
        className={classNames("__wab_instance", sty.elementIconListItem__bjWxX)}
        navImage={
          <Icon154Icon
            className={classNames(defaultcss.all, sty.svg___0V2Ro)}
            role={"img"}
          />
        }
        navText={"Orders"}
      />

      <ElementIconListItem
        className={classNames("__wab_instance", sty.elementIconListItem__iVsEj)}
        navImage={
          <Icon151Icon
            className={classNames(defaultcss.all, sty.svg__xrQjl)}
            role={"img"}
          />
        }
        navText={"Reviews"}
      />

      <ElementIconListItem
        className={classNames("__wab_instance", sty.elementIconListItem__y6VHc)}
        navImage={
          <CommentReviewIcon
            className={classNames(defaultcss.all, sty.svg___62K0R)}
            role={"img"}
          />
        }
        navText={"Messages"}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicElementSideBarMarketPanel__ArgProps,
      internalVariantPropNames: PlasmicElementSideBarMarketPanel__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicElementSideBarMarketPanel__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicElementSideBarMarketPanel";
  } else {
    func.displayName = `PlasmicElementSideBarMarketPanel.${nodeName}`;
  }
  return func;
}

export const PlasmicElementSideBarMarketPanel = Object.assign(
  // Top-level PlasmicElementSideBarMarketPanel renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicElementSideBarMarketPanel
    internalVariantProps: PlasmicElementSideBarMarketPanel__VariantProps,
    internalArgProps: PlasmicElementSideBarMarketPanel__ArgProps
  }
);

export default PlasmicElementSideBarMarketPanel;
/* prettier-ignore-end */
