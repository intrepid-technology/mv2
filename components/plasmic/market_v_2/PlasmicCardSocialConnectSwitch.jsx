// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: PjlQKkmde-
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import IconSocialProfile from "../../IconSocialProfile"; // plasmic-import: IC5nyjlnco/component
import SwitchPrimary from "../../SwitchPrimary"; // plasmic-import: M6TX-0ESZQ/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import sty from "./PlasmicCardSocialConnectSwitch.module.css"; // plasmic-import: PjlQKkmde-/css

export const PlasmicCardSocialConnectSwitch__VariantProps = new Array(
  "connected",
  "width",
  "socialNetwork",
  "accounting"
);

export const PlasmicCardSocialConnectSwitch__ArgProps = new Array();

function PlasmicCardSocialConnectSwitch__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"parent"}
        data-plasmic-override={overrides.parent}
        hasGap={true}
        className={classNames(projectcss.all, sty.parent, {
          [sty.parentwidth__360]: hasVariant(variants, "width", "_360"),
          [sty.parentwidth__540]: hasVariant(variants, "width", "_540"),
          [sty.parentwidth__720]: hasVariant(variants, "width", "_720")
        })}
      >
        <p.Stack
          as={"div"}
          data-plasmic-name={"freeBox"}
          data-plasmic-override={overrides.freeBox}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox)}
        >
          <IconSocialProfile
            data-plasmic-name={"iconSocialProfile"}
            data-plasmic-override={overrides.iconSocialProfile}
            accounting={
              hasVariant(variants, "accounting", "quickbooks")
                ? "quickbooks"
                : hasVariant(variants, "accounting", "xero")
                ? "xero"
                : undefined
            }
            className={classNames("__wab_instance", sty.iconSocialProfile, {
              [sty.iconSocialProfileaccounting_quickbooks]: hasVariant(
                variants,
                "accounting",
                "quickbooks"
              ),

              [sty.iconSocialProfileaccounting_xero]: hasVariant(
                variants,
                "accounting",
                "xero"
              ),

              [sty.iconSocialProfileconnected]: hasVariant(
                variants,
                "connected",
                "connected"
              ),

              [sty.iconSocialProfilesocialNetwork_angellist]: hasVariant(
                variants,
                "socialNetwork",
                "angellist"
              ),

              [sty.iconSocialProfilesocialNetwork_discord]: hasVariant(
                variants,
                "socialNetwork",
                "discord"
              ),

              [sty.iconSocialProfilesocialNetwork_dribbble]: hasVariant(
                variants,
                "socialNetwork",
                "dribbble"
              ),

              [sty.iconSocialProfilesocialNetwork_facebook]: hasVariant(
                variants,
                "socialNetwork",
                "facebook"
              ),

              [sty.iconSocialProfilesocialNetwork_github]: hasVariant(
                variants,
                "socialNetwork",
                "github"
              ),

              [sty.iconSocialProfilesocialNetwork_google]: hasVariant(
                variants,
                "socialNetwork",
                "google"
              ),

              [sty.iconSocialProfilesocialNetwork_hackernews]: hasVariant(
                variants,
                "socialNetwork",
                "hackernews"
              ),

              [sty.iconSocialProfilesocialNetwork_instagram]: hasVariant(
                variants,
                "socialNetwork",
                "instagram"
              ),

              [sty.iconSocialProfilesocialNetwork_line]: hasVariant(
                variants,
                "socialNetwork",
                "line"
              ),

              [sty.iconSocialProfilesocialNetwork_linkedin]: hasVariant(
                variants,
                "socialNetwork",
                "linkedin"
              ),

              [sty.iconSocialProfilesocialNetwork_pinterest]: hasVariant(
                variants,
                "socialNetwork",
                "pinterest"
              ),

              [sty.iconSocialProfilesocialNetwork_productHunt]: hasVariant(
                variants,
                "socialNetwork",
                "productHunt"
              ),

              [sty.iconSocialProfilesocialNetwork_reddit]: hasVariant(
                variants,
                "socialNetwork",
                "reddit"
              ),

              [sty.iconSocialProfilesocialNetwork_slack]: hasVariant(
                variants,
                "socialNetwork",
                "slack"
              ),

              [sty.iconSocialProfilesocialNetwork_snapchat]: hasVariant(
                variants,
                "socialNetwork",
                "snapchat"
              ),

              [sty.iconSocialProfilesocialNetwork_soundcloud]: hasVariant(
                variants,
                "socialNetwork",
                "soundcloud"
              ),

              [sty.iconSocialProfilesocialNetwork_spotify]: hasVariant(
                variants,
                "socialNetwork",
                "spotify"
              ),

              [sty.iconSocialProfilesocialNetwork_tikTok]: hasVariant(
                variants,
                "socialNetwork",
                "tikTok"
              ),

              [sty.iconSocialProfilesocialNetwork_twitch]: hasVariant(
                variants,
                "socialNetwork",
                "twitch"
              ),

              [sty.iconSocialProfilesocialNetwork_twitter]: hasVariant(
                variants,
                "socialNetwork",
                "twitter"
              ),

              [sty.iconSocialProfilesocialNetwork_wechat]: hasVariant(
                variants,
                "socialNetwork",
                "wechat"
              ),

              [sty.iconSocialProfilesocialNetwork_whatsapp]: hasVariant(
                variants,
                "socialNetwork",
                "whatsapp"
              ),

              [sty.iconSocialProfilesocialNetwork_youtube]: hasVariant(
                variants,
                "socialNetwork",
                "youtube"
              ),

              [sty.iconSocialProfilewidth__540]: hasVariant(
                variants,
                "width",
                "_540"
              )
            })}
            size={"_45X45"}
            social={
              hasVariant(variants, "socialNetwork", "youtube")
                ? "youtube"
                : hasVariant(variants, "socialNetwork", "twitter")
                ? "twitter"
                : hasVariant(variants, "socialNetwork", "linkedin")
                ? "linkedin"
                : hasVariant(variants, "socialNetwork", "facebook")
                ? "facebook"
                : hasVariant(variants, "socialNetwork", "instagram")
                ? "instagram"
                : hasVariant(variants, "socialNetwork", "google")
                ? "google"
                : hasVariant(variants, "socialNetwork", "wechat")
                ? "wechat"
                : hasVariant(variants, "socialNetwork", "line")
                ? "line"
                : hasVariant(variants, "socialNetwork", "whatsapp")
                ? "whatsapp"
                : hasVariant(variants, "socialNetwork", "snapchat")
                ? "snapchat"
                : hasVariant(variants, "socialNetwork", "slack")
                ? "slack"
                : hasVariant(variants, "socialNetwork", "reddit")
                ? "reddit"
                : hasVariant(variants, "socialNetwork", "pinterest")
                ? "pinterest"
                : hasVariant(variants, "socialNetwork", "github")
                ? "github"
                : hasVariant(variants, "socialNetwork", "angellist")
                ? "angellist"
                : hasVariant(variants, "socialNetwork", "productHunt")
                ? "productHunt"
                : hasVariant(variants, "socialNetwork", "dribbble")
                ? "dribbble"
                : hasVariant(variants, "socialNetwork", "hackernews")
                ? "hackerNews"
                : hasVariant(variants, "socialNetwork", "spotify")
                ? "spotify"
                : hasVariant(variants, "socialNetwork", "soundcloud")
                ? "soundcloud"
                : hasVariant(variants, "socialNetwork", "discord")
                ? "discord"
                : hasVariant(variants, "socialNetwork", "twitch")
                ? "twitch"
                : hasVariant(variants, "socialNetwork", "tikTok")
                ? "tikTok"
                : undefined
            }
          />

          <div
            data-plasmic-name={"text"}
            data-plasmic-override={overrides.text}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text,
              {
                [sty.textaccounting_quickbooks]: hasVariant(
                  variants,
                  "accounting",
                  "quickbooks"
                ),

                [sty.textaccounting_xero]: hasVariant(
                  variants,
                  "accounting",
                  "xero"
                ),

                [sty.textsocialNetwork_angellist]: hasVariant(
                  variants,
                  "socialNetwork",
                  "angellist"
                ),

                [sty.textsocialNetwork_discord]: hasVariant(
                  variants,
                  "socialNetwork",
                  "discord"
                ),

                [sty.textsocialNetwork_dribbble]: hasVariant(
                  variants,
                  "socialNetwork",
                  "dribbble"
                ),

                [sty.textsocialNetwork_facebook]: hasVariant(
                  variants,
                  "socialNetwork",
                  "facebook"
                ),

                [sty.textsocialNetwork_github]: hasVariant(
                  variants,
                  "socialNetwork",
                  "github"
                ),

                [sty.textsocialNetwork_google]: hasVariant(
                  variants,
                  "socialNetwork",
                  "google"
                ),

                [sty.textsocialNetwork_hackernews]: hasVariant(
                  variants,
                  "socialNetwork",
                  "hackernews"
                ),

                [sty.textsocialNetwork_instagram]: hasVariant(
                  variants,
                  "socialNetwork",
                  "instagram"
                ),

                [sty.textsocialNetwork_line]: hasVariant(
                  variants,
                  "socialNetwork",
                  "line"
                ),

                [sty.textsocialNetwork_linkedin]: hasVariant(
                  variants,
                  "socialNetwork",
                  "linkedin"
                ),

                [sty.textsocialNetwork_pinterest]: hasVariant(
                  variants,
                  "socialNetwork",
                  "pinterest"
                ),

                [sty.textsocialNetwork_productHunt]: hasVariant(
                  variants,
                  "socialNetwork",
                  "productHunt"
                ),

                [sty.textsocialNetwork_reddit]: hasVariant(
                  variants,
                  "socialNetwork",
                  "reddit"
                ),

                [sty.textsocialNetwork_slack]: hasVariant(
                  variants,
                  "socialNetwork",
                  "slack"
                ),

                [sty.textsocialNetwork_snapchat]: hasVariant(
                  variants,
                  "socialNetwork",
                  "snapchat"
                ),

                [sty.textsocialNetwork_soundcloud]: hasVariant(
                  variants,
                  "socialNetwork",
                  "soundcloud"
                ),

                [sty.textsocialNetwork_spotify]: hasVariant(
                  variants,
                  "socialNetwork",
                  "spotify"
                ),

                [sty.textsocialNetwork_tikTok]: hasVariant(
                  variants,
                  "socialNetwork",
                  "tikTok"
                ),

                [sty.textsocialNetwork_twitch]: hasVariant(
                  variants,
                  "socialNetwork",
                  "twitch"
                ),

                [sty.textsocialNetwork_twitter]: hasVariant(
                  variants,
                  "socialNetwork",
                  "twitter"
                ),

                [sty.textsocialNetwork_wechat]: hasVariant(
                  variants,
                  "socialNetwork",
                  "wechat"
                ),

                [sty.textsocialNetwork_whatsapp]: hasVariant(
                  variants,
                  "socialNetwork",
                  "whatsapp"
                ),

                [sty.textsocialNetwork_youtube]: hasVariant(
                  variants,
                  "socialNetwork",
                  "youtube"
                )
              }
            )}
          >
            {hasVariant(variants, "socialNetwork", "youtube")
              ? "Youtube"
              : hasVariant(variants, "socialNetwork", "twitter")
              ? "Twitter"
              : hasVariant(variants, "socialNetwork", "linkedin")
              ? "Linkedin"
              : hasVariant(variants, "socialNetwork", "facebook")
              ? "Facebook"
              : hasVariant(variants, "socialNetwork", "instagram")
              ? "Instagram"
              : hasVariant(variants, "accounting", "quickbooks")
              ? "Quickbooks"
              : hasVariant(variants, "accounting", "xero")
              ? "Xero"
              : hasVariant(variants, "socialNetwork", "google")
              ? "Google"
              : hasVariant(variants, "socialNetwork", "wechat")
              ? "Wechat"
              : hasVariant(variants, "socialNetwork", "line")
              ? "Line"
              : hasVariant(variants, "socialNetwork", "whatsapp")
              ? "Whatsapp"
              : hasVariant(variants, "socialNetwork", "snapchat")
              ? "Snapchat"
              : hasVariant(variants, "socialNetwork", "slack")
              ? "Slack"
              : hasVariant(variants, "socialNetwork", "reddit")
              ? "Reddit"
              : hasVariant(variants, "socialNetwork", "pinterest")
              ? "Pinterest"
              : hasVariant(variants, "socialNetwork", "github")
              ? "Github"
              : hasVariant(variants, "socialNetwork", "angellist")
              ? "Angellist"
              : hasVariant(variants, "socialNetwork", "productHunt")
              ? "Product Hunt"
              : hasVariant(variants, "socialNetwork", "dribbble")
              ? "Dribbble"
              : hasVariant(variants, "socialNetwork", "hackernews")
              ? "Hackernews"
              : hasVariant(variants, "socialNetwork", "spotify")
              ? "Spotify"
              : hasVariant(variants, "socialNetwork", "soundcloud")
              ? "Soundcloud"
              : hasVariant(variants, "socialNetwork", "discord")
              ? "Discord"
              : hasVariant(variants, "socialNetwork", "twitch")
              ? "Twitch"
              : hasVariant(variants, "socialNetwork", "tikTok")
              ? "TikTok"
              : "Social network"}
          </div>
        </p.Stack>

        <SwitchPrimary
          data-plasmic-name={"switchPrimary"}
          data-plasmic-override={overrides.switchPrimary}
          _switch={
            hasVariant(variants, "connected", "connected") ? true : undefined
          }
          className={classNames("__wab_instance", sty.switchPrimary, {
            [sty.switchPrimaryconnected]: hasVariant(
              variants,
              "connected",
              "connected"
            )
          })}
          color={[]}
        />
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "parent",
    "freeBox",
    "iconSocialProfile",
    "text",
    "switchPrimary"
  ],

  parent: ["parent", "freeBox", "iconSocialProfile", "text", "switchPrimary"],
  freeBox: ["freeBox", "iconSocialProfile", "text"],
  iconSocialProfile: ["iconSocialProfile"],
  text: ["text"],
  switchPrimary: ["switchPrimary"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicCardSocialConnectSwitch__ArgProps,
      internalVariantPropNames: PlasmicCardSocialConnectSwitch__VariantProps
    });

    return PlasmicCardSocialConnectSwitch__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCardSocialConnectSwitch";
  } else {
    func.displayName = `PlasmicCardSocialConnectSwitch.${nodeName}`;
  }
  return func;
}

export const PlasmicCardSocialConnectSwitch = Object.assign(
  // Top-level PlasmicCardSocialConnectSwitch renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    parent: makeNodeComponent("parent"),
    freeBox: makeNodeComponent("freeBox"),
    iconSocialProfile: makeNodeComponent("iconSocialProfile"),
    text: makeNodeComponent("text"),
    switchPrimary: makeNodeComponent("switchPrimary"),
    // Metadata about props expected for PlasmicCardSocialConnectSwitch
    internalVariantProps: PlasmicCardSocialConnectSwitch__VariantProps,
    internalArgProps: PlasmicCardSocialConnectSwitch__ArgProps
  }
);

export default PlasmicCardSocialConnectSwitch;
/* prettier-ignore-end */
