// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: mjt7CZropo
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: o9sjFZaOQJQZ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicSectionBrandTestimonial.module.css"; // plasmic-import: mjt7CZropo/css
import RedbullsvgIcon from "./icons/PlasmicIcon__Redbullsvg"; // plasmic-import: iVGePAXJh/icon
import LvmhLogosvgIcon from "./icons/PlasmicIcon__LvmhLogosvg"; // plasmic-import: 9MwDlhB7W/icon
import MastercardsvgIcon from "./icons/PlasmicIcon__Mastercardsvg"; // plasmic-import: W4hkSJywT/icon
import SamsungsvgIcon from "./icons/PlasmicIcon__Samsungsvg"; // plasmic-import: 1XTbW98De/icon
import TheNorthFace1LogoSvgVectorsvgIcon from "./icons/PlasmicIcon__TheNorthFace1LogoSvgVectorsvg"; // plasmic-import: Anyn124Pr/icon
import NikesvgIcon from "./icons/PlasmicIcon__Nikesvg"; // plasmic-import: jNcsRuphk/icon

export const PlasmicSectionBrandTestimonial__VariantProps = new Array();

export const PlasmicSectionBrandTestimonial__ArgProps = new Array(
  "children",
  "slot3"
);

function PlasmicSectionBrandTestimonial__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.freeBox__mj8CM)}>
        <div className={classNames(defaultcss.all, sty.freeBox__wDJaS)}>
          {p.renderPlasmicSlot({
            defaultContents:
              "The world's leading brands innovate, transform, and grow with our community",
            value: args.children,
            className: classNames(sty.slotChildren)
          })}
        </div>
      </div>

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox__rsBuL)}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <RedbullsvgIcon
                className={classNames(defaultcss.all, sty.svg___7MOBz)}
                role={"img"}
              />

              <LvmhLogosvgIcon
                className={classNames(defaultcss.all, sty.svg___3Azwk)}
                role={"img"}
              />

              <MastercardsvgIcon
                className={classNames(defaultcss.all, sty.svg__aTdJe)}
                role={"img"}
              />

              <SamsungsvgIcon
                className={classNames(defaultcss.all, sty.svg__cP3Fi)}
                role={"img"}
              />

              <TheNorthFace1LogoSvgVectorsvgIcon
                className={classNames(defaultcss.all, sty.svg__yFlq3)}
                role={"img"}
              />

              <NikesvgIcon
                className={classNames(defaultcss.all, sty.svg__yx3Za)}
                role={"img"}
              />
            </React.Fragment>
          ),

          value: args.slot3
        })}
      </p.Stack>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSectionBrandTestimonial__ArgProps,
      internalVariantPropNames: PlasmicSectionBrandTestimonial__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicSectionBrandTestimonial__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionBrandTestimonial";
  } else {
    func.displayName = `PlasmicSectionBrandTestimonial.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionBrandTestimonial = Object.assign(
  // Top-level PlasmicSectionBrandTestimonial renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicSectionBrandTestimonial
    internalVariantProps: PlasmicSectionBrandTestimonial__VariantProps,
    internalArgProps: PlasmicSectionBrandTestimonial__ArgProps
  }
);

export default PlasmicSectionBrandTestimonial;
/* prettier-ignore-end */
