// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: TlD7bS9Y1q
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavbarInternal from "../../NavbarInternal"; // plasmic-import: BXWgCr5-vns/component
import SearchbarPrimary from "../../SearchbarPrimary"; // plasmic-import: MorSLptejY/component
import ButtonFormDropdownSelect from "../../ButtonFormDropdownSelect"; // plasmic-import: s2oJmDwLX-/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: koVqNkx_82/component
import ElementRadioPrimary from "../../ElementRadioPrimary"; // plasmic-import: Wn4V4PrC-K/component
import ImagePrimary from "../../ImagePrimary"; // plasmic-import: LP50swkVvv/component
import IconPrimary from "../../IconPrimary"; // plasmic-import: -fEFICkFUf/component
import IconTextPrimary from "../../IconTextPrimary"; // plasmic-import: 2XsuG8W9wX/component
import TagBadge from "../../TagBadge"; // plasmic-import: C8K8aavuz-/component
import SwitchPrimary from "../../SwitchPrimary"; // plasmic-import: M6TX-0ESZQ/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicManageListing.module.css"; // plasmic-import: TlD7bS9Y1q/css
import Icon96Icon from "./icons/PlasmicIcon__Icon96"; // plasmic-import: CEkB3VE5m4/icon
import ListingIcon from "./icons/PlasmicIcon__Listing"; // plasmic-import: NNbE63A0Ys/icon
import EditIcon from "./icons/PlasmicIcon__Edit"; // plasmic-import: mbnWFLNOQl/icon
import CircleTimeIcon from "./icons/PlasmicIcon__CircleTime"; // plasmic-import: 2emi-eIAJb/icon
import BoostIcon from "./icons/PlasmicIcon__Boost"; // plasmic-import: X0sjJkcBKE/icon
import CircleCheckedIcon from "./icons/PlasmicIcon__CircleChecked"; // plasmic-import: Ebjr5Ebml/icon
import CircleStopIcon from "./icons/PlasmicIcon__CircleStop"; // plasmic-import: QS_bXX3Lhh/icon

export const PlasmicManageListing__VariantProps = new Array();

export const PlasmicManageListing__ArgProps = new Array();

function PlasmicManageListing__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarInternal
            data-plasmic-name={"navbarInternal"}
            data-plasmic-override={overrides.navbarInternal}
            className={classNames("__wab_instance", sty.navbarInternal)}
          />

          <div className={classNames(defaultcss.all, sty.box__voE1P)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"overlineHeadlineTitleParent"}
              data-plasmic-override={overrides.overlineHeadlineTitleParent}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.overlineHeadlineTitleParent
              )}
            >
              <div
                data-plasmic-name={"overline"}
                data-plasmic-override={overrides.overline}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.overline
                )}
              >
                {"Manage listings"}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"tableInviteTeamHeadlineTitleParent"}
                data-plasmic-override={
                  overrides.tableInviteTeamHeadlineTitleParent
                }
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  sty.tableInviteTeamHeadlineTitleParent
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"headlineParent"}
                  data-plasmic-override={overrides.headlineParent}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.headlineParent)}
                >
                  <div
                    data-plasmic-name={"headlineText"}
                    data-plasmic-override={overrides.headlineText}
                    className={classNames(defaultcss.all, sty.headlineText)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__s4Y71
                      )}
                    >
                      {"Listings"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"subheadText"}
                    data-plasmic-override={overrides.subheadText}
                    className={classNames(defaultcss.all, sty.subheadText)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__iNeap
                      )}
                    >
                      {
                        "Edit, update, or delete your listings â€” boost a listing to reach more people."
                      }
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(defaultcss.all, sty.box__osNjb)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"tableListingManagementParent"}
              data-plasmic-override={overrides.tableListingManagementParent}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.tableListingManagementParent
              )}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"listingManagementBlockParent"}
                data-plasmic-override={overrides.listingManagementBlockParent}
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  sty.listingManagementBlockParent
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"listingTotalParent"}
                  data-plasmic-override={overrides.listingTotalParent}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.listingTotalParent)}
                >
                  <div
                    data-plasmic-name={"listingNumberParent"}
                    data-plasmic-override={overrides.listingNumberParent}
                    className={classNames(
                      defaultcss.all,
                      sty.listingNumberParent
                    )}
                  >
                    <div
                      data-plasmic-name={"listingNumber"}
                      data-plasmic-override={overrides.listingNumber}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.listingNumber
                      )}
                    >
                      {"3"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__v0ETg
                    )}
                  >
                    {"Listings"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__fLuRj)}
                >
                  <div
                    data-plasmic-name={"listingSearchFilterParent"}
                    data-plasmic-override={overrides.listingSearchFilterParent}
                    className={classNames(
                      defaultcss.all,
                      sty.listingSearchFilterParent
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__rgWiD)}
                    >
                      <SearchbarPrimary
                        data-plasmic-name={"searchbarPrimary"}
                        data-plasmic-override={overrides.searchbarPrimary}
                        className={classNames(
                          "__wab_instance",
                          sty.searchbarPrimary
                        )}
                        width={"_360"}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"listingSearchFilterDropdownParent"}
                        data-plasmic-override={
                          overrides.listingSearchFilterDropdownParent
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingSearchFilterDropdownParent
                        )}
                      >
                        <ButtonFormDropdownSelect
                          className={classNames(
                            "__wab_instance",
                            sty.buttonFormDropdownSelect___6AUg
                          )}
                          description={"description"}
                          dropdownIcon={
                            <Icon96Icon
                              className={classNames(
                                defaultcss.all,
                                sty.svg___3I252
                              )}
                              role={"img"}
                            />
                          }
                          dropdownTitle={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__nhS3Q
                              )}
                            >
                              {"Status"}
                            </div>
                          }
                          headlineLabelTitle={"Date"}
                          label={"label"}
                          size={"_180X32"}
                        />

                        <ButtonFormDropdownSelect
                          className={classNames(
                            "__wab_instance",
                            sty.buttonFormDropdownSelect__zqrGz
                          )}
                          description={"description"}
                          dropdownIcon={
                            <Icon96Icon
                              className={classNames(
                                defaultcss.all,
                                sty.svg__qqvpy
                              )}
                              role={"img"}
                            />
                          }
                          dropdownTitle={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__ehhKh
                              )}
                            >
                              {"Content"}
                            </div>
                          }
                          headlineLabelTitle={"Date"}
                          label={"label"}
                          size={"_180X32"}
                        />
                      </p.Stack>
                    </p.Stack>

                    <ButtonPrimary
                      className={classNames(
                        "__wab_instance",
                        sty.buttonPrimary__p5Rq9
                      )}
                      color={"brand"}
                      size={"_140"}
                      svgIcon={
                        <ListingIcon
                          className={classNames(defaultcss.all, sty.svg__abxed)}
                          role={"img"}
                        />
                      }
                      type={"icon"}
                    >
                      {"New listing"}
                    </ButtonPrimary>
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"listingManagementTableColumnParent"}
                    data-plasmic-override={
                      overrides.listingManagementTableColumnParent
                    }
                    hasGap={true}
                    className={classNames(
                      defaultcss.all,
                      sty.listingManagementTableColumnParent
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"listingManagementTableHeader"}
                      data-plasmic-override={
                        overrides.listingManagementTableHeader
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.listingManagementTableHeader
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"listingHeadlineSelectAllParent"}
                        data-plasmic-override={
                          overrides.listingHeadlineSelectAllParent
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingHeadlineSelectAllParent
                        )}
                      >
                        <ElementRadioPrimary
                          className={classNames(
                            "__wab_instance",
                            sty.elementRadioPrimary__yip6N
                          )}
                          size={"_14Px"}
                        />

                        <div
                          className={classNames(defaultcss.all, sty.box__ioa3E)}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__nHhF3
                            )}
                          >
                            {"Listing"}
                          </div>
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"listingTableHeaderSecondarlyParent"}
                        data-plasmic-override={
                          overrides.listingTableHeaderSecondarlyParent
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingTableHeaderSecondarlyParent
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingStatusTableHeaderParent"}
                          data-plasmic-override={
                            overrides.listingStatusTableHeaderParent
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingStatusTableHeaderParent
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___9Fmw9
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__r4OcQ
                              )}
                            >
                              {"To do"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__tnEhB
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__ubQwJ
                              )}
                            >
                              {"Status"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__fgxeo
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__nq9C2
                              )}
                            >
                              {"Last modified"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingCategoryTableHeaderParent"}
                          data-plasmic-override={
                            overrides.listingCategoryTableHeaderParent
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingCategoryTableHeaderParent
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__daTW
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__z8Eqd
                              )}
                            >
                              {"Category"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___6Tx43
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__hkDi5
                              )}
                            >
                              {"Price"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingTermTableHeaderParent"}
                          data-plasmic-override={
                            overrides.listingTermTableHeaderParent
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingTermTableHeaderParent
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__a4Yc
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__b8VKn
                              )}
                            >
                              {"Term"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__wCzJv
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__izIx6
                              )}
                            >
                              {"Expiry"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___9NyNg
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__fCiRc
                              )}
                            >
                              {"Auto-renew"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"listingManagementTableRow"}
                      data-plasmic-override={
                        overrides.listingManagementTableRow
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.listingManagementTableRow
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={
                          "listingSelectImageCaptionEditParent"
                        }
                        data-plasmic-override={
                          overrides.listingSelectImageCaptionEditParent
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingSelectImageCaptionEditParent
                        )}
                      >
                        <ElementRadioPrimary
                          className={classNames(
                            "__wab_instance",
                            sty.elementRadioPrimary__fZwlB
                          )}
                          size={"_14Px"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"imageCaptionParent"}
                          data-plasmic-override={overrides.imageCaptionParent}
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.imageCaptionParent
                          )}
                        >
                          <ImagePrimary
                            image360X188={
                              <img
                                alt={""}
                                className={classNames(
                                  defaultcss.img,
                                  sty.img__mjj04
                                )}
                                role={"img"}
                                src={
                                  "https://craftypixels.com/placeholder-image/40x40/f6f6f6/999999"
                                }
                              />
                            }
                            misc={"thumbnail70X40"}
                            thumbnail70X40={
                              <img
                                data-plasmic-name={"_70X40"}
                                data-plasmic-override={overrides._70X40}
                                alt={""}
                                className={classNames(
                                  defaultcss.img,
                                  sty._70X40
                                )}
                                role={"img"}
                                src={
                                  "https://craftypixels.com/placeholder-image/70x40/f8f8f8/333333"
                                }
                              />
                            }
                          />

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"userInfoParent3"}
                            data-plasmic-override={overrides.userInfoParent3}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.userInfoParent3
                            )}
                          >
                            <div
                              data-plasmic-name={"usernameParent3"}
                              data-plasmic-override={overrides.usernameParent3}
                              className={classNames(
                                defaultcss.all,
                                sty.usernameParent3
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__lJmav
                                )}
                              >
                                {"Service title"}
                              </div>
                            </div>
                          </p.Stack>

                          <button
                            data-plasmic-name={"svgIconEditButtonManageListing"}
                            data-plasmic-override={
                              overrides.svgIconEditButtonManageListing
                            }
                            className={classNames(
                              defaultcss.button,
                              sty.svgIconEditButtonManageListing
                            )}
                            title={"Click to edit this listing"}
                          >
                            <IconPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.iconPrimary__sRkY
                              )}
                              size={"_14Px"}
                              svgIcon14Px={
                                <EditIcon
                                  data-plasmic-name={"svgIcon2"}
                                  data-plasmic-override={overrides.svgIcon2}
                                  className={classNames(
                                    defaultcss.all,
                                    sty.svgIcon2
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </button>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"listingTableRowSecondary"}
                        data-plasmic-override={
                          overrides.listingTableRowSecondary
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingTableRowSecondary
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingStatusTableRow"}
                          data-plasmic-override={
                            overrides.listingStatusTableRow
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingStatusTableRow
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__ocLpm
                            )}
                          >
                            <ButtonPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.buttonPrimary__jIv9F
                              )}
                              color={"success"}
                              size={"_90"}
                              type={"light"}
                            >
                              {"Finish"}
                            </ButtonPrimary>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__xrTsH
                            )}
                          >
                            <IconTextPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.iconTextPrimary__toqAy
                              )}
                              elementIcon={
                                <IconPrimary
                                  className={classNames(
                                    "__wab_instance",
                                    sty.iconPrimary__fykIg
                                  )}
                                  svgIcon={
                                    <CircleTimeIcon
                                      className={classNames(
                                        defaultcss.all,
                                        sty.svg__v3Zyi
                                      )}
                                      role={"img"}
                                    />
                                  }
                                />
                              }
                              text={"In progress"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__lvKBv
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__zsXkF
                              )}
                            >
                              {"00/00/00"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingCategoryTableRow"}
                          data-plasmic-override={
                            overrides.listingCategoryTableRow
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingCategoryTableRow
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___23Kl
                            )}
                          >
                            <TagBadge
                              className={classNames(
                                "__wab_instance",
                                sty.tagBadge__o4Bx1
                              )}
                              textBase10Px={"UX Design"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__bmrpG
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__tauax
                              )}
                            >
                              {"$ 00,000"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingTermTableRow"}
                          data-plasmic-override={overrides.listingTermTableRow}
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingTermTableRow
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__stnQq
                            )}
                          >
                            <TagBadge
                              className={classNames(
                                "__wab_instance",
                                sty.tagBadge__eoLu8
                              )}
                              textBase10Px={"Monthly"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__gn6Wy
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__owDaf
                              )}
                            >
                              {"00/00/00"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___9TtfH
                            )}
                          >
                            <SwitchPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.switchPrimary__imWVf
                              )}
                            />
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"listingManagementTableRow2"}
                      data-plasmic-override={
                        overrides.listingManagementTableRow2
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.listingManagementTableRow2
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={
                          "listingSelectImageCaptionEditParent2"
                        }
                        data-plasmic-override={
                          overrides.listingSelectImageCaptionEditParent2
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingSelectImageCaptionEditParent2
                        )}
                      >
                        <ElementRadioPrimary
                          className={classNames(
                            "__wab_instance",
                            sty.elementRadioPrimary__h07Do
                          )}
                          size={"_14Px"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"imageCaptionParent2"}
                          data-plasmic-override={overrides.imageCaptionParent2}
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.imageCaptionParent2
                          )}
                        >
                          <ImagePrimary
                            image360X188={
                              <img
                                alt={""}
                                className={classNames(
                                  defaultcss.img,
                                  sty.img___2PbXd
                                )}
                                role={"img"}
                                src={
                                  "https://craftypixels.com/placeholder-image/40x40/f6f6f6/999999"
                                }
                              />
                            }
                            misc={"thumbnail70X40"}
                            thumbnail70X40={
                              <img
                                data-plasmic-name={"_70X402"}
                                data-plasmic-override={overrides._70X402}
                                alt={""}
                                className={classNames(
                                  defaultcss.img,
                                  sty._70X402
                                )}
                                role={"img"}
                                src={
                                  "https://craftypixels.com/placeholder-image/70x40/f8f8f8/333333"
                                }
                              />
                            }
                          />

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"userInfoParent4"}
                            data-plasmic-override={overrides.userInfoParent4}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.userInfoParent4
                            )}
                          >
                            <div
                              data-plasmic-name={"usernameParent4"}
                              data-plasmic-override={overrides.usernameParent4}
                              className={classNames(
                                defaultcss.all,
                                sty.usernameParent4
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__lzsyw
                                )}
                              >
                                {"Service title"}
                              </div>
                            </div>
                          </p.Stack>

                          <button
                            data-plasmic-name={
                              "svgIconEditButtonManageListing2"
                            }
                            data-plasmic-override={
                              overrides.svgIconEditButtonManageListing2
                            }
                            className={classNames(
                              defaultcss.button,
                              sty.svgIconEditButtonManageListing2
                            )}
                            title={"Click to edit this listing"}
                          >
                            <IconPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.iconPrimary__h97H
                              )}
                              size={"_14Px"}
                              svgIcon14Px={
                                <EditIcon
                                  data-plasmic-name={"svgIcon20"}
                                  data-plasmic-override={overrides.svgIcon20}
                                  className={classNames(
                                    defaultcss.all,
                                    sty.svgIcon20
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </button>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"listingTableRowSecondary2"}
                        data-plasmic-override={
                          overrides.listingTableRowSecondary2
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingTableRowSecondary2
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingStatusTableRow2"}
                          data-plasmic-override={
                            overrides.listingStatusTableRow2
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingStatusTableRow2
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__iwhsp
                            )}
                          >
                            <ButtonPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.buttonPrimary__ztgPw
                              )}
                              color={"brand"}
                              size={"_90"}
                              svgIcon={
                                <BoostIcon
                                  className={classNames(
                                    defaultcss.all,
                                    sty.svg__p0KaX
                                  )}
                                  role={"img"}
                                />
                              }
                              type={"icon"}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__dp2T5
                                )}
                              >
                                {"Boost"}
                              </div>
                            </ButtonPrimary>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__mwYoX
                            )}
                          >
                            <IconTextPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.iconTextPrimary__yJrD
                              )}
                              elementIcon={
                                <IconPrimary
                                  className={classNames(
                                    "__wab_instance",
                                    sty.iconPrimary__kYsB8
                                  )}
                                  svgIcon={
                                    <CircleCheckedIcon
                                      className={classNames(
                                        defaultcss.all,
                                        sty.svg__kh4Jt
                                      )}
                                      role={"img"}
                                    />
                                  }
                                />
                              }
                              text={"Listed"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___3Acvb
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__ryH
                              )}
                            >
                              {"00/00/00"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingCategoryTableRow2"}
                          data-plasmic-override={
                            overrides.listingCategoryTableRow2
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingCategoryTableRow2
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___40Sr7
                            )}
                          >
                            <TagBadge
                              className={classNames(
                                "__wab_instance",
                                sty.tagBadge__mvJ5Z
                              )}
                              textBase10Px={"UX Design"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___2MQUt
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__cNhCn
                              )}
                            >
                              {"$ 00,000"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingTermTableRow2"}
                          data-plasmic-override={overrides.listingTermTableRow2}
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingTermTableRow2
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__u6ZmV
                            )}
                          >
                            <TagBadge
                              className={classNames(
                                "__wab_instance",
                                sty.tagBadge__kdBdh
                              )}
                              textBase10Px={"Monthly"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__ctuRr
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box___6CZ7S
                              )}
                            >
                              {"00/00/00"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__cnJCp
                            )}
                          >
                            <SwitchPrimary
                              _switch={"_switch"}
                              className={classNames(
                                "__wab_instance",
                                sty.switchPrimary__mGej
                              )}
                            />
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"listingManagementTableRow3"}
                      data-plasmic-override={
                        overrides.listingManagementTableRow3
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.listingManagementTableRow3
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={
                          "listingSelectImageCaptionEditParent3"
                        }
                        data-plasmic-override={
                          overrides.listingSelectImageCaptionEditParent3
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingSelectImageCaptionEditParent3
                        )}
                      >
                        <ElementRadioPrimary
                          className={classNames(
                            "__wab_instance",
                            sty.elementRadioPrimary__kdCpk
                          )}
                          size={"_14Px"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"imageCaptionParent3"}
                          data-plasmic-override={overrides.imageCaptionParent3}
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.imageCaptionParent3
                          )}
                        >
                          <ImagePrimary
                            image360X188={
                              <img
                                alt={""}
                                className={classNames(
                                  defaultcss.img,
                                  sty.img__te5IA
                                )}
                                role={"img"}
                                src={
                                  "https://craftypixels.com/placeholder-image/40x40/f6f6f6/999999"
                                }
                              />
                            }
                            misc={"thumbnail70X40"}
                            thumbnail70X40={
                              <img
                                data-plasmic-name={"_70X403"}
                                data-plasmic-override={overrides._70X403}
                                alt={""}
                                className={classNames(
                                  defaultcss.img,
                                  sty._70X403
                                )}
                                role={"img"}
                                src={
                                  "https://craftypixels.com/placeholder-image/70x40/f8f8f8/333333"
                                }
                              />
                            }
                          />

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"userInfoParent5"}
                            data-plasmic-override={overrides.userInfoParent5}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.userInfoParent5
                            )}
                          >
                            <div
                              data-plasmic-name={"usernameParent5"}
                              data-plasmic-override={overrides.usernameParent5}
                              className={classNames(
                                defaultcss.all,
                                sty.usernameParent5
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__rYlog
                                )}
                              >
                                {"Service title"}
                              </div>
                            </div>
                          </p.Stack>

                          <button
                            data-plasmic-name={
                              "svgIconEditButtonManageListing3"
                            }
                            data-plasmic-override={
                              overrides.svgIconEditButtonManageListing3
                            }
                            className={classNames(
                              defaultcss.button,
                              sty.svgIconEditButtonManageListing3
                            )}
                            title={"Click to edit this listing"}
                          >
                            <IconPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.iconPrimary__hXmDx
                              )}
                              size={"_14Px"}
                              svgIcon14Px={
                                <EditIcon
                                  data-plasmic-name={"svgIcon21"}
                                  data-plasmic-override={overrides.svgIcon21}
                                  className={classNames(
                                    defaultcss.all,
                                    sty.svgIcon21
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </button>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"listingTableRowSecondary3"}
                        data-plasmic-override={
                          overrides.listingTableRowSecondary3
                        }
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.listingTableRowSecondary3
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingStatusTableRow3"}
                          data-plasmic-override={
                            overrides.listingStatusTableRow3
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingStatusTableRow3
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box___6T5Ga
                            )}
                          >
                            <ButtonPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.buttonPrimary__yBaE2
                              )}
                              color={"caution"}
                              size={"_90"}
                              type={"light"}
                            >
                              {"Delete"}
                            </ButtonPrimary>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__j9Nii
                            )}
                          >
                            <IconTextPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.iconTextPrimary__d6BIe
                              )}
                              elementIcon={
                                <IconPrimary
                                  className={classNames(
                                    "__wab_instance",
                                    sty.iconPrimary__qew0A
                                  )}
                                  svgIcon={
                                    <CircleStopIcon
                                      className={classNames(
                                        defaultcss.all,
                                        sty.svg__q6Lxi
                                      )}
                                      role={"img"}
                                    />
                                  }
                                />
                              }
                              text={"Un-listed"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__jEge8
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__nKzT
                              )}
                            >
                              {"00/00/00"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingCategoryTableRow3"}
                          data-plasmic-override={
                            overrides.listingCategoryTableRow3
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingCategoryTableRow3
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__eW7R
                            )}
                          >
                            <TagBadge
                              className={classNames(
                                "__wab_instance",
                                sty.tagBadge__o1Drz
                              )}
                              textBase10Px={"UX Design"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__jc1Sb
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box___89Cd
                              )}
                            >
                              {"$ 00,000"}
                            </div>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"listingTermTableRow3"}
                          data-plasmic-override={overrides.listingTermTableRow3}
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty.listingTermTableRow3
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__s65Il
                            )}
                          >
                            <TagBadge
                              className={classNames(
                                "__wab_instance",
                                sty.tagBadge__rhf2W
                              )}
                              textBase10Px={"Monthly"}
                            />
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__rXnco
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__lKjLy
                              )}
                            >
                              {"00/00/00"}
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__njgMg
                            )}
                          >
                            <SwitchPrimary
                              className={classNames(
                                "__wab_instance",
                                sty.switchPrimary__f7AcU
                              )}
                            />
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarInternal",
    "overlineHeadlineTitleParent",
    "overline",
    "tableInviteTeamHeadlineTitleParent",
    "headlineParent",
    "headlineText",
    "subheadText",
    "tableListingManagementParent",
    "listingManagementBlockParent",
    "listingTotalParent",
    "listingNumberParent",
    "listingNumber",
    "listingSearchFilterParent",
    "searchbarPrimary",
    "listingSearchFilterDropdownParent",
    "listingManagementTableColumnParent",
    "listingManagementTableHeader",
    "listingHeadlineSelectAllParent",
    "listingTableHeaderSecondarlyParent",
    "listingStatusTableHeaderParent",
    "listingCategoryTableHeaderParent",
    "listingTermTableHeaderParent",
    "listingManagementTableRow",
    "listingSelectImageCaptionEditParent",
    "imageCaptionParent",
    "_70X40",
    "userInfoParent3",
    "usernameParent3",
    "svgIconEditButtonManageListing",
    "svgIcon2",
    "listingTableRowSecondary",
    "listingStatusTableRow",
    "listingCategoryTableRow",
    "listingTermTableRow",
    "listingManagementTableRow2",
    "listingSelectImageCaptionEditParent2",
    "imageCaptionParent2",
    "_70X402",
    "userInfoParent4",
    "usernameParent4",
    "svgIconEditButtonManageListing2",
    "svgIcon20",
    "listingTableRowSecondary2",
    "listingStatusTableRow2",
    "listingCategoryTableRow2",
    "listingTermTableRow2",
    "listingManagementTableRow3",
    "listingSelectImageCaptionEditParent3",
    "imageCaptionParent3",
    "_70X403",
    "userInfoParent5",
    "usernameParent5",
    "svgIconEditButtonManageListing3",
    "svgIcon21",
    "listingTableRowSecondary3",
    "listingStatusTableRow3",
    "listingCategoryTableRow3",
    "listingTermTableRow3"
  ],

  navbarInternal: ["navbarInternal"],
  overlineHeadlineTitleParent: [
    "overlineHeadlineTitleParent",
    "overline",
    "tableInviteTeamHeadlineTitleParent",
    "headlineParent",
    "headlineText",
    "subheadText"
  ],

  overline: ["overline"],
  tableInviteTeamHeadlineTitleParent: [
    "tableInviteTeamHeadlineTitleParent",
    "headlineParent",
    "headlineText",
    "subheadText"
  ],

  headlineParent: ["headlineParent", "headlineText", "subheadText"],
  headlineText: ["headlineText"],
  subheadText: ["subheadText"],
  tableListingManagementParent: [
    "tableListingManagementParent",
    "listingManagementBlockParent",
    "listingTotalParent",
    "listingNumberParent",
    "listingNumber",
    "listingSearchFilterParent",
    "searchbarPrimary",
    "listingSearchFilterDropdownParent",
    "listingManagementTableColumnParent",
    "listingManagementTableHeader",
    "listingHeadlineSelectAllParent",
    "listingTableHeaderSecondarlyParent",
    "listingStatusTableHeaderParent",
    "listingCategoryTableHeaderParent",
    "listingTermTableHeaderParent",
    "listingManagementTableRow",
    "listingSelectImageCaptionEditParent",
    "imageCaptionParent",
    "_70X40",
    "userInfoParent3",
    "usernameParent3",
    "svgIconEditButtonManageListing",
    "svgIcon2",
    "listingTableRowSecondary",
    "listingStatusTableRow",
    "listingCategoryTableRow",
    "listingTermTableRow",
    "listingManagementTableRow2",
    "listingSelectImageCaptionEditParent2",
    "imageCaptionParent2",
    "_70X402",
    "userInfoParent4",
    "usernameParent4",
    "svgIconEditButtonManageListing2",
    "svgIcon20",
    "listingTableRowSecondary2",
    "listingStatusTableRow2",
    "listingCategoryTableRow2",
    "listingTermTableRow2",
    "listingManagementTableRow3",
    "listingSelectImageCaptionEditParent3",
    "imageCaptionParent3",
    "_70X403",
    "userInfoParent5",
    "usernameParent5",
    "svgIconEditButtonManageListing3",
    "svgIcon21",
    "listingTableRowSecondary3",
    "listingStatusTableRow3",
    "listingCategoryTableRow3",
    "listingTermTableRow3"
  ],

  listingManagementBlockParent: [
    "listingManagementBlockParent",
    "listingTotalParent",
    "listingNumberParent",
    "listingNumber",
    "listingSearchFilterParent",
    "searchbarPrimary",
    "listingSearchFilterDropdownParent",
    "listingManagementTableColumnParent",
    "listingManagementTableHeader",
    "listingHeadlineSelectAllParent",
    "listingTableHeaderSecondarlyParent",
    "listingStatusTableHeaderParent",
    "listingCategoryTableHeaderParent",
    "listingTermTableHeaderParent",
    "listingManagementTableRow",
    "listingSelectImageCaptionEditParent",
    "imageCaptionParent",
    "_70X40",
    "userInfoParent3",
    "usernameParent3",
    "svgIconEditButtonManageListing",
    "svgIcon2",
    "listingTableRowSecondary",
    "listingStatusTableRow",
    "listingCategoryTableRow",
    "listingTermTableRow",
    "listingManagementTableRow2",
    "listingSelectImageCaptionEditParent2",
    "imageCaptionParent2",
    "_70X402",
    "userInfoParent4",
    "usernameParent4",
    "svgIconEditButtonManageListing2",
    "svgIcon20",
    "listingTableRowSecondary2",
    "listingStatusTableRow2",
    "listingCategoryTableRow2",
    "listingTermTableRow2",
    "listingManagementTableRow3",
    "listingSelectImageCaptionEditParent3",
    "imageCaptionParent3",
    "_70X403",
    "userInfoParent5",
    "usernameParent5",
    "svgIconEditButtonManageListing3",
    "svgIcon21",
    "listingTableRowSecondary3",
    "listingStatusTableRow3",
    "listingCategoryTableRow3",
    "listingTermTableRow3"
  ],

  listingTotalParent: [
    "listingTotalParent",
    "listingNumberParent",
    "listingNumber"
  ],

  listingNumberParent: ["listingNumberParent", "listingNumber"],
  listingNumber: ["listingNumber"],
  listingSearchFilterParent: [
    "listingSearchFilterParent",
    "searchbarPrimary",
    "listingSearchFilterDropdownParent"
  ],

  searchbarPrimary: ["searchbarPrimary"],
  listingSearchFilterDropdownParent: ["listingSearchFilterDropdownParent"],
  listingManagementTableColumnParent: [
    "listingManagementTableColumnParent",
    "listingManagementTableHeader",
    "listingHeadlineSelectAllParent",
    "listingTableHeaderSecondarlyParent",
    "listingStatusTableHeaderParent",
    "listingCategoryTableHeaderParent",
    "listingTermTableHeaderParent",
    "listingManagementTableRow",
    "listingSelectImageCaptionEditParent",
    "imageCaptionParent",
    "_70X40",
    "userInfoParent3",
    "usernameParent3",
    "svgIconEditButtonManageListing",
    "svgIcon2",
    "listingTableRowSecondary",
    "listingStatusTableRow",
    "listingCategoryTableRow",
    "listingTermTableRow",
    "listingManagementTableRow2",
    "listingSelectImageCaptionEditParent2",
    "imageCaptionParent2",
    "_70X402",
    "userInfoParent4",
    "usernameParent4",
    "svgIconEditButtonManageListing2",
    "svgIcon20",
    "listingTableRowSecondary2",
    "listingStatusTableRow2",
    "listingCategoryTableRow2",
    "listingTermTableRow2",
    "listingManagementTableRow3",
    "listingSelectImageCaptionEditParent3",
    "imageCaptionParent3",
    "_70X403",
    "userInfoParent5",
    "usernameParent5",
    "svgIconEditButtonManageListing3",
    "svgIcon21",
    "listingTableRowSecondary3",
    "listingStatusTableRow3",
    "listingCategoryTableRow3",
    "listingTermTableRow3"
  ],

  listingManagementTableHeader: [
    "listingManagementTableHeader",
    "listingHeadlineSelectAllParent",
    "listingTableHeaderSecondarlyParent",
    "listingStatusTableHeaderParent",
    "listingCategoryTableHeaderParent",
    "listingTermTableHeaderParent"
  ],

  listingHeadlineSelectAllParent: ["listingHeadlineSelectAllParent"],
  listingTableHeaderSecondarlyParent: [
    "listingTableHeaderSecondarlyParent",
    "listingStatusTableHeaderParent",
    "listingCategoryTableHeaderParent",
    "listingTermTableHeaderParent"
  ],

  listingStatusTableHeaderParent: ["listingStatusTableHeaderParent"],
  listingCategoryTableHeaderParent: ["listingCategoryTableHeaderParent"],
  listingTermTableHeaderParent: ["listingTermTableHeaderParent"],
  listingManagementTableRow: [
    "listingManagementTableRow",
    "listingSelectImageCaptionEditParent",
    "imageCaptionParent",
    "_70X40",
    "userInfoParent3",
    "usernameParent3",
    "svgIconEditButtonManageListing",
    "svgIcon2",
    "listingTableRowSecondary",
    "listingStatusTableRow",
    "listingCategoryTableRow",
    "listingTermTableRow"
  ],

  listingSelectImageCaptionEditParent: [
    "listingSelectImageCaptionEditParent",
    "imageCaptionParent",
    "_70X40",
    "userInfoParent3",
    "usernameParent3",
    "svgIconEditButtonManageListing",
    "svgIcon2"
  ],

  imageCaptionParent: [
    "imageCaptionParent",
    "_70X40",
    "userInfoParent3",
    "usernameParent3",
    "svgIconEditButtonManageListing",
    "svgIcon2"
  ],

  _70X40: ["_70X40"],
  userInfoParent3: ["userInfoParent3", "usernameParent3"],
  usernameParent3: ["usernameParent3"],
  svgIconEditButtonManageListing: [
    "svgIconEditButtonManageListing",
    "svgIcon2"
  ],

  svgIcon2: ["svgIcon2"],
  listingTableRowSecondary: [
    "listingTableRowSecondary",
    "listingStatusTableRow",
    "listingCategoryTableRow",
    "listingTermTableRow"
  ],

  listingStatusTableRow: ["listingStatusTableRow"],
  listingCategoryTableRow: ["listingCategoryTableRow"],
  listingTermTableRow: ["listingTermTableRow"],
  listingManagementTableRow2: [
    "listingManagementTableRow2",
    "listingSelectImageCaptionEditParent2",
    "imageCaptionParent2",
    "_70X402",
    "userInfoParent4",
    "usernameParent4",
    "svgIconEditButtonManageListing2",
    "svgIcon20",
    "listingTableRowSecondary2",
    "listingStatusTableRow2",
    "listingCategoryTableRow2",
    "listingTermTableRow2"
  ],

  listingSelectImageCaptionEditParent2: [
    "listingSelectImageCaptionEditParent2",
    "imageCaptionParent2",
    "_70X402",
    "userInfoParent4",
    "usernameParent4",
    "svgIconEditButtonManageListing2",
    "svgIcon20"
  ],

  imageCaptionParent2: [
    "imageCaptionParent2",
    "_70X402",
    "userInfoParent4",
    "usernameParent4",
    "svgIconEditButtonManageListing2",
    "svgIcon20"
  ],

  _70X402: ["_70X402"],
  userInfoParent4: ["userInfoParent4", "usernameParent4"],
  usernameParent4: ["usernameParent4"],
  svgIconEditButtonManageListing2: [
    "svgIconEditButtonManageListing2",
    "svgIcon20"
  ],

  svgIcon20: ["svgIcon20"],
  listingTableRowSecondary2: [
    "listingTableRowSecondary2",
    "listingStatusTableRow2",
    "listingCategoryTableRow2",
    "listingTermTableRow2"
  ],

  listingStatusTableRow2: ["listingStatusTableRow2"],
  listingCategoryTableRow2: ["listingCategoryTableRow2"],
  listingTermTableRow2: ["listingTermTableRow2"],
  listingManagementTableRow3: [
    "listingManagementTableRow3",
    "listingSelectImageCaptionEditParent3",
    "imageCaptionParent3",
    "_70X403",
    "userInfoParent5",
    "usernameParent5",
    "svgIconEditButtonManageListing3",
    "svgIcon21",
    "listingTableRowSecondary3",
    "listingStatusTableRow3",
    "listingCategoryTableRow3",
    "listingTermTableRow3"
  ],

  listingSelectImageCaptionEditParent3: [
    "listingSelectImageCaptionEditParent3",
    "imageCaptionParent3",
    "_70X403",
    "userInfoParent5",
    "usernameParent5",
    "svgIconEditButtonManageListing3",
    "svgIcon21"
  ],

  imageCaptionParent3: [
    "imageCaptionParent3",
    "_70X403",
    "userInfoParent5",
    "usernameParent5",
    "svgIconEditButtonManageListing3",
    "svgIcon21"
  ],

  _70X403: ["_70X403"],
  userInfoParent5: ["userInfoParent5", "usernameParent5"],
  usernameParent5: ["usernameParent5"],
  svgIconEditButtonManageListing3: [
    "svgIconEditButtonManageListing3",
    "svgIcon21"
  ],

  svgIcon21: ["svgIcon21"],
  listingTableRowSecondary3: [
    "listingTableRowSecondary3",
    "listingStatusTableRow3",
    "listingCategoryTableRow3",
    "listingTermTableRow3"
  ],

  listingStatusTableRow3: ["listingStatusTableRow3"],
  listingCategoryTableRow3: ["listingCategoryTableRow3"],
  listingTermTableRow3: ["listingTermTableRow3"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicManageListing__ArgProps,
      internalVariantPropNames: PlasmicManageListing__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicManageListing__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicManageListing";
  } else {
    func.displayName = `PlasmicManageListing.${nodeName}`;
  }
  return func;
}

export const PlasmicManageListing = Object.assign(
  // Top-level PlasmicManageListing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarInternal: makeNodeComponent("navbarInternal"),
    overlineHeadlineTitleParent: makeNodeComponent(
      "overlineHeadlineTitleParent"
    ),

    overline: makeNodeComponent("overline"),
    tableInviteTeamHeadlineTitleParent: makeNodeComponent(
      "tableInviteTeamHeadlineTitleParent"
    ),

    headlineParent: makeNodeComponent("headlineParent"),
    headlineText: makeNodeComponent("headlineText"),
    subheadText: makeNodeComponent("subheadText"),
    tableListingManagementParent: makeNodeComponent(
      "tableListingManagementParent"
    ),

    listingManagementBlockParent: makeNodeComponent(
      "listingManagementBlockParent"
    ),

    listingTotalParent: makeNodeComponent("listingTotalParent"),
    listingNumberParent: makeNodeComponent("listingNumberParent"),
    listingNumber: makeNodeComponent("listingNumber"),
    listingSearchFilterParent: makeNodeComponent("listingSearchFilterParent"),
    searchbarPrimary: makeNodeComponent("searchbarPrimary"),
    listingSearchFilterDropdownParent: makeNodeComponent(
      "listingSearchFilterDropdownParent"
    ),

    listingManagementTableColumnParent: makeNodeComponent(
      "listingManagementTableColumnParent"
    ),

    listingManagementTableHeader: makeNodeComponent(
      "listingManagementTableHeader"
    ),

    listingHeadlineSelectAllParent: makeNodeComponent(
      "listingHeadlineSelectAllParent"
    ),

    listingTableHeaderSecondarlyParent: makeNodeComponent(
      "listingTableHeaderSecondarlyParent"
    ),

    listingStatusTableHeaderParent: makeNodeComponent(
      "listingStatusTableHeaderParent"
    ),

    listingCategoryTableHeaderParent: makeNodeComponent(
      "listingCategoryTableHeaderParent"
    ),

    listingTermTableHeaderParent: makeNodeComponent(
      "listingTermTableHeaderParent"
    ),

    listingManagementTableRow: makeNodeComponent("listingManagementTableRow"),
    listingSelectImageCaptionEditParent: makeNodeComponent(
      "listingSelectImageCaptionEditParent"
    ),

    imageCaptionParent: makeNodeComponent("imageCaptionParent"),
    _70X40: makeNodeComponent("_70X40"),
    userInfoParent3: makeNodeComponent("userInfoParent3"),
    usernameParent3: makeNodeComponent("usernameParent3"),
    svgIconEditButtonManageListing: makeNodeComponent(
      "svgIconEditButtonManageListing"
    ),

    svgIcon2: makeNodeComponent("svgIcon2"),
    listingTableRowSecondary: makeNodeComponent("listingTableRowSecondary"),
    listingStatusTableRow: makeNodeComponent("listingStatusTableRow"),
    listingCategoryTableRow: makeNodeComponent("listingCategoryTableRow"),
    listingTermTableRow: makeNodeComponent("listingTermTableRow"),
    listingManagementTableRow2: makeNodeComponent("listingManagementTableRow2"),
    listingSelectImageCaptionEditParent2: makeNodeComponent(
      "listingSelectImageCaptionEditParent2"
    ),

    imageCaptionParent2: makeNodeComponent("imageCaptionParent2"),
    _70X402: makeNodeComponent("_70X402"),
    userInfoParent4: makeNodeComponent("userInfoParent4"),
    usernameParent4: makeNodeComponent("usernameParent4"),
    svgIconEditButtonManageListing2: makeNodeComponent(
      "svgIconEditButtonManageListing2"
    ),

    svgIcon20: makeNodeComponent("svgIcon20"),
    listingTableRowSecondary2: makeNodeComponent("listingTableRowSecondary2"),
    listingStatusTableRow2: makeNodeComponent("listingStatusTableRow2"),
    listingCategoryTableRow2: makeNodeComponent("listingCategoryTableRow2"),
    listingTermTableRow2: makeNodeComponent("listingTermTableRow2"),
    listingManagementTableRow3: makeNodeComponent("listingManagementTableRow3"),
    listingSelectImageCaptionEditParent3: makeNodeComponent(
      "listingSelectImageCaptionEditParent3"
    ),

    imageCaptionParent3: makeNodeComponent("imageCaptionParent3"),
    _70X403: makeNodeComponent("_70X403"),
    userInfoParent5: makeNodeComponent("userInfoParent5"),
    usernameParent5: makeNodeComponent("usernameParent5"),
    svgIconEditButtonManageListing3: makeNodeComponent(
      "svgIconEditButtonManageListing3"
    ),

    svgIcon21: makeNodeComponent("svgIcon21"),
    listingTableRowSecondary3: makeNodeComponent("listingTableRowSecondary3"),
    listingStatusTableRow3: makeNodeComponent("listingStatusTableRow3"),
    listingCategoryTableRow3: makeNodeComponent("listingCategoryTableRow3"),
    listingTermTableRow3: makeNodeComponent("listingTermTableRow3"),
    // Metadata about props expected for PlasmicManageListing
    internalVariantProps: PlasmicManageListing__VariantProps,
    internalArgProps: PlasmicManageListing__ArgProps
  }
);

export default PlasmicManageListing;
/* prettier-ignore-end */
