// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: 8E4p0Ww2xdD
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavbarServiceListing from "../../NavbarServiceListing"; // plasmic-import: PUBVQZa84u/component
import ProgressBar from "../../ProgressBar"; // plasmic-import: jFfoBtNGGG/component
import InputCheckoutItem from "../../InputCheckoutItem"; // plasmic-import: HtA78mOD-bC/component
import ToggleCheckoutItem from "../../ToggleCheckoutItem"; // plasmic-import: oZVadAmksG/component
import ToggleSubscriptionCard from "../../ToggleSubscriptionCard"; // plasmic-import: 7hi-uHtvzE/component
import Accordion from "../../Accordion"; // plasmic-import: azR0jnXzDL/component
import TextLinkUnderlinePrimary from "../../TextLinkUnderlinePrimary"; // plasmic-import: fFeX6kEAMB/component
import ServiceProcessCard from "../../ServiceProcessCard"; // plasmic-import: VPPN2nrcs6/component
import ServiceFeatureB from "../../ServiceFeatureB"; // plasmic-import: WvXgBKm3bX/component
import ServiceFeatureCard from "../../ServiceFeatureCard"; // plasmic-import: NNvsnnDA0J/component
import ChipBadgeDisplay from "../../ChipBadgeDisplay"; // plasmic-import: 9_NbJKBtbu/component
import CheckoutServiceListing from "../../CheckoutServiceListing"; // plasmic-import: UHEuX3OG9AY/component
import FooterServiceListing from "../../FooterServiceListing"; // plasmic-import: XhB16zaJfQ/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicServiceListingOrder.module.css"; // plasmic-import: 8E4p0Ww2xdD/css
import CellDividerIcon from "./icons/PlasmicIcon__CellDivider"; // plasmic-import: n34VWl8XDZ4/icon
import Icon111Icon from "./icons/PlasmicIcon__Icon111"; // plasmic-import: fytPd42_r6/icon

export const PlasmicServiceListingOrder__VariantProps = new Array();

export const PlasmicServiceListingOrder__ArgProps = new Array();

function PlasmicServiceListingOrder__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"serviceListingNavbar"}
            data-plasmic-override={overrides.serviceListingNavbar}
            className={classNames(defaultcss.all, sty.serviceListingNavbar)}
          >
            <NavbarServiceListing
              data-plasmic-name={"navbarServiceListing"}
              data-plasmic-override={overrides.navbarServiceListing}
              className={classNames("__wab_instance", sty.navbarServiceListing)}
              state={"checkout"}
            >
              {"Order"}
            </NavbarServiceListing>

            <ProgressBar
              data-plasmic-name={"progressBar"}
              data-plasmic-override={overrides.progressBar}
              className={classNames("__wab_instance", sty.progressBar)}
              progress={"_90"}
            />
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__iA2Fl)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"orderParent"}
              data-plasmic-override={overrides.orderParent}
              hasGap={true}
              className={classNames(defaultcss.all, sty.orderParent)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"orderHeadlineTitleImage"}
                data-plasmic-override={overrides.orderHeadlineTitleImage}
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  sty.orderHeadlineTitleImage
                )}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__rf54P
                  )}
                >
                  {"Your Order"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"orderImageHeroBlock"}
                  data-plasmic-override={overrides.orderImageHeroBlock}
                  hasGap={true}
                  className={classNames(
                    defaultcss.all,
                    sty.orderImageHeroBlock
                  )}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__tpSpo)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__gAzcN
                      )}
                    >
                      {"Service title"}
                    </div>

                    <div
                      className={classNames(defaultcss.all, sty.box___3Ix7L)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__rnmzD)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box___1FF
                          )}
                        >
                          {"Category"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__xMgF
                          )}
                        >
                          {"|"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__thaOu
                          )}
                        >
                          {"Service"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__qLiJy)}
                  >
                    <div className={classNames(defaultcss.all, sty.box__n6YQh)}>
                      <img
                        data-plasmic-name={"img"}
                        data-plasmic-override={overrides.img}
                        alt={""}
                        className={classNames(defaultcss.img, sty.img)}
                        role={"img"}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box___2H175)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__asdw4)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__fzj3D
                          )}
                        >
                          {"By"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__kYffC
                          )}
                        >
                          {"CompanyName"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__gHsrQ)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__aFrK9
                          )}
                        >
                          {"$"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__eNz1K
                          )}
                        >
                          {"000.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <CellDividerIcon
                className={classNames(defaultcss.all, sty.svg__jLe3L)}
                role={"img"}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"orderInputBlock"}
                data-plasmic-override={overrides.orderInputBlock}
                hasGap={true}
                className={classNames(defaultcss.all, sty.orderInputBlock)}
              >
                <InputCheckoutItem
                  data-plasmic-name={"orderListingInput"}
                  data-plasmic-override={overrides.orderListingInput}
                  className={classNames(
                    "__wab_instance",
                    sty.orderListingInput
                  )}
                  slot={"Service"}
                  slot2={"Listing"}
                >
                  {"Add additional drafts of this service."}
                </InputCheckoutItem>

                <ToggleCheckoutItem
                  data-plasmic-name={"orderPlacementInput"}
                  data-plasmic-override={overrides.orderPlacementInput}
                  className={classNames(
                    "__wab_instance",
                    sty.orderPlacementInput
                  )}
                  slot={"Placement"}
                  slot2={<ToggleSubscriptionCard inactive={"placement"} />}
                >
                  {"Get priority placement in search"}
                </ToggleCheckoutItem>

                <ToggleCheckoutItem
                  data-plasmic-name={"orderSubscriptionInput"}
                  data-plasmic-override={overrides.orderSubscriptionInput}
                  className={classNames(
                    "__wab_instance",
                    sty.orderSubscriptionInput
                  )}
                  slot={"Subscription"}
                  slot2={<ToggleSubscriptionCard />}
                >
                  {"Get 30% off when you switch to annual."}
                </ToggleCheckoutItem>
              </p.Stack>

              <CellDividerIcon
                className={classNames(defaultcss.all, sty.svg__adXy9)}
                role={"img"}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"summaryCheckoutBlock"}
                data-plasmic-override={overrides.summaryCheckoutBlock}
                hasGap={true}
                className={classNames(defaultcss.all, sty.summaryCheckoutBlock)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__pgLn8
                  )}
                >
                  {"Summary"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"orderCheckoutSummaryReviewBody"}
                  data-plasmic-override={
                    overrides.orderCheckoutSummaryReviewBody
                  }
                  hasGap={true}
                  className={classNames(
                    defaultcss.all,
                    sty.orderCheckoutSummaryReviewBody
                  )}
                >
                  <div
                    data-plasmic-name={"orderDescriptionCheckoutBlock"}
                    data-plasmic-override={
                      overrides.orderDescriptionCheckoutBlock
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.orderDescriptionCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__oHxSn
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__qzwCj
                        )}
                      >
                        {"Description"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"serviceDescriptionOverview"}
                      data-plasmic-override={
                        overrides.serviceDescriptionOverview
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.serviceDescriptionOverview
                      )}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__o8GjR
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis "
                        }
                      </div>

                      <div
                        className={classNames(defaultcss.all, sty.box__v2B7N)}
                      >
                        <TextLinkUnderlinePrimary
                          text={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__cj2Ey
                              )}
                            >
                              {"Edit"}
                            </div>
                          }
                        />
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"orderProcessCheckoutBlock"}
                    data-plasmic-override={overrides.orderProcessCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderProcessCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__uZb74
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__f3LjH
                        )}
                      >
                        {"Process"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"serviceProcessDescription"}
                      data-plasmic-override={
                        overrides.serviceProcessDescription
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.serviceProcessDescription
                      )}
                    >
                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__lDgnF
                        )}
                        size={"_360"}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__bvfzh
                        )}
                        size={"_360"}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__u4Kx5
                        )}
                        size={"_360"}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__wXLsT
                        )}
                        size={"_360"}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__v8F9T
                        )}
                        size={"_360"}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__vvYjc
                        )}
                        size={"_360"}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__ohfM
                        )}
                        size={"_360"}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__gmG0
                        )}
                        size={"_360"}
                      />

                      <div
                        className={classNames(defaultcss.all, sty.box__n8QcC)}
                      >
                        <TextLinkUnderlinePrimary
                          text={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__ql0Wc
                              )}
                            >
                              {"Edit"}
                            </div>
                          }
                        />
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"orderFeaturesCheckoutBlock"}
                    data-plasmic-override={overrides.orderFeaturesCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderFeaturesCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__fKoVb
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__d1Qg
                        )}
                      >
                        {"Features"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box___3Aag)}
                    >
                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__qmzjr
                        )}
                        size={"small"}
                        slot={
                          <Icon111Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__zaREj
                            )}
                            role={"img"}
                          />
                        }
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__fCsEs
                        )}
                        size={"small"}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__ydgMm
                        )}
                        size={"small"}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__tTiQb
                        )}
                        size={"small"}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__d8Vzw
                        )}
                        size={"small"}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__bBoo
                        )}
                        size={"small"}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__ykHhB
                        )}
                        size={"small"}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB___4JRtr
                        )}
                        size={"small"}
                      />

                      <div
                        className={classNames(defaultcss.all, sty.box__graKg)}
                      >
                        <TextLinkUnderlinePrimary
                          text={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__joXtC
                              )}
                            >
                              {"Edit"}
                            </div>
                          }
                        />
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"orderContentCheckoutBlock"}
                    data-plasmic-override={overrides.orderContentCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderContentCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__d5SM1
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__iW1FQ
                        )}
                      >
                        {"Content"}
                      </div>
                    </Accordion>

                    <div
                      className={classNames(defaultcss.all, sty.box___2WzIx)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__uqIe)}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__bsUeT
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__jqwHz
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___1PodD
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__wWxZb
                          )}
                          size={"small"}
                        />

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.box___7GrrZ
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__lToR
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderMethodCheckoutBlock"}
                    data-plasmic-override={overrides.orderMethodCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderMethodCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__oVafJ
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__iUaXe
                        )}
                      >
                        {"Method"}
                      </div>
                    </Accordion>

                    <div className={classNames(defaultcss.all, sty.box__xLn46)}>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__q67Ma)}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__nwRNy
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__sfAmz
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__bD
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___95S
                          )}
                          size={"small"}
                        />

                        <div
                          className={classNames(defaultcss.all, sty.box__sfmvO)}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__wNX
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderToolsCheckoutBlock"}
                    data-plasmic-override={overrides.orderToolsCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderToolsCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__phei2
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__qnofE
                        )}
                      >
                        {"Tools"}
                      </div>
                    </Accordion>

                    <div className={classNames(defaultcss.all, sty.box__vHctT)}>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__sPEn)}
                      >
                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__c9Fb1
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__teTol
                            )}
                          >
                            {"Badge"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__xuEes
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__ibwlQ
                            )}
                          >
                            {"Design system"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__kKztv
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__joB
                            )}
                          >
                            {"Mobile app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__puJk
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__veHrF
                            )}
                          >
                            {"Web app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay___4TQRk
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box___7EKwg
                            )}
                          >
                            {"E-commerce"}
                          </div>
                        </ChipBadgeDisplay>

                        <div
                          className={classNames(defaultcss.all, sty.box__zqhit)}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__yqLaP
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderFormatCheckoutBlock"}
                    data-plasmic-override={overrides.orderFormatCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderFormatCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion___3NqCd
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__lnWes
                        )}
                      >
                        {"Format"}
                      </div>
                    </Accordion>

                    <div className={classNames(defaultcss.all, sty.box__wbhys)}>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__esvWn)}
                      >
                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__uJxLr
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__zpCu7
                            )}
                          >
                            {"Badge"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay___5BjZa
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__ugTJ
                            )}
                          >
                            {"Design system"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__a3P8S
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__s7Snj
                            )}
                          >
                            {"Mobile app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay___4Qxjk
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__gaBRk
                            )}
                          >
                            {"Web app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__xIvqk
                          )}
                          type={"ghost"}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box___6IAlw
                            )}
                          >
                            {"E-commerce"}
                          </div>
                        </ChipBadgeDisplay>

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.box___29EBq
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box___2HRAc
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderRequirementCheckoutBlock"}
                    data-plasmic-override={
                      overrides.orderRequirementCheckoutBlock
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.orderRequirementCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__rkJj
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__iq1En
                        )}
                      >
                        {"Requirements"}
                      </div>
                    </Accordion>

                    <div className={classNames(defaultcss.all, sty.box__lFdyR)}>
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__pkA
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commo"
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__xrmAm)}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__iH2H5
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__pr0Pb
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___24YTa
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__ol4Pt
                          )}
                          size={"small"}
                        />

                        <div
                          className={classNames(defaultcss.all, sty.box__asRCt)}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__l7GU
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderTermsCheckoutBlock"}
                    data-plasmic-override={overrides.orderTermsCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderTermsCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__k5NlT
                      )}
                      size={"_360"}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box___2Adi5
                        )}
                      >
                        {"Terms"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__aJi4H)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box___8I9Ce
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commo"
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__ugk5L)}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___7W0OA
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__e9Pns
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__ddulC
                          )}
                          size={"small"}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__m6Zzn
                          )}
                          size={"small"}
                        />

                        <div
                          className={classNames(defaultcss.all, sty.box__mw92)}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__os1Ju
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <CheckoutServiceListing
              data-plasmic-name={"checkoutServiceListing"}
              data-plasmic-override={overrides.checkoutServiceListing}
              className={classNames(
                "__wab_instance",
                sty.checkoutServiceListing
              )}
            />
          </p.Stack>

          <FooterServiceListing
            data-plasmic-name={"footerServiceListing"}
            data-plasmic-override={overrides.footerServiceListing}
            className={classNames("__wab_instance", sty.footerServiceListing)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "serviceListingNavbar",
    "navbarServiceListing",
    "progressBar",
    "orderParent",
    "orderHeadlineTitleImage",
    "orderImageHeroBlock",
    "img",
    "orderInputBlock",
    "orderListingInput",
    "orderPlacementInput",
    "orderSubscriptionInput",
    "summaryCheckoutBlock",
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock",
    "checkoutServiceListing",
    "footerServiceListing"
  ],

  serviceListingNavbar: [
    "serviceListingNavbar",
    "navbarServiceListing",
    "progressBar"
  ],

  navbarServiceListing: ["navbarServiceListing"],
  progressBar: ["progressBar"],
  orderParent: [
    "orderParent",
    "orderHeadlineTitleImage",
    "orderImageHeroBlock",
    "img",
    "orderInputBlock",
    "orderListingInput",
    "orderPlacementInput",
    "orderSubscriptionInput",
    "summaryCheckoutBlock",
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock"
  ],

  orderHeadlineTitleImage: [
    "orderHeadlineTitleImage",
    "orderImageHeroBlock",
    "img"
  ],

  orderImageHeroBlock: ["orderImageHeroBlock", "img"],
  img: ["img"],
  orderInputBlock: [
    "orderInputBlock",
    "orderListingInput",
    "orderPlacementInput",
    "orderSubscriptionInput"
  ],

  orderListingInput: ["orderListingInput"],
  orderPlacementInput: ["orderPlacementInput"],
  orderSubscriptionInput: ["orderSubscriptionInput"],
  summaryCheckoutBlock: [
    "summaryCheckoutBlock",
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock"
  ],

  orderCheckoutSummaryReviewBody: [
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock"
  ],

  orderDescriptionCheckoutBlock: [
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview"
  ],

  serviceDescriptionOverview: ["serviceDescriptionOverview"],
  orderProcessCheckoutBlock: [
    "orderProcessCheckoutBlock",
    "serviceProcessDescription"
  ],

  serviceProcessDescription: ["serviceProcessDescription"],
  orderFeaturesCheckoutBlock: ["orderFeaturesCheckoutBlock"],
  orderContentCheckoutBlock: ["orderContentCheckoutBlock"],
  orderMethodCheckoutBlock: ["orderMethodCheckoutBlock"],
  orderToolsCheckoutBlock: ["orderToolsCheckoutBlock"],
  orderFormatCheckoutBlock: ["orderFormatCheckoutBlock"],
  orderRequirementCheckoutBlock: ["orderRequirementCheckoutBlock"],
  orderTermsCheckoutBlock: ["orderTermsCheckoutBlock"],
  checkoutServiceListing: ["checkoutServiceListing"],
  footerServiceListing: ["footerServiceListing"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicServiceListingOrder__ArgProps,
      internalVariantPropNames: PlasmicServiceListingOrder__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicServiceListingOrder__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicServiceListingOrder";
  } else {
    func.displayName = `PlasmicServiceListingOrder.${nodeName}`;
  }
  return func;
}

export const PlasmicServiceListingOrder = Object.assign(
  // Top-level PlasmicServiceListingOrder renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    serviceListingNavbar: makeNodeComponent("serviceListingNavbar"),
    navbarServiceListing: makeNodeComponent("navbarServiceListing"),
    progressBar: makeNodeComponent("progressBar"),
    orderParent: makeNodeComponent("orderParent"),
    orderHeadlineTitleImage: makeNodeComponent("orderHeadlineTitleImage"),
    orderImageHeroBlock: makeNodeComponent("orderImageHeroBlock"),
    img: makeNodeComponent("img"),
    orderInputBlock: makeNodeComponent("orderInputBlock"),
    orderListingInput: makeNodeComponent("orderListingInput"),
    orderPlacementInput: makeNodeComponent("orderPlacementInput"),
    orderSubscriptionInput: makeNodeComponent("orderSubscriptionInput"),
    summaryCheckoutBlock: makeNodeComponent("summaryCheckoutBlock"),
    orderCheckoutSummaryReviewBody: makeNodeComponent(
      "orderCheckoutSummaryReviewBody"
    ),

    orderDescriptionCheckoutBlock: makeNodeComponent(
      "orderDescriptionCheckoutBlock"
    ),

    serviceDescriptionOverview: makeNodeComponent("serviceDescriptionOverview"),
    orderProcessCheckoutBlock: makeNodeComponent("orderProcessCheckoutBlock"),
    serviceProcessDescription: makeNodeComponent("serviceProcessDescription"),
    orderFeaturesCheckoutBlock: makeNodeComponent("orderFeaturesCheckoutBlock"),
    orderContentCheckoutBlock: makeNodeComponent("orderContentCheckoutBlock"),
    orderMethodCheckoutBlock: makeNodeComponent("orderMethodCheckoutBlock"),
    orderToolsCheckoutBlock: makeNodeComponent("orderToolsCheckoutBlock"),
    orderFormatCheckoutBlock: makeNodeComponent("orderFormatCheckoutBlock"),
    orderRequirementCheckoutBlock: makeNodeComponent(
      "orderRequirementCheckoutBlock"
    ),

    orderTermsCheckoutBlock: makeNodeComponent("orderTermsCheckoutBlock"),
    checkoutServiceListing: makeNodeComponent("checkoutServiceListing"),
    footerServiceListing: makeNodeComponent("footerServiceListing"),
    // Metadata about props expected for PlasmicServiceListingOrder
    internalVariantProps: PlasmicServiceListingOrder__VariantProps,
    internalArgProps: PlasmicServiceListingOrder__ArgProps
  }
);

export default PlasmicServiceListingOrder;
/* prettier-ignore-end */
