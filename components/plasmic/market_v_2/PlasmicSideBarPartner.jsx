// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: 0x12FzmUo9P
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import SideBarPartnerHeaderPanelNav from "../../SideBarPartnerHeaderPanelNav"; // plasmic-import: yNsN5_wXEjo/component
import SideBarButtonHeader from "../../SideBarButtonHeader"; // plasmic-import: l8x-1W9kbZ/component
import SideBarCommunityStats from "../../SideBarCommunityStats"; // plasmic-import: JsYhtV8o3HC/component
import BadgeCommunityRating from "../../BadgeCommunityRating"; // plasmic-import: 0Y8M1lpCIf/component
import BadgeVerification from "../../BadgeVerification"; // plasmic-import: _M5uzrbjQp/component
import TagPartnerB from "../../TagPartnerB"; // plasmic-import: X-GLY42uIL/component
import SideBarListingStats from "../../SideBarListingStats"; // plasmic-import: mNo76Uc_Jdn/component
import ElementSideBarPartnerMarketPanel from "../../ElementSideBarPartnerMarketPanel"; // plasmic-import: i3ai6jIm4VK/component
import ElementSideBarPartnerProfilePanel from "../../ElementSideBarPartnerProfilePanel"; // plasmic-import: ESb2G2fq56P/component
import ElementSideBarPartnerAccountPanel from "../../ElementSideBarPartnerAccountPanel"; // plasmic-import: frbDg7XY-m/component
import SideBarFooter from "../../SideBarFooter"; // plasmic-import: y532Y0sDIf/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicSideBarPartner.module.css"; // plasmic-import: 0x12FzmUo9P/css

export const PlasmicSideBarPartner__VariantProps = new Array();

export const PlasmicSideBarPartner__ArgProps = new Array();

function PlasmicSideBarPartner__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"headerPanelMainPartner"}
        data-plasmic-override={overrides.headerPanelMainPartner}
        className={classNames(defaultcss.all, sty.headerPanelMainPartner)}
      >
        <SideBarPartnerHeaderPanelNav
          data-plasmic-name={"sideBarPartnerHeaderPanelNav"}
          data-plasmic-override={overrides.sideBarPartnerHeaderPanelNav}
          className={classNames(
            "__wab_instance",
            sty.sideBarPartnerHeaderPanelNav
          )}
        />

        <SideBarButtonHeader
          data-plasmic-name={"sideBarButtonHeader"}
          data-plasmic-override={overrides.sideBarButtonHeader}
          className={classNames("__wab_instance", sty.sideBarButtonHeader)}
        />
      </div>

      <SideBarCommunityStats
        data-plasmic-name={"sideBarCommunityStats"}
        data-plasmic-override={overrides.sideBarCommunityStats}
        className={classNames("__wab_instance", sty.sideBarCommunityStats)}
        elementUserbadges={
          <React.Fragment>
            <BadgeCommunityRating
              data-plasmic-name={"badgeCommunityRating"}
              data-plasmic-override={overrides.badgeCommunityRating}
              className={classNames("__wab_instance", sty.badgeCommunityRating)}
            />

            <BadgeVerification
              data-plasmic-name={"badgeVerification"}
              data-plasmic-override={overrides.badgeVerification}
              className={classNames("__wab_instance", sty.badgeVerification)}
            />
          </React.Fragment>
        }
        userTag={
          <TagPartnerB
            data-plasmic-name={"tagPartnerB"}
            data-plasmic-override={overrides.tagPartnerB}
            className={classNames("__wab_instance", sty.tagPartnerB)}
          />
        }
      />

      <SideBarListingStats
        data-plasmic-name={"sideBarListingStats"}
        data-plasmic-override={overrides.sideBarListingStats}
        className={classNames("__wab_instance", sty.sideBarListingStats)}
      />

      <ElementSideBarPartnerMarketPanel
        data-plasmic-name={"elementSideBarPartnerMarketPanel"}
        data-plasmic-override={overrides.elementSideBarPartnerMarketPanel}
        className={classNames(
          "__wab_instance",
          sty.elementSideBarPartnerMarketPanel
        )}
      />

      <ElementSideBarPartnerProfilePanel
        data-plasmic-name={"elementSideBarPartnerProfilePanel"}
        data-plasmic-override={overrides.elementSideBarPartnerProfilePanel}
        className={classNames(
          "__wab_instance",
          sty.elementSideBarPartnerProfilePanel
        )}
      />

      <ElementSideBarPartnerAccountPanel
        data-plasmic-name={"elementSideBarPartnerAccountPanel"}
        data-plasmic-override={overrides.elementSideBarPartnerAccountPanel}
        className={classNames(
          "__wab_instance",
          sty.elementSideBarPartnerAccountPanel
        )}
      />

      <SideBarFooter
        data-plasmic-name={"sideBarFooter"}
        data-plasmic-override={overrides.sideBarFooter}
        className={classNames("__wab_instance", sty.sideBarFooter)}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerPanelMainPartner",
    "sideBarPartnerHeaderPanelNav",
    "sideBarButtonHeader",
    "sideBarCommunityStats",
    "badgeCommunityRating",
    "badgeVerification",
    "tagPartnerB",
    "sideBarListingStats",
    "elementSideBarPartnerMarketPanel",
    "elementSideBarPartnerProfilePanel",
    "elementSideBarPartnerAccountPanel",
    "sideBarFooter"
  ],

  headerPanelMainPartner: [
    "headerPanelMainPartner",
    "sideBarPartnerHeaderPanelNav",
    "sideBarButtonHeader"
  ],

  sideBarPartnerHeaderPanelNav: ["sideBarPartnerHeaderPanelNav"],
  sideBarButtonHeader: ["sideBarButtonHeader"],
  sideBarCommunityStats: [
    "sideBarCommunityStats",
    "badgeCommunityRating",
    "badgeVerification",
    "tagPartnerB"
  ],

  badgeCommunityRating: ["badgeCommunityRating"],
  badgeVerification: ["badgeVerification"],
  tagPartnerB: ["tagPartnerB"],
  sideBarListingStats: ["sideBarListingStats"],
  elementSideBarPartnerMarketPanel: ["elementSideBarPartnerMarketPanel"],
  elementSideBarPartnerProfilePanel: ["elementSideBarPartnerProfilePanel"],
  elementSideBarPartnerAccountPanel: ["elementSideBarPartnerAccountPanel"],
  sideBarFooter: ["sideBarFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSideBarPartner__ArgProps,
      internalVariantPropNames: PlasmicSideBarPartner__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicSideBarPartner__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSideBarPartner";
  } else {
    func.displayName = `PlasmicSideBarPartner.${nodeName}`;
  }
  return func;
}

export const PlasmicSideBarPartner = Object.assign(
  // Top-level PlasmicSideBarPartner renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerPanelMainPartner: makeNodeComponent("headerPanelMainPartner"),
    sideBarPartnerHeaderPanelNav: makeNodeComponent(
      "sideBarPartnerHeaderPanelNav"
    ),

    sideBarButtonHeader: makeNodeComponent("sideBarButtonHeader"),
    sideBarCommunityStats: makeNodeComponent("sideBarCommunityStats"),
    badgeCommunityRating: makeNodeComponent("badgeCommunityRating"),
    badgeVerification: makeNodeComponent("badgeVerification"),
    tagPartnerB: makeNodeComponent("tagPartnerB"),
    sideBarListingStats: makeNodeComponent("sideBarListingStats"),
    elementSideBarPartnerMarketPanel: makeNodeComponent(
      "elementSideBarPartnerMarketPanel"
    ),

    elementSideBarPartnerProfilePanel: makeNodeComponent(
      "elementSideBarPartnerProfilePanel"
    ),

    elementSideBarPartnerAccountPanel: makeNodeComponent(
      "elementSideBarPartnerAccountPanel"
    ),

    sideBarFooter: makeNodeComponent("sideBarFooter"),
    // Metadata about props expected for PlasmicSideBarPartner
    internalVariantProps: PlasmicSideBarPartner__VariantProps,
    internalArgProps: PlasmicSideBarPartner__ArgProps
  }
);

export default PlasmicSideBarPartner;
/* prettier-ignore-end */
