// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: i3ai6jIm4VK
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import MenuIconListItem from "../../MenuIconListItem"; // plasmic-import: 61axZSTp8Y/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicPanelPartnerSectionMarket.module.css"; // plasmic-import: i3ai6jIm4VK/css
import ListingIcon from "./icons/PlasmicIcon__Listing"; // plasmic-import: NNbE63A0Ys/icon
import OrdersIcon from "./icons/PlasmicIcon__Orders"; // plasmic-import: SofRHFzOcM/icon
import ChartIcon from "./icons/PlasmicIcon__Chart"; // plasmic-import: -1VBIW_pTX/icon
import CommentReviewBIcon from "./icons/PlasmicIcon__CommentReviewB"; // plasmic-import: 4AL9HbEO5/icon
import CommentReviewIcon from "./icons/PlasmicIcon__CommentReview"; // plasmic-import: ebuPCBFlqJ/icon

export const PlasmicPanelPartnerSectionMarket__VariantProps = new Array();

export const PlasmicPanelPartnerSectionMarket__ArgProps = new Array();

function PlasmicPanelPartnerSectionMarket__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox)}
      >
        <div
          data-plasmic-name={"text"}
          data-plasmic-override={overrides.text}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.text
          )}
        >
          {"Market"}
        </div>
      </p.Stack>

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__aLa21)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__q4FeH)}>
            <ListingIcon
              className={classNames(defaultcss.all, sty.svg___6SZ2J)}
              role={"img"}
            />
          </div>
        }
        navText={"Listings"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__wdXuy)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__xk0T)}>
            <OrdersIcon
              className={classNames(defaultcss.all, sty.svg__b2LKa)}
              role={"img"}
            />
          </div>
        }
        navText={"Orders"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__qt1Y6)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__matSb)}>
            <ChartIcon
              className={classNames(defaultcss.all, sty.svg__nboNy)}
              role={"img"}
            />
          </div>
        }
        navText={"Performance"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__j5Km)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__xOnag)}>
            <CommentReviewBIcon
              className={classNames(defaultcss.all, sty.svg__pq45T)}
              role={"img"}
            />
          </div>
        }
        navText={"Reviews"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__jIdBw)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox___7NhUb)}>
            <CommentReviewIcon
              className={classNames(defaultcss.all, sty.svg__v85Vh)}
              role={"img"}
            />
          </div>
        }
        navText={"Messages"}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "freeBox", "text"],
  freeBox: ["freeBox", "text"],
  text: ["text"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPanelPartnerSectionMarket__ArgProps,
      internalVariantPropNames: PlasmicPanelPartnerSectionMarket__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPanelPartnerSectionMarket__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPanelPartnerSectionMarket";
  } else {
    func.displayName = `PlasmicPanelPartnerSectionMarket.${nodeName}`;
  }
  return func;
}

export const PlasmicPanelPartnerSectionMarket = Object.assign(
  // Top-level PlasmicPanelPartnerSectionMarket renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    text: makeNodeComponent("text"),
    // Metadata about props expected for PlasmicPanelPartnerSectionMarket
    internalVariantProps: PlasmicPanelPartnerSectionMarket__VariantProps,
    internalArgProps: PlasmicPanelPartnerSectionMarket__ArgProps
  }
);

export default PlasmicPanelPartnerSectionMarket;
/* prettier-ignore-end */
