// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: o1fXsWwgdW
import * as React from "react";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicFabButtonA.module.css"; // plasmic-import: o1fXsWwgdW/css
import Icon107Icon from "./icons/PlasmicIcon__Icon107"; // plasmic-import: 1WTBIKS_DU/icon

export const PlasmicFabButtonA__VariantProps = new Array("size");

export const PlasmicFabButtonA__ArgProps = new Array();

function PlasmicFabButtonA__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <button
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.button, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"svgBackground"}
        data-plasmic-override={overrides.svgBackground}
        className={classNames(defaultcss.all, sty.svgBackground, {
          [sty.svgBackground__size__16]: hasVariant(variants, "size", "_16"),
          [sty.svgBackground__size__24]: hasVariant(variants, "size", "_24"),
          [sty.svgBackground__size__32]: hasVariant(variants, "size", "_32"),
          [sty.svgBackground__size__48]: hasVariant(variants, "size", "_48")
        })}
      >
        <div
          data-plasmic-name={"svgParent"}
          data-plasmic-override={overrides.svgParent}
          className={classNames(defaultcss.all, sty.svgParent, {
            [sty.svgParent__size__16]: hasVariant(variants, "size", "_16"),
            [sty.svgParent__size__24]: hasVariant(variants, "size", "_24"),
            [sty.svgParent__size__32]: hasVariant(variants, "size", "_32"),
            [sty.svgParent__size__48]: hasVariant(variants, "size", "_48")
          })}
        >
          <Icon107Icon
            data-plasmic-name={"svg"}
            data-plasmic-override={overrides.svg}
            className={classNames(defaultcss.all, sty.svg, {
              [sty.svg__size__16]: hasVariant(variants, "size", "_16"),
              [sty.svg__size__32]: hasVariant(variants, "size", "_32"),
              [sty.svg__size__48]: hasVariant(variants, "size", "_48")
            })}
            role={"img"}
          />
        </div>
      </div>
    </button>
  );
}

const PlasmicDescendants = {
  root: ["root", "svgBackground", "svgParent", "svg"],
  svgBackground: ["svgBackground", "svgParent", "svg"],
  svgParent: ["svgParent", "svg"],
  svg: ["svg"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFabButtonA__ArgProps,
      internalVariantPropNames: PlasmicFabButtonA__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicFabButtonA__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFabButtonA";
  } else {
    func.displayName = `PlasmicFabButtonA.${nodeName}`;
  }
  return func;
}

export const PlasmicFabButtonA = Object.assign(
  // Top-level PlasmicFabButtonA renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    svgBackground: makeNodeComponent("svgBackground"),
    svgParent: makeNodeComponent("svgParent"),
    svg: makeNodeComponent("svg"),
    // Metadata about props expected for PlasmicFabButtonA
    internalVariantProps: PlasmicFabButtonA__VariantProps,
    internalArgProps: PlasmicFabButtonA__ArgProps
  }
);

export default PlasmicFabButtonA;
/* prettier-ignore-end */
