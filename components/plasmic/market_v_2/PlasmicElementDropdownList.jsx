// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: eOQOrkkPrE
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import ElementNavCardListItem from "../../ElementNavCardListItem"; // plasmic-import: VVXqLHd1Qa/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicElementDropdownList.module.css"; // plasmic-import: eOQOrkkPrE/css

export const PlasmicElementDropdownList__VariantProps = new Array("size");

export const PlasmicElementDropdownList__ArgProps = new Array();

function PlasmicElementDropdownList__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root, {
        [sty.root__size__180]: hasVariant(variants, "size", "_180"),
        [sty.root__size__270]: hasVariant(variants, "size", "_270"),
        [sty.root__size__360]: hasVariant(variants, "size", "_360"),
        [sty.root__size__90]: hasVariant(variants, "size", "_90")
      })}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"parent"}
        data-plasmic-override={overrides.parent}
        hasGap={true}
        className={classNames(defaultcss.all, sty.parent, {
          [sty.parent__size__180]: hasVariant(variants, "size", "_180"),
          [sty.parent__size__270]: hasVariant(variants, "size", "_270"),
          [sty.parent__size__360]: hasVariant(variants, "size", "_360"),
          [sty.parent__size__90]: hasVariant(variants, "size", "_90")
        })}
      >
        <ElementNavCardListItem
          className={classNames(
            "__wab_instance",
            sty.elementNavCardListItem___8UCe
          )}
          text={"Item 1"}
        />

        <ElementNavCardListItem
          className={classNames(
            "__wab_instance",
            sty.elementNavCardListItem__rovTp
          )}
          text={"Item 2"}
        />

        <ElementNavCardListItem
          className={classNames(
            "__wab_instance",
            sty.elementNavCardListItem__dagE0
          )}
          text={"Item 3"}
        />

        <ElementNavCardListItem
          className={classNames(
            "__wab_instance",
            sty.elementNavCardListItem__wml8K
          )}
          text={"Item 4"}
        />

        <ElementNavCardListItem
          className={classNames(
            "__wab_instance",
            sty.elementNavCardListItem__qiGa
          )}
          text={"Item 5"}
        />
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "parent"],
  parent: ["parent"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicElementDropdownList__ArgProps,
      internalVariantPropNames: PlasmicElementDropdownList__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicElementDropdownList__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicElementDropdownList";
  } else {
    func.displayName = `PlasmicElementDropdownList.${nodeName}`;
  }
  return func;
}

export const PlasmicElementDropdownList = Object.assign(
  // Top-level PlasmicElementDropdownList renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    parent: makeNodeComponent("parent"),
    // Metadata about props expected for PlasmicElementDropdownList
    internalVariantProps: PlasmicElementDropdownList__VariantProps,
    internalArgProps: PlasmicElementDropdownList__ArgProps
  }
);

export default PlasmicElementDropdownList;
/* prettier-ignore-end */
