// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: z3AR9mDcSO
import * as React from "react";
import Head from "next/head";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavbarStatic from "../../NavbarStatic"; // plasmic-import: rvDpPOFOSj/component
import CardPasswordReset from "../../CardPasswordReset"; // plasmic-import: Olpj-oqQtA/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicPasswordReset.module.css"; // plasmic-import: z3AR9mDcSO/css

export const PlasmicPasswordReset__VariantProps = new Array();

export const PlasmicPasswordReset__ArgProps = new Array();

function PlasmicPasswordReset__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarStatic
            data-plasmic-name={"navbarStatic"}
            data-plasmic-override={overrides.navbarStatic}
            className={classNames("__wab_instance", sty.navbarStatic)}
          />

          <div
            data-plasmic-name={"resetPassword"}
            data-plasmic-override={overrides.resetPassword}
            className={classNames(defaultcss.all, sty.resetPassword)}
          >
            <CardPasswordReset
              data-plasmic-name={"cardPasswordReset"}
              data-plasmic-override={overrides.cardPasswordReset}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "navbarStatic", "resetPassword", "cardPasswordReset"],
  navbarStatic: ["navbarStatic"],
  resetPassword: ["resetPassword", "cardPasswordReset"],
  cardPasswordReset: ["cardPasswordReset"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPasswordReset__ArgProps,
      internalVariantPropNames: PlasmicPasswordReset__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPasswordReset__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPasswordReset";
  } else {
    func.displayName = `PlasmicPasswordReset.${nodeName}`;
  }
  return func;
}

export const PlasmicPasswordReset = Object.assign(
  // Top-level PlasmicPasswordReset renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarStatic: makeNodeComponent("navbarStatic"),
    resetPassword: makeNodeComponent("resetPassword"),
    cardPasswordReset: makeNodeComponent("cardPasswordReset"),
    // Metadata about props expected for PlasmicPasswordReset
    internalVariantProps: PlasmicPasswordReset__VariantProps,
    internalArgProps: PlasmicPasswordReset__ArgProps
  }
);

export default PlasmicPasswordReset;
/* prettier-ignore-end */
