// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: UnAAzfphtK
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Dialog from "../../Dialog"; // plasmic-import: bjYLFDLDv0/component
import TextInput from "../../TextInput"; // plasmic-import: Ss3X7VAgr4Y/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import sty from "./PlasmicDialogInviteProfessional.module.css"; // plasmic-import: UnAAzfphtK/css

export const PlasmicDialogInviteProfessional__VariantProps = new Array();

export const PlasmicDialogInviteProfessional__ArgProps = new Array();

function PlasmicDialogInviteProfessional__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <Dialog
        data-plasmic-name={"dialog"}
        data-plasmic-override={overrides.dialog}
        className={classNames("__wab_instance", sty.dialog)}
        headline={"Invite a professional"}
      >
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <TextInput
              data-plasmic-name={"firstNameInput"}
              data-plasmic-override={overrides.firstNameInput}
              className={classNames("__wab_instance", sty.firstNameInput)}
              label={"First Name"}
              name={"first_name"}
              showLabel={true}
            />

            <TextInput
              data-plasmic-name={"lastNameInput"}
              data-plasmic-override={overrides.lastNameInput}
              className={classNames("__wab_instance", sty.lastNameInput)}
              label={"Last Name"}
              name={"last_name"}
              showLabel={true}
            />

            <TextInput
              data-plasmic-name={"emailInput"}
              data-plasmic-override={overrides.emailInput}
              className={classNames("__wab_instance", sty.emailInput)}
              label={"Email Address"}
              name={"email"}
              showLabel={true}
            />
          </p.Stack>
        ) : null}
      </Dialog>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "dialog",
    "freeBox",
    "firstNameInput",
    "lastNameInput",
    "emailInput"
  ],

  dialog: [
    "dialog",
    "freeBox",
    "firstNameInput",
    "lastNameInput",
    "emailInput"
  ],

  freeBox: ["freeBox", "firstNameInput", "lastNameInput", "emailInput"],
  firstNameInput: ["firstNameInput"],
  lastNameInput: ["lastNameInput"],
  emailInput: ["emailInput"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicDialogInviteProfessional__ArgProps,
      internalVariantPropNames: PlasmicDialogInviteProfessional__VariantProps
    });

    return PlasmicDialogInviteProfessional__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDialogInviteProfessional";
  } else {
    func.displayName = `PlasmicDialogInviteProfessional.${nodeName}`;
  }
  return func;
}

export const PlasmicDialogInviteProfessional = Object.assign(
  // Top-level PlasmicDialogInviteProfessional renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    dialog: makeNodeComponent("dialog"),
    freeBox: makeNodeComponent("freeBox"),
    firstNameInput: makeNodeComponent("firstNameInput"),
    lastNameInput: makeNodeComponent("lastNameInput"),
    emailInput: makeNodeComponent("emailInput"),
    // Metadata about props expected for PlasmicDialogInviteProfessional
    internalVariantProps: PlasmicDialogInviteProfessional__VariantProps,
    internalArgProps: PlasmicDialogInviteProfessional__ArgProps
  }
);

export default PlasmicDialogInviteProfessional;
/* prettier-ignore-end */
