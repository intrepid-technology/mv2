// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: 8_xnKrMMUML
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import MenuIconListItem from "../../MenuIconListItem"; // plasmic-import: 61axZSTp8Y/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicPanelMemberSectionMarket.module.css"; // plasmic-import: 8_xnKrMMUML/css
import MarketIcon from "./icons/PlasmicIcon__Market"; // plasmic-import: 6YZyz-5czi/icon
import RecommendationsIcon from "./icons/PlasmicIcon__Recommendations"; // plasmic-import: wWVEzr7B1/icon
import BookmarkIcon from "./icons/PlasmicIcon__Bookmark"; // plasmic-import: 2qZ8N9GyOr/icon
import OrdersIcon from "./icons/PlasmicIcon__Orders"; // plasmic-import: SofRHFzOcM/icon
import CommentReviewBIcon from "./icons/PlasmicIcon__CommentReviewB"; // plasmic-import: 4AL9HbEO5/icon
import CommentReviewIcon from "./icons/PlasmicIcon__CommentReview"; // plasmic-import: ebuPCBFlqJ/icon

export const PlasmicPanelMemberSectionMarket__VariantProps = new Array();

export const PlasmicPanelMemberSectionMarket__ArgProps = new Array();

function PlasmicPanelMemberSectionMarket__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox__y3FIv)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__nMyDx
          )}
        >
          {"Market"}
        </div>
      </p.Stack>

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__e7Dob)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__rgAf)}>
            <MarketIcon
              className={classNames(defaultcss.all, sty.svg__ongMw)}
              role={"img"}
            />
          </div>
        }
        navText={"Home"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__fgRr)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__pgI4F)}>
            <RecommendationsIcon
              className={classNames(defaultcss.all, sty.svg__oCwzA)}
              role={"img"}
            />
          </div>
        }
        navText={"Recommendations"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__il9Fd)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__wow17)}>
            <BookmarkIcon
              className={classNames(defaultcss.all, sty.svg___2IchP)}
              role={"img"}
            />
          </div>
        }
        navText={"Bookmarks"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__bjWxX)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__uc2Ke)}>
            <OrdersIcon
              className={classNames(defaultcss.all, sty.svg__d9Zyx)}
              role={"img"}
            />
          </div>
        }
        navText={"Orders"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__iVsEj)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__cYlnU)}>
            <CommentReviewBIcon
              className={classNames(defaultcss.all, sty.svg__bfAxW)}
              role={"img"}
            />
          </div>
        }
        navText={"Reviews"}
      />

      <MenuIconListItem
        className={classNames("__wab_instance", sty.menuIconListItem__y6VHc)}
        navIcon={
          <div className={classNames(defaultcss.all, sty.freeBox__lgXoG)}>
            <CommentReviewIcon
              className={classNames(defaultcss.all, sty.svg__v2XM)}
              role={"img"}
            />
          </div>
        }
        navText={"Messages"}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPanelMemberSectionMarket__ArgProps,
      internalVariantPropNames: PlasmicPanelMemberSectionMarket__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPanelMemberSectionMarket__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPanelMemberSectionMarket";
  } else {
    func.displayName = `PlasmicPanelMemberSectionMarket.${nodeName}`;
  }
  return func;
}

export const PlasmicPanelMemberSectionMarket = Object.assign(
  // Top-level PlasmicPanelMemberSectionMarket renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicPanelMemberSectionMarket
    internalVariantProps: PlasmicPanelMemberSectionMarket__VariantProps,
    internalArgProps: PlasmicPanelMemberSectionMarket__ArgProps
  }
);

export default PlasmicPanelMemberSectionMarket;
/* prettier-ignore-end */
