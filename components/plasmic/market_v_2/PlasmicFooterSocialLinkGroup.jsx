// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: 8gMaB72ItFH
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import FooterSocialLink from "../../FooterSocialLink"; // plasmic-import: uQNvf8Lt2Y/component
import { useScreenVariants as useScreenVariantso9SjFZaOqjqz } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: o9sjFZaOQJQZ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import sty from "./PlasmicFooterSocialLinkGroup.module.css"; // plasmic-import: 8gMaB72ItFH/css
import Icon9Icon from "./icons/PlasmicIcon__Icon9"; // plasmic-import: NgzsNZ-ord/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: DEc54POMG/icon
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: vKY9KtbmBr/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: 1ixWuykQyi/icon

export const PlasmicFooterSocialLinkGroup__VariantProps = new Array("color");

export const PlasmicFooterSocialLinkGroup__ArgProps = new Array();

function PlasmicFooterSocialLinkGroup__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantso9SjFZaOqjqz()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <FooterSocialLink
        data-plasmic-name={"facebook"}
        data-plasmic-override={overrides.facebook}
        className={classNames("__wab_instance", sty.facebook, {
          [sty.facebook__color_dark]: hasVariant(variants, "color", "dark")
        })}
        color={hasVariant(variants, "color", "dark") ? "light" : "dark"}
        destination={"https://www.facebook.com/intrepidmarket"}
      />

      <FooterSocialLink
        data-plasmic-name={"instagram"}
        data-plasmic-override={overrides.instagram}
        className={classNames("__wab_instance", sty.instagram, {
          [sty.instagram__color_dark]: hasVariant(variants, "color", "dark")
        })}
        color={hasVariant(variants, "color", "dark") ? "light" : "dark"}
        destination={"https://www.instagram.com/intrepid.market"}
      >
        <Icon9Icon
          className={classNames(projectcss.all, sty.svg__fDtqD)}
          role={"img"}
        />
      </FooterSocialLink>

      <FooterSocialLink
        data-plasmic-name={"linkedin"}
        data-plasmic-override={overrides.linkedin}
        className={classNames("__wab_instance", sty.linkedin, {
          [sty.linkedin__color_dark]: hasVariant(variants, "color", "dark")
        })}
        color={hasVariant(variants, "color", "dark") ? "light" : "dark"}
        destination={"https://www.linkedin.com/company/intrepidtechnology"}
      >
        <Icon10Icon
          className={classNames(projectcss.all, sty.svg__jwRRo)}
          role={"img"}
        />
      </FooterSocialLink>

      <FooterSocialLink
        data-plasmic-name={"twitter"}
        data-plasmic-override={overrides.twitter}
        className={classNames("__wab_instance", sty.twitter, {
          [sty.twitter__color_dark]: hasVariant(variants, "color", "dark")
        })}
        color={hasVariant(variants, "color", "dark") ? "light" : "dark"}
        destination={"https://twitter.com/intrepidmarket?lang=en"}
      >
        <Icon12Icon
          className={classNames(projectcss.all, sty.svg__dsyBp)}
          role={"img"}
        />
      </FooterSocialLink>

      <FooterSocialLink
        data-plasmic-name={"youtube"}
        data-plasmic-override={overrides.youtube}
        className={classNames("__wab_instance", sty.youtube, {
          [sty.youtube__color_dark]: hasVariant(variants, "color", "dark")
        })}
        color={hasVariant(variants, "color", "dark") ? "light" : "dark"}
        destination={
          "https://www.youtube.com/channel/UCefe54paxJv4KnBfu89EgCQ/about"
        }
      >
        <Icon11Icon
          className={classNames(projectcss.all, sty.svg__p0Gqw, {
            [sty.svg__color_dark__p0GqwKbTz]: hasVariant(
              variants,
              "color",
              "dark"
            )
          })}
          role={"img"}
        />
      </FooterSocialLink>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "facebook", "instagram", "linkedin", "twitter", "youtube"],
  facebook: ["facebook"],
  instagram: ["instagram"],
  linkedin: ["linkedin"],
  twitter: ["twitter"],
  youtube: ["youtube"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooterSocialLinkGroup__ArgProps,
      internalVariantPropNames: PlasmicFooterSocialLinkGroup__VariantProps
    });

    return PlasmicFooterSocialLinkGroup__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooterSocialLinkGroup";
  } else {
    func.displayName = `PlasmicFooterSocialLinkGroup.${nodeName}`;
  }
  return func;
}

export const PlasmicFooterSocialLinkGroup = Object.assign(
  // Top-level PlasmicFooterSocialLinkGroup renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    facebook: makeNodeComponent("facebook"),
    instagram: makeNodeComponent("instagram"),
    linkedin: makeNodeComponent("linkedin"),
    twitter: makeNodeComponent("twitter"),
    youtube: makeNodeComponent("youtube"),
    // Metadata about props expected for PlasmicFooterSocialLinkGroup
    internalVariantProps: PlasmicFooterSocialLinkGroup__VariantProps,
    internalArgProps: PlasmicFooterSocialLinkGroup__ArgProps
  }
);

export default PlasmicFooterSocialLinkGroup;
/* prettier-ignore-end */
