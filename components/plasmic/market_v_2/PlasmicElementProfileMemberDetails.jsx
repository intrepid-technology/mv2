// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: 7guiVd95chm
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import BadgeVerification from "../../BadgeVerification"; // plasmic-import: _M5uzrbjQp/component
import TagPartnerA from "../../TagPartnerA"; // plasmic-import: EdiwiVT346/component
import RatingDisplayDetail from "../../RatingDisplayDetail"; // plasmic-import: e_QdjWvrde/component
import IconPrimary from "../../IconPrimary"; // plasmic-import: -fEFICkFUf/component
import { useScreenVariants as useScreenVariantso9SjFZaOqjqz } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: o9sjFZaOQJQZ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import sty from "./PlasmicElementProfileMemberDetails.module.css"; // plasmic-import: 7guiVd95chm/css
import Icon171Icon from "./icons/PlasmicIcon__Icon171"; // plasmic-import: RfkUw6C5x0/icon
import OfficeWorkIcon from "./icons/PlasmicIcon__OfficeWork"; // plasmic-import: b-UKc3bHG7/icon
import BriefOrdersIcon from "./icons/PlasmicIcon__BriefOrders"; // plasmic-import: IHBDow0Bv/icon
import LanguagesIcon from "./icons/PlasmicIcon__Languages"; // plasmic-import: pqMRsl-YpM/icon
import LocationIcon from "./icons/PlasmicIcon__Location"; // plasmic-import: XbuUvkV9FO/icon
import UserIdIcon from "./icons/PlasmicIcon__UserId"; // plasmic-import: WpmSmHLAP5/icon

export const PlasmicElementProfileMemberDetails__VariantProps = new Array();

export const PlasmicElementProfileMemberDetails__ArgProps = new Array();

function PlasmicElementProfileMemberDetails__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantso9SjFZaOqjqz()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      {(hasVariant(globalVariants, "screen", "desktop") ? true : true) ? (
        <p.Stack
          as={"div"}
          data-plasmic-name={"parent"}
          data-plasmic-override={overrides.parent}
          hasGap={true}
          className={classNames(projectcss.all, sty.parent)}
        >
          <div
            data-plasmic-name={"details"}
            data-plasmic-override={overrides.details}
            className={classNames(projectcss.all, sty.details)}
          >
            <div
              data-plasmic-name={"detailsText"}
              data-plasmic-override={overrides.detailsText}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.detailsText
              )}
            >
              {hasVariant(globalVariants, "screen", "desktop")
                ? "Details"
                : "Details"}
            </div>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"detailsParent"}
            data-plasmic-override={overrides.detailsParent}
            hasGap={true}
            className={classNames(projectcss.all, sty.detailsParent)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"memberBadges"}
              data-plasmic-override={overrides.memberBadges}
              hasGap={true}
              className={classNames(projectcss.all, sty.memberBadges)}
            >
              <BadgeVerification
                data-plasmic-name={"badgeVerification"}
                data-plasmic-override={overrides.badgeVerification}
              />

              <div className={classNames(projectcss.all, sty.freeBox__wpQmj)}>
                {(
                  hasVariant(globalVariants, "screen", "desktop") ? true : true
                ) ? (
                  <TagPartnerA
                    data-plasmic-name={"memberStatus3"}
                    data-plasmic-override={overrides.memberStatus3}
                    className={classNames("__wab_instance", sty.memberStatus3)}
                  />
                ) : null}
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__yoDnP)}>
                <RatingDisplayDetail
                  data-plasmic-name={"ratingDisplayDetail"}
                  data-plasmic-override={overrides.ratingDisplayDetail}
                  reviews={
                    hasVariant(globalVariants, "screen", "desktop")
                      ? true
                      : undefined
                  }
                  size={
                    hasVariant(globalVariants, "screen", "desktop")
                      ? "_16"
                      : undefined
                  }
                >
                  {hasVariant(globalVariants, "screen", "desktop")
                    ? "4.8"
                    : "4.67"}
                </RatingDisplayDetail>
              </div>
            </p.Stack>

            {(hasVariant(globalVariants, "screen", "desktop") ? true : true) ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"primaryCompanyName"}
                data-plasmic-override={overrides.primaryCompanyName}
                hasGap={true}
                className={classNames(projectcss.all, sty.primaryCompanyName)}
              >
                {(
                  hasVariant(globalVariants, "screen", "desktop") ? true : true
                ) ? (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary___6YHte
                    )}
                    size={"_16Px"}
                    svgIcon={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon3"}
                        data-plasmic-override={overrides.svgIcon3}
                        className={classNames(projectcss.all, sty.svgIcon3)}
                        role={"img"}
                      />
                    }
                    svgIcon14Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon12"}
                        data-plasmic-override={overrides.svgIcon12}
                        className={classNames(projectcss.all, sty.svgIcon12)}
                        role={"img"}
                      />
                    }
                    svgIcon16Px={
                      <p.PlasmicIcon
                        data-plasmic-name={"svgIcon22"}
                        data-plasmic-override={overrides.svgIcon22}
                        PlasmicIconType={
                          hasVariant(globalVariants, "screen", "desktop")
                            ? OfficeWorkIcon
                            : OfficeWorkIcon
                        }
                        className={classNames(projectcss.all, sty.svgIcon22)}
                        role={"img"}
                      />
                    }
                    svgIcon18Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon13"}
                        data-plasmic-override={overrides.svgIcon13}
                        className={classNames(projectcss.all, sty.svgIcon13)}
                        role={"img"}
                      />
                    }
                    svgIcon24Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon14"}
                        data-plasmic-override={overrides.svgIcon14}
                        className={classNames(projectcss.all, sty.svgIcon14)}
                        role={"img"}
                      />
                    }
                    svgIcon32Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon15"}
                        data-plasmic-override={overrides.svgIcon15}
                        className={classNames(projectcss.all, sty.svgIcon15)}
                        role={"img"}
                      />
                    }
                    svgIcon40Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon19"}
                        data-plasmic-override={overrides.svgIcon19}
                        className={classNames(projectcss.all, sty.svgIcon19)}
                        role={"img"}
                      />
                    }
                    svgIcon48Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon16"}
                        data-plasmic-override={overrides.svgIcon16}
                        className={classNames(projectcss.all, sty.svgIcon16)}
                        role={"img"}
                      />
                    }
                    svgIcon64Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon17"}
                        data-plasmic-override={overrides.svgIcon17}
                        className={classNames(projectcss.all, sty.svgIcon17)}
                        role={"img"}
                      />
                    }
                    svgIcon80Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon18"}
                        data-plasmic-override={overrides.svgIcon18}
                        className={classNames(projectcss.all, sty.svgIcon18)}
                        role={"img"}
                      />
                    }
                  />
                ) : null}

                <div
                  data-plasmic-name={"userPrimaryCompanyName1"}
                  data-plasmic-override={overrides.userPrimaryCompanyName1}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.userPrimaryCompanyName1
                  )}
                >
                  {"Pixie Design, Inc"}
                </div>
              </p.Stack>
            ) : null}
            {(hasVariant(globalVariants, "screen", "desktop") ? true : true) ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"companyparent3"}
                data-plasmic-override={overrides.companyparent3}
                hasGap={true}
                className={classNames(projectcss.all, sty.companyparent3)}
              >
                {(
                  hasVariant(globalVariants, "screen", "desktop") ? true : true
                ) ? (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__j5Jnp
                    )}
                    size={"_16Px"}
                    svgIcon={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon24"}
                        data-plasmic-override={overrides.svgIcon24}
                        className={classNames(projectcss.all, sty.svgIcon24)}
                        role={"img"}
                      />
                    }
                    svgIcon14Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon25"}
                        data-plasmic-override={overrides.svgIcon25}
                        className={classNames(projectcss.all, sty.svgIcon25)}
                        role={"img"}
                      />
                    }
                    svgIcon16Px={
                      <p.PlasmicIcon
                        data-plasmic-name={"svgIcon23"}
                        data-plasmic-override={overrides.svgIcon23}
                        PlasmicIconType={
                          hasVariant(globalVariants, "screen", "desktop")
                            ? BriefOrdersIcon
                            : BriefOrdersIcon
                        }
                        className={classNames(projectcss.all, sty.svgIcon23)}
                        role={"img"}
                      />
                    }
                    svgIcon18Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon26"}
                        data-plasmic-override={overrides.svgIcon26}
                        className={classNames(projectcss.all, sty.svgIcon26)}
                        role={"img"}
                      />
                    }
                    svgIcon24Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon27"}
                        data-plasmic-override={overrides.svgIcon27}
                        className={classNames(projectcss.all, sty.svgIcon27)}
                        role={"img"}
                      />
                    }
                    svgIcon32Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon28"}
                        data-plasmic-override={overrides.svgIcon28}
                        className={classNames(projectcss.all, sty.svgIcon28)}
                        role={"img"}
                      />
                    }
                    svgIcon40Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon32"}
                        data-plasmic-override={overrides.svgIcon32}
                        className={classNames(projectcss.all, sty.svgIcon32)}
                        role={"img"}
                      />
                    }
                    svgIcon48Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon29"}
                        data-plasmic-override={overrides.svgIcon29}
                        className={classNames(projectcss.all, sty.svgIcon29)}
                        role={"img"}
                      />
                    }
                    svgIcon64Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon30"}
                        data-plasmic-override={overrides.svgIcon30}
                        className={classNames(projectcss.all, sty.svgIcon30)}
                        role={"img"}
                      />
                    }
                    svgIcon80Px={
                      <Icon171Icon
                        data-plasmic-name={"svgIcon31"}
                        data-plasmic-override={overrides.svgIcon31}
                        className={classNames(projectcss.all, sty.svgIcon31)}
                        role={"img"}
                      />
                    }
                  />
                ) : null}

                <div
                  data-plasmic-name={"userPrimaryCompanyName2"}
                  data-plasmic-override={overrides.userPrimaryCompanyName2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.userPrimaryCompanyName2
                  )}
                >
                  {hasVariant(globalVariants, "screen", "desktop")
                    ? "primaryPositionName"
                    : "Co founder"}
                </div>
              </p.Stack>
            ) : null}

            <p.Stack
              as={"div"}
              data-plasmic-name={"languagesAb"}
              data-plasmic-override={overrides.languagesAb}
              hasGap={true}
              className={classNames(projectcss.all, sty.languagesAb)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__tMw5P)}
                size={"_16Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon33"}
                    data-plasmic-override={overrides.svgIcon33}
                    className={classNames(projectcss.all, sty.svgIcon33)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon34"}
                    data-plasmic-override={overrides.svgIcon34}
                    className={classNames(projectcss.all, sty.svgIcon34)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <LanguagesIcon
                    data-plasmic-name={"svgIcon21"}
                    data-plasmic-override={overrides.svgIcon21}
                    className={classNames(projectcss.all, sty.svgIcon21)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon35"}
                    data-plasmic-override={overrides.svgIcon35}
                    className={classNames(projectcss.all, sty.svgIcon35)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon36"}
                    data-plasmic-override={overrides.svgIcon36}
                    className={classNames(projectcss.all, sty.svgIcon36)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon37"}
                    data-plasmic-override={overrides.svgIcon37}
                    className={classNames(projectcss.all, sty.svgIcon37)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon41"}
                    data-plasmic-override={overrides.svgIcon41}
                    className={classNames(projectcss.all, sty.svgIcon41)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon38"}
                    data-plasmic-override={overrides.svgIcon38}
                    className={classNames(projectcss.all, sty.svgIcon38)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon39"}
                    data-plasmic-override={overrides.svgIcon39}
                    className={classNames(projectcss.all, sty.svgIcon39)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon40"}
                    data-plasmic-override={overrides.svgIcon40}
                    className={classNames(projectcss.all, sty.svgIcon40)}
                    role={"img"}
                  />
                }
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"languageParent"}
                data-plasmic-override={overrides.languageParent}
                hasGap={true}
                className={classNames(projectcss.all, sty.languageParent)}
              >
                <div
                  data-plasmic-name={"languageA"}
                  data-plasmic-override={overrides.languageA}
                  className={classNames(projectcss.all, sty.languageA)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zJxej
                    )}
                  >
                    {"English,"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"languageB"}
                  data-plasmic-override={overrides.languageB}
                  className={classNames(projectcss.all, sty.languageB)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vPsIx
                    )}
                  >
                    {"Korean"}
                  </div>
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"locationCityCountry"}
              data-plasmic-override={overrides.locationCityCountry}
              hasGap={true}
              className={classNames(projectcss.all, sty.locationCityCountry)}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__aZcKu)}
                size={"_16Px"}
                svgIcon={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon42"}
                    data-plasmic-override={overrides.svgIcon42}
                    className={classNames(projectcss.all, sty.svgIcon42)}
                    role={"img"}
                  />
                }
                svgIcon14Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon43"}
                    data-plasmic-override={overrides.svgIcon43}
                    className={classNames(projectcss.all, sty.svgIcon43)}
                    role={"img"}
                  />
                }
                svgIcon16Px={
                  <p.PlasmicIcon
                    data-plasmic-name={"svgIcon11"}
                    data-plasmic-override={overrides.svgIcon11}
                    PlasmicIconType={
                      hasVariant(globalVariants, "screen", "desktop")
                        ? LocationIcon
                        : LocationIcon
                    }
                    className={classNames(projectcss.all, sty.svgIcon11)}
                    role={"img"}
                  />
                }
                svgIcon18Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon44"}
                    data-plasmic-override={overrides.svgIcon44}
                    className={classNames(projectcss.all, sty.svgIcon44)}
                    role={"img"}
                  />
                }
                svgIcon24Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon45"}
                    data-plasmic-override={overrides.svgIcon45}
                    className={classNames(projectcss.all, sty.svgIcon45)}
                    role={"img"}
                  />
                }
                svgIcon32Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon46"}
                    data-plasmic-override={overrides.svgIcon46}
                    className={classNames(projectcss.all, sty.svgIcon46)}
                    role={"img"}
                  />
                }
                svgIcon40Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon50"}
                    data-plasmic-override={overrides.svgIcon50}
                    className={classNames(projectcss.all, sty.svgIcon50)}
                    role={"img"}
                  />
                }
                svgIcon48Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon47"}
                    data-plasmic-override={overrides.svgIcon47}
                    className={classNames(projectcss.all, sty.svgIcon47)}
                    role={"img"}
                  />
                }
                svgIcon64Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon48"}
                    data-plasmic-override={overrides.svgIcon48}
                    className={classNames(projectcss.all, sty.svgIcon48)}
                    role={"img"}
                  />
                }
                svgIcon80Px={
                  <Icon171Icon
                    data-plasmic-name={"svgIcon49"}
                    data-plasmic-override={overrides.svgIcon49}
                    className={classNames(projectcss.all, sty.svgIcon49)}
                    role={"img"}
                  />
                }
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"location2"}
                data-plasmic-override={overrides.location2}
                hasGap={true}
                className={classNames(projectcss.all, sty.location2)}
              >
                <div
                  data-plasmic-name={"cityText2"}
                  data-plasmic-override={overrides.cityText2}
                  className={classNames(projectcss.all, sty.cityText2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rovGm
                    )}
                  >
                    {"San Francisco"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h9Ew
                    )}
                  >
                    {","}
                  </div>
                </div>

                <div
                  data-plasmic-name={"countryText"}
                  data-plasmic-override={overrides.countryText}
                  className={classNames(projectcss.all, sty.countryText)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rAn6N
                    )}
                  >
                    {"United States"}
                  </div>
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"membershipDateTimestamp"}
              data-plasmic-override={overrides.membershipDateTimestamp}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.membershipDateTimestamp
              )}
            >
              <IconPrimary
                className={classNames("__wab_instance", sty.iconPrimary__cYBj)}
                size={"_16Px"}
                svgIcon16Px={
                  <UserIdIcon
                    data-plasmic-name={"svgIcon20"}
                    data-plasmic-override={overrides.svgIcon20}
                    className={classNames(projectcss.all, sty.svgIcon20)}
                    role={"img"}
                  />
                }
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"membershipParent"}
                data-plasmic-override={overrides.membershipParent}
                hasGap={true}
                className={classNames(projectcss.all, sty.membershipParent)}
              >
                <div
                  data-plasmic-name={"memberTextLabel"}
                  data-plasmic-override={overrides.memberTextLabel}
                  className={classNames(projectcss.all, sty.memberTextLabel)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zQj11
                    )}
                  >
                    {"Member since"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"dateTimestampParent"}
                  data-plasmic-override={overrides.dateTimestampParent}
                  className={classNames(
                    projectcss.all,
                    sty.dateTimestampParent
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3O7Bo
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "desktop")
                      ? "[dateTimestamp]"
                      : "July 2021"}
                  </div>
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>
        </p.Stack>
      ) : null}
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "parent",
    "details",
    "detailsText",
    "detailsParent",
    "memberBadges",
    "badgeVerification",
    "memberStatus3",
    "ratingDisplayDetail",
    "primaryCompanyName",
    "svgIcon3",
    "svgIcon12",
    "svgIcon22",
    "svgIcon13",
    "svgIcon14",
    "svgIcon15",
    "svgIcon16",
    "svgIcon17",
    "svgIcon18",
    "svgIcon19",
    "userPrimaryCompanyName1",
    "companyparent3",
    "svgIcon24",
    "svgIcon25",
    "svgIcon23",
    "svgIcon26",
    "svgIcon27",
    "svgIcon28",
    "svgIcon29",
    "svgIcon30",
    "svgIcon31",
    "svgIcon32",
    "userPrimaryCompanyName2",
    "languagesAb",
    "svgIcon33",
    "svgIcon34",
    "svgIcon21",
    "svgIcon35",
    "svgIcon36",
    "svgIcon37",
    "svgIcon38",
    "svgIcon39",
    "svgIcon40",
    "svgIcon41",
    "languageParent",
    "languageA",
    "languageB",
    "locationCityCountry",
    "svgIcon42",
    "svgIcon43",
    "svgIcon11",
    "svgIcon44",
    "svgIcon45",
    "svgIcon46",
    "svgIcon47",
    "svgIcon48",
    "svgIcon49",
    "svgIcon50",
    "location2",
    "cityText2",
    "countryText",
    "membershipDateTimestamp",
    "svgIcon20",
    "membershipParent",
    "memberTextLabel",
    "dateTimestampParent"
  ],

  parent: [
    "parent",
    "details",
    "detailsText",
    "detailsParent",
    "memberBadges",
    "badgeVerification",
    "memberStatus3",
    "ratingDisplayDetail",
    "primaryCompanyName",
    "svgIcon3",
    "svgIcon12",
    "svgIcon22",
    "svgIcon13",
    "svgIcon14",
    "svgIcon15",
    "svgIcon16",
    "svgIcon17",
    "svgIcon18",
    "svgIcon19",
    "userPrimaryCompanyName1",
    "companyparent3",
    "svgIcon24",
    "svgIcon25",
    "svgIcon23",
    "svgIcon26",
    "svgIcon27",
    "svgIcon28",
    "svgIcon29",
    "svgIcon30",
    "svgIcon31",
    "svgIcon32",
    "userPrimaryCompanyName2",
    "languagesAb",
    "svgIcon33",
    "svgIcon34",
    "svgIcon21",
    "svgIcon35",
    "svgIcon36",
    "svgIcon37",
    "svgIcon38",
    "svgIcon39",
    "svgIcon40",
    "svgIcon41",
    "languageParent",
    "languageA",
    "languageB",
    "locationCityCountry",
    "svgIcon42",
    "svgIcon43",
    "svgIcon11",
    "svgIcon44",
    "svgIcon45",
    "svgIcon46",
    "svgIcon47",
    "svgIcon48",
    "svgIcon49",
    "svgIcon50",
    "location2",
    "cityText2",
    "countryText",
    "membershipDateTimestamp",
    "svgIcon20",
    "membershipParent",
    "memberTextLabel",
    "dateTimestampParent"
  ],

  details: ["details", "detailsText"],
  detailsText: ["detailsText"],
  detailsParent: [
    "detailsParent",
    "memberBadges",
    "badgeVerification",
    "memberStatus3",
    "ratingDisplayDetail",
    "primaryCompanyName",
    "svgIcon3",
    "svgIcon12",
    "svgIcon22",
    "svgIcon13",
    "svgIcon14",
    "svgIcon15",
    "svgIcon16",
    "svgIcon17",
    "svgIcon18",
    "svgIcon19",
    "userPrimaryCompanyName1",
    "companyparent3",
    "svgIcon24",
    "svgIcon25",
    "svgIcon23",
    "svgIcon26",
    "svgIcon27",
    "svgIcon28",
    "svgIcon29",
    "svgIcon30",
    "svgIcon31",
    "svgIcon32",
    "userPrimaryCompanyName2",
    "languagesAb",
    "svgIcon33",
    "svgIcon34",
    "svgIcon21",
    "svgIcon35",
    "svgIcon36",
    "svgIcon37",
    "svgIcon38",
    "svgIcon39",
    "svgIcon40",
    "svgIcon41",
    "languageParent",
    "languageA",
    "languageB",
    "locationCityCountry",
    "svgIcon42",
    "svgIcon43",
    "svgIcon11",
    "svgIcon44",
    "svgIcon45",
    "svgIcon46",
    "svgIcon47",
    "svgIcon48",
    "svgIcon49",
    "svgIcon50",
    "location2",
    "cityText2",
    "countryText",
    "membershipDateTimestamp",
    "svgIcon20",
    "membershipParent",
    "memberTextLabel",
    "dateTimestampParent"
  ],

  memberBadges: [
    "memberBadges",
    "badgeVerification",
    "memberStatus3",
    "ratingDisplayDetail"
  ],

  badgeVerification: ["badgeVerification"],
  memberStatus3: ["memberStatus3"],
  ratingDisplayDetail: ["ratingDisplayDetail"],
  primaryCompanyName: [
    "primaryCompanyName",
    "svgIcon3",
    "svgIcon12",
    "svgIcon22",
    "svgIcon13",
    "svgIcon14",
    "svgIcon15",
    "svgIcon16",
    "svgIcon17",
    "svgIcon18",
    "svgIcon19",
    "userPrimaryCompanyName1"
  ],

  svgIcon3: ["svgIcon3"],
  svgIcon12: ["svgIcon12"],
  svgIcon22: ["svgIcon22"],
  svgIcon13: ["svgIcon13"],
  svgIcon14: ["svgIcon14"],
  svgIcon15: ["svgIcon15"],
  svgIcon16: ["svgIcon16"],
  svgIcon17: ["svgIcon17"],
  svgIcon18: ["svgIcon18"],
  svgIcon19: ["svgIcon19"],
  userPrimaryCompanyName1: ["userPrimaryCompanyName1"],
  companyparent3: [
    "companyparent3",
    "svgIcon24",
    "svgIcon25",
    "svgIcon23",
    "svgIcon26",
    "svgIcon27",
    "svgIcon28",
    "svgIcon29",
    "svgIcon30",
    "svgIcon31",
    "svgIcon32",
    "userPrimaryCompanyName2"
  ],

  svgIcon24: ["svgIcon24"],
  svgIcon25: ["svgIcon25"],
  svgIcon23: ["svgIcon23"],
  svgIcon26: ["svgIcon26"],
  svgIcon27: ["svgIcon27"],
  svgIcon28: ["svgIcon28"],
  svgIcon29: ["svgIcon29"],
  svgIcon30: ["svgIcon30"],
  svgIcon31: ["svgIcon31"],
  svgIcon32: ["svgIcon32"],
  userPrimaryCompanyName2: ["userPrimaryCompanyName2"],
  languagesAb: [
    "languagesAb",
    "svgIcon33",
    "svgIcon34",
    "svgIcon21",
    "svgIcon35",
    "svgIcon36",
    "svgIcon37",
    "svgIcon38",
    "svgIcon39",
    "svgIcon40",
    "svgIcon41",
    "languageParent",
    "languageA",
    "languageB"
  ],

  svgIcon33: ["svgIcon33"],
  svgIcon34: ["svgIcon34"],
  svgIcon21: ["svgIcon21"],
  svgIcon35: ["svgIcon35"],
  svgIcon36: ["svgIcon36"],
  svgIcon37: ["svgIcon37"],
  svgIcon38: ["svgIcon38"],
  svgIcon39: ["svgIcon39"],
  svgIcon40: ["svgIcon40"],
  svgIcon41: ["svgIcon41"],
  languageParent: ["languageParent", "languageA", "languageB"],
  languageA: ["languageA"],
  languageB: ["languageB"],
  locationCityCountry: [
    "locationCityCountry",
    "svgIcon42",
    "svgIcon43",
    "svgIcon11",
    "svgIcon44",
    "svgIcon45",
    "svgIcon46",
    "svgIcon47",
    "svgIcon48",
    "svgIcon49",
    "svgIcon50",
    "location2",
    "cityText2",
    "countryText"
  ],

  svgIcon42: ["svgIcon42"],
  svgIcon43: ["svgIcon43"],
  svgIcon11: ["svgIcon11"],
  svgIcon44: ["svgIcon44"],
  svgIcon45: ["svgIcon45"],
  svgIcon46: ["svgIcon46"],
  svgIcon47: ["svgIcon47"],
  svgIcon48: ["svgIcon48"],
  svgIcon49: ["svgIcon49"],
  svgIcon50: ["svgIcon50"],
  location2: ["location2", "cityText2", "countryText"],
  cityText2: ["cityText2"],
  countryText: ["countryText"],
  membershipDateTimestamp: [
    "membershipDateTimestamp",
    "svgIcon20",
    "membershipParent",
    "memberTextLabel",
    "dateTimestampParent"
  ],

  svgIcon20: ["svgIcon20"],
  membershipParent: [
    "membershipParent",
    "memberTextLabel",
    "dateTimestampParent"
  ],

  memberTextLabel: ["memberTextLabel"],
  dateTimestampParent: ["dateTimestampParent"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicElementProfileMemberDetails__ArgProps,
      internalVariantPropNames: PlasmicElementProfileMemberDetails__VariantProps
    });

    return PlasmicElementProfileMemberDetails__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicElementProfileMemberDetails";
  } else {
    func.displayName = `PlasmicElementProfileMemberDetails.${nodeName}`;
  }
  return func;
}

export const PlasmicElementProfileMemberDetails = Object.assign(
  // Top-level PlasmicElementProfileMemberDetails renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    parent: makeNodeComponent("parent"),
    details: makeNodeComponent("details"),
    detailsText: makeNodeComponent("detailsText"),
    detailsParent: makeNodeComponent("detailsParent"),
    memberBadges: makeNodeComponent("memberBadges"),
    badgeVerification: makeNodeComponent("badgeVerification"),
    memberStatus3: makeNodeComponent("memberStatus3"),
    ratingDisplayDetail: makeNodeComponent("ratingDisplayDetail"),
    primaryCompanyName: makeNodeComponent("primaryCompanyName"),
    svgIcon3: makeNodeComponent("svgIcon3"),
    svgIcon12: makeNodeComponent("svgIcon12"),
    svgIcon22: makeNodeComponent("svgIcon22"),
    svgIcon13: makeNodeComponent("svgIcon13"),
    svgIcon14: makeNodeComponent("svgIcon14"),
    svgIcon15: makeNodeComponent("svgIcon15"),
    svgIcon16: makeNodeComponent("svgIcon16"),
    svgIcon17: makeNodeComponent("svgIcon17"),
    svgIcon18: makeNodeComponent("svgIcon18"),
    svgIcon19: makeNodeComponent("svgIcon19"),
    userPrimaryCompanyName1: makeNodeComponent("userPrimaryCompanyName1"),
    companyparent3: makeNodeComponent("companyparent3"),
    svgIcon24: makeNodeComponent("svgIcon24"),
    svgIcon25: makeNodeComponent("svgIcon25"),
    svgIcon23: makeNodeComponent("svgIcon23"),
    svgIcon26: makeNodeComponent("svgIcon26"),
    svgIcon27: makeNodeComponent("svgIcon27"),
    svgIcon28: makeNodeComponent("svgIcon28"),
    svgIcon29: makeNodeComponent("svgIcon29"),
    svgIcon30: makeNodeComponent("svgIcon30"),
    svgIcon31: makeNodeComponent("svgIcon31"),
    svgIcon32: makeNodeComponent("svgIcon32"),
    userPrimaryCompanyName2: makeNodeComponent("userPrimaryCompanyName2"),
    languagesAb: makeNodeComponent("languagesAb"),
    svgIcon33: makeNodeComponent("svgIcon33"),
    svgIcon34: makeNodeComponent("svgIcon34"),
    svgIcon21: makeNodeComponent("svgIcon21"),
    svgIcon35: makeNodeComponent("svgIcon35"),
    svgIcon36: makeNodeComponent("svgIcon36"),
    svgIcon37: makeNodeComponent("svgIcon37"),
    svgIcon38: makeNodeComponent("svgIcon38"),
    svgIcon39: makeNodeComponent("svgIcon39"),
    svgIcon40: makeNodeComponent("svgIcon40"),
    svgIcon41: makeNodeComponent("svgIcon41"),
    languageParent: makeNodeComponent("languageParent"),
    languageA: makeNodeComponent("languageA"),
    languageB: makeNodeComponent("languageB"),
    locationCityCountry: makeNodeComponent("locationCityCountry"),
    svgIcon42: makeNodeComponent("svgIcon42"),
    svgIcon43: makeNodeComponent("svgIcon43"),
    svgIcon11: makeNodeComponent("svgIcon11"),
    svgIcon44: makeNodeComponent("svgIcon44"),
    svgIcon45: makeNodeComponent("svgIcon45"),
    svgIcon46: makeNodeComponent("svgIcon46"),
    svgIcon47: makeNodeComponent("svgIcon47"),
    svgIcon48: makeNodeComponent("svgIcon48"),
    svgIcon49: makeNodeComponent("svgIcon49"),
    svgIcon50: makeNodeComponent("svgIcon50"),
    location2: makeNodeComponent("location2"),
    cityText2: makeNodeComponent("cityText2"),
    countryText: makeNodeComponent("countryText"),
    membershipDateTimestamp: makeNodeComponent("membershipDateTimestamp"),
    svgIcon20: makeNodeComponent("svgIcon20"),
    membershipParent: makeNodeComponent("membershipParent"),
    memberTextLabel: makeNodeComponent("memberTextLabel"),
    dateTimestampParent: makeNodeComponent("dateTimestampParent"),
    // Metadata about props expected for PlasmicElementProfileMemberDetails
    internalVariantProps: PlasmicElementProfileMemberDetails__VariantProps,
    internalArgProps: PlasmicElementProfileMemberDetails__ArgProps
  }
);

export default PlasmicElementProfileMemberDetails;
/* prettier-ignore-end */
