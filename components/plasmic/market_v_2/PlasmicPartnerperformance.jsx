// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: RQdHhTD_vq
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarPartnerEdit from "../../NavbarPartnerEdit"; // plasmic-import: ta5dUay7HZW/component
import CardHeaderTitleDisplay from "../../CardHeaderTitleDisplay"; // plasmic-import: 1wS8JpmDTD/component
import ButtonFormDropdownSelect from "../../ButtonFormDropdownSelect"; // plasmic-import: s2oJmDwLX-/component
import CardAnalyticsPrimary from "../../CardAnalyticsPrimary"; // plasmic-import: -EGIFSbBWZt/component
import ElementAnalyticsPercentValueChange from "../../ElementAnalyticsPercentValueChange"; // plasmic-import: Un5cNvAvgb/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: o9sjFZaOQJQZ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicPartnerperformance.module.css"; // plasmic-import: RQdHhTD_vq/css
import Icon96Icon from "./icons/PlasmicIcon__Icon96"; // plasmic-import: CEkB3VE5m4/icon
import StarRatingIcon from "./icons/PlasmicIcon__StarRating"; // plasmic-import: yUIWRAMNFw/icon
import Icon177Icon from "./icons/PlasmicIcon__Icon177"; // plasmic-import: 3qiHrElSQf/icon
import WalletEarningsIcon from "./icons/PlasmicIcon__WalletEarnings"; // plasmic-import: yPY5MrAZTs/icon
import BriefOrdersIcon from "./icons/PlasmicIcon__BriefOrders"; // plasmic-import: IHBDow0Bv/icon
import CommentReviewIcon from "./icons/PlasmicIcon__CommentReview"; // plasmic-import: ebuPCBFlqJ/icon
import ListingIcon from "./icons/PlasmicIcon__Listing"; // plasmic-import: NNbE63A0Ys/icon
import ViewIcon from "./icons/PlasmicIcon__View"; // plasmic-import: 1gdYphl9Jz/icon
import ProfileViewIcon from "./icons/PlasmicIcon__ProfileView"; // plasmic-import: dPGWzfEydZ/icon
import ReactIcon from "./icons/PlasmicIcon__React"; // plasmic-import: ZxRg0AwFrG/icon
import BookmarkIcon from "./icons/PlasmicIcon__Bookmark"; // plasmic-import: 2qZ8N9GyOr/icon
import ResponseIcon from "./icons/PlasmicIcon__Response"; // plasmic-import: NSF254cS5/icon
import TeamPartnersIcon from "./icons/PlasmicIcon__TeamPartners"; // plasmic-import: nykSsHgmL/icon
import MemberAddIcon from "./icons/PlasmicIcon__MemberAdd"; // plasmic-import: FGYq1z2nvF/icon

export const PlasmicPartnerperformance__VariantProps = new Array();

export const PlasmicPartnerperformance__ArgProps = new Array();

function PlasmicPartnerperformance__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Partner performance and analytics"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"Partner performance and analytics"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarPartnerEdit
            data-plasmic-name={"navbarPartnerEdit"}
            data-plasmic-override={overrides.navbarPartnerEdit}
            className={classNames("__wab_instance", sty.navbarPartnerEdit)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"sectionHeaderPartnerPerformance"}
            data-plasmic-override={overrides.sectionHeaderPartnerPerformance}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionHeaderPartnerPerformance
            )}
          >
            <CardHeaderTitleDisplay
              data-plasmic-name={"cardHeaderTitleDisplay"}
              data-plasmic-override={overrides.cardHeaderTitleDisplay}
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay
              )}
              size={"_720"}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text___1UsqO
                  )}
                >
                  {"Analytics & metrics"}
                </div>
              }
              textDisplay={"Performance"}
              textSubhead={
                "Get an overview of your performance, what's working, and what you can improve to build your audience and earn more."
              }
            />
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"partnerPerformanceAnalytics"}
            data-plasmic-override={overrides.partnerPerformanceAnalytics}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.partnerPerformanceAnalytics
            )}
          >
            <p.Stack
              as={"header"}
              data-plasmic-name={"overview"}
              data-plasmic-override={overrides.overview}
              hasGap={true}
              className={classNames(defaultcss.all, sty.overview)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__ls8Vs)}>
                <h3
                  className={classNames(
                    defaultcss.h3,
                    defaultcss.__wab_text,
                    sty.h3___7RfKu
                  )}
                >
                  {"Overview"}
                </h3>
              </div>

              <ButtonFormDropdownSelect
                className={classNames(
                  "__wab_instance",
                  sty.buttonFormDropdownSelect__doZvu
                )}
                description={"description"}
                dropdownIcon={
                  <Icon96Icon
                    className={classNames(defaultcss.all, sty.svg__s0Oo9)}
                    role={"img"}
                  />
                }
                dropdownTitle={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__uCeTh
                    )}
                  >
                    {"30 days"}
                  </div>
                }
                headlineLabelTitle={"Date"}
                label={"label"}
                size={"_180X32"}
              />
            </p.Stack>

            <p.Stack
              as={"section"}
              data-plasmic-name={"carousellPartnerOverview"}
              data-plasmic-override={overrides.carousellPartnerOverview}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.carousellPartnerOverview
              )}
            >
              <CardAnalyticsPrimary
                data-plasmic-name={"partnerRatings"}
                data-plasmic-override={overrides.partnerRatings}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__oA6G8
                    )}
                  >
                    {"Rating"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerRatings)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__wqSbL
                    )}
                  >
                    {"4.6"}
                  </div>
                }
                numerationParent270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__nwA6O
                    )}
                  >
                    {"%"}
                  </div>
                }
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__lweYw)}
                  >
                    <StarRatingIcon
                      className={classNames(defaultcss.all, sty.svg__qtI92)}
                      role={"img"}
                    />
                  </div>
                }
                svgQuestion={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__d8MXf)}
                    title={""}
                  >
                    <Icon177Icon
                      className={classNames(defaultcss.all, sty.svg__dXu1H)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__pAf0G
                        )}
                      >
                        {"5"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerEarnings"}
                data-plasmic-override={overrides.partnerEarnings}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__hTbe
                    )}
                  >
                    {"Earnings"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerEarnings)}
                currencyParent2702={
                  <div
                    data-plasmic-name={"currencyValue270"}
                    data-plasmic-override={overrides.currencyValue270}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.currencyValue270
                    )}
                  >
                    {"$"}
                  </div>
                }
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__vwFVm
                    )}
                  >
                    {"930"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__gU8M)}
                  >
                    <WalletEarningsIcon
                      className={classNames(defaultcss.all, sty.svg__pzSox)}
                      role={"img"}
                    />
                  </div>
                }
                svgQuestion={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__tftyE)}
                  >
                    <Icon177Icon
                      className={classNames(defaultcss.all, sty.svg__zyyJd)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"minus"}
                    numberValueParentMinus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__yz1Wm
                        )}
                      >
                        {"65"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerOrders"}
                data-plasmic-override={overrides.partnerOrders}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__vnUej
                    )}
                  >
                    {"Orders"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerOrders)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__xZcW
                    )}
                  >
                    {"100"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__tsTVg)}
                  >
                    <BriefOrdersIcon
                      className={classNames(defaultcss.all, sty.svg__uQvNp)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange integer={"noChange"} />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerReviews"}
                data-plasmic-override={overrides.partnerReviews}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__brS4Z
                    )}
                  >
                    {"Reviews"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerReviews)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__r7DuK
                    )}
                  >
                    {"12"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__cIvHe)}
                  >
                    <CommentReviewIcon
                      className={classNames(defaultcss.all, sty.svg___19Zfp)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentMinus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__w3A2
                        )}
                      >
                        {"20"}
                      </div>
                    }
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__vu84Q
                        )}
                      >
                        {"20"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>

            <p.Stack
              as={"header"}
              data-plasmic-name={"listings"}
              data-plasmic-override={overrides.listings}
              hasGap={true}
              className={classNames(defaultcss.all, sty.listings)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__u8LZ8)}>
                <h3
                  className={classNames(
                    defaultcss.h3,
                    defaultcss.__wab_text,
                    sty.h3___8WlHd
                  )}
                >
                  {"Listings"}
                </h3>
              </div>

              <ButtonFormDropdownSelect
                className={classNames(
                  "__wab_instance",
                  sty.buttonFormDropdownSelect__qxjGv
                )}
                description={"description"}
                dropdownIcon={
                  <Icon96Icon
                    className={classNames(defaultcss.all, sty.svg__lkOPm)}
                    role={"img"}
                  />
                }
                dropdownTitle={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__r4BZl
                    )}
                  >
                    {"30 days"}
                  </div>
                }
                headlineLabelTitle={"Date"}
                label={"label"}
                size={
                  hasVariant(globalVariants, "screen", "iphone678Plus")
                    ? "_180X32"
                    : "_180X32"
                }
              />
            </p.Stack>

            <p.Stack
              as={"section"}
              data-plasmic-name={"groupPartnerListings"}
              data-plasmic-override={overrides.groupPartnerListings}
              hasGap={true}
              className={classNames(defaultcss.all, sty.groupPartnerListings)}
            >
              <CardAnalyticsPrimary
                data-plasmic-name={"partnerListings"}
                data-plasmic-override={overrides.partnerListings}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__zhT9N
                    )}
                  >
                    {"Listings"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerListings)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__b5PwL
                    )}
                  >
                    {"12"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__fgULh)}
                  >
                    <ListingIcon
                      className={classNames(defaultcss.all, sty.svg__u7Nt8)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange integer={"noChange"} />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerListingViews"}
                data-plasmic-override={overrides.partnerListingViews}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__yYpwc
                    )}
                  >
                    {"Listing views"}
                  </div>
                }
                className={classNames(
                  "__wab_instance",
                  sty.partnerListingViews
                )}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__oPbwy
                    )}
                  >
                    {"1"}
                  </div>
                }
                numerationParent270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__l7Lyt
                    )}
                  >
                    {"K"}
                  </div>
                }
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__pSwk9)}
                  >
                    <ViewIcon
                      className={classNames(defaultcss.all, sty.svg__ncrPl)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__kLtHq
                        )}
                      >
                        {"32.45"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerProfileViews"}
                data-plasmic-override={overrides.partnerProfileViews}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__jy4Iv
                    )}
                  >
                    {"Profile views"}
                  </div>
                }
                className={classNames(
                  "__wab_instance",
                  sty.partnerProfileViews
                )}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__s1MiL
                    )}
                  >
                    {"2"}
                  </div>
                }
                numerationParent270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__yqKnH
                    )}
                  >
                    {"K"}
                  </div>
                }
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__j6Ll8)}
                  >
                    <ProfileViewIcon
                      className={classNames(defaultcss.all, sty.svg__fiEe)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text___3Ma7N
                        )}
                      >
                        {"124.56"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerReacts"}
                data-plasmic-override={overrides.partnerReacts}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__iLAm8
                    )}
                  >
                    {"Reacts"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerReacts)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__avkXs
                    )}
                  >
                    {"3"}
                  </div>
                }
                numerationParent270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__opOi
                    )}
                  >
                    {"K"}
                  </div>
                }
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__ogDb)}
                  >
                    <ReactIcon
                      className={classNames(defaultcss.all, sty.svg__giLrv)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__d7Lc5
                        )}
                      >
                        {"23.67"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerSaves"}
                data-plasmic-override={overrides.partnerSaves}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__blb57
                    )}
                  >
                    {"Lists"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerSaves)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__o1FMc
                    )}
                  >
                    {"1"}
                  </div>
                }
                numerationParent270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text___3JBeZ
                    )}
                  >
                    {"K"}
                  </div>
                }
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__pr2Vg)}
                  >
                    <BookmarkIcon
                      className={classNames(defaultcss.all, sty.svg__vv9F)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__yQ4B
                        )}
                      >
                        {"234.56"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerResponseRate"}
                data-plasmic-override={overrides.partnerResponseRate}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__sCGf
                    )}
                  >
                    {"Response rate"}
                  </div>
                }
                className={classNames(
                  "__wab_instance",
                  sty.partnerResponseRate
                )}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__fqV7A
                    )}
                  >
                    {"78.5"}
                  </div>
                }
                numerationParent270={
                  <div
                    data-plasmic-name={"numerationValue2702"}
                    data-plasmic-override={overrides.numerationValue2702}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.numerationValue2702
                    )}
                  >
                    {"%"}
                  </div>
                }
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__vfuRe)}
                  >
                    <ResponseIcon
                      className={classNames(defaultcss.all, sty.svg__b3B50)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__oRkd7
                        )}
                      >
                        {"12.5"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>

            <p.Stack
              as={"header"}
              data-plasmic-name={"community"}
              data-plasmic-override={overrides.community}
              hasGap={true}
              className={classNames(defaultcss.all, sty.community)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__hM0B0)}>
                <h3
                  className={classNames(
                    defaultcss.h3,
                    defaultcss.__wab_text,
                    sty.h3__iuLnK
                  )}
                >
                  {"Community"}
                </h3>
              </div>

              <ButtonFormDropdownSelect
                className={classNames(
                  "__wab_instance",
                  sty.buttonFormDropdownSelect__st5ST
                )}
                description={"description"}
                dropdownIcon={
                  <Icon96Icon
                    className={classNames(defaultcss.all, sty.svg__jtcur)}
                    role={"img"}
                  />
                }
                dropdownTitle={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__a2FUz
                    )}
                  >
                    {"30 days"}
                  </div>
                }
                headlineLabelTitle={"Date"}
                label={"label"}
                size={"_180X32"}
              />
            </p.Stack>

            <p.Stack
              as={"section"}
              data-plasmic-name={"carousellPartnerCommunity"}
              data-plasmic-override={overrides.carousellPartnerCommunity}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.carousellPartnerCommunity
              )}
            >
              <CardAnalyticsPrimary
                data-plasmic-name={"partnerSubscribers"}
                data-plasmic-override={overrides.partnerSubscribers}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__rZuNx
                    )}
                  >
                    {"Subscribers"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerSubscribers)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__i7TYl
                    )}
                  >
                    {"12"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__sG7Zv)}
                  >
                    <TeamPartnersIcon
                      className={classNames(defaultcss.all, sty.svg__bcAse)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange integer={"noChange"} />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerConnections"}
                data-plasmic-override={overrides.partnerConnections}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text___4CrcM
                    )}
                  >
                    {"Connections"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerConnections)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__dbgw
                    )}
                  >
                    {"12"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__n7WKs)}
                  >
                    <MemberAddIcon
                      className={classNames(defaultcss.all, sty.svg___2Ftjc)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__vxZUy
                        )}
                      >
                        {"5"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerFollowers"}
                data-plasmic-override={overrides.partnerFollowers}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__cfyKn
                    )}
                  >
                    {"Followers"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerFollowers)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__sPQc
                    )}
                  >
                    {"12"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__siEyx)}
                  >
                    <MemberAddIcon
                      className={classNames(defaultcss.all, sty.svg__hroAd)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange
                    integer={"plus"}
                    numberValueParentPlus={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__tPu21
                        )}
                      >
                        {"5"}
                      </div>
                    }
                  />
                }
              />

              <CardAnalyticsPrimary
                data-plasmic-name={"partnerFollowing"}
                data-plasmic-override={overrides.partnerFollowing}
                cardTitle270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__regM
                    )}
                  >
                    {"Following"}
                  </div>
                }
                className={classNames("__wab_instance", sty.partnerFollowing)}
                currency={"currency"}
                numberValue270={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__f9Jk1
                    )}
                  >
                    {"12"}
                  </div>
                }
                numeration={"numeration"}
                size={"_270"}
                svgIconParent270={
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__n9MCo)}
                  >
                    <TeamPartnersIcon
                      className={classNames(defaultcss.all, sty.svg___05PCh)}
                      role={"img"}
                    />
                  </div>
                }
                valueChangeParent={
                  <ElementAnalyticsPercentValueChange integer={"noChange"} />
                }
              />
            </p.Stack>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarPartnerEdit",
    "sectionHeaderPartnerPerformance",
    "cardHeaderTitleDisplay",
    "partnerPerformanceAnalytics",
    "overview",
    "carousellPartnerOverview",
    "partnerRatings",
    "partnerEarnings",
    "currencyValue270",
    "partnerOrders",
    "partnerReviews",
    "listings",
    "groupPartnerListings",
    "partnerListings",
    "partnerListingViews",
    "partnerProfileViews",
    "partnerReacts",
    "partnerSaves",
    "partnerResponseRate",
    "numerationValue2702",
    "community",
    "carousellPartnerCommunity",
    "partnerSubscribers",
    "partnerConnections",
    "partnerFollowers",
    "partnerFollowing"
  ],

  navbarPartnerEdit: ["navbarPartnerEdit"],
  sectionHeaderPartnerPerformance: [
    "sectionHeaderPartnerPerformance",
    "cardHeaderTitleDisplay"
  ],

  cardHeaderTitleDisplay: ["cardHeaderTitleDisplay"],
  partnerPerformanceAnalytics: [
    "partnerPerformanceAnalytics",
    "overview",
    "carousellPartnerOverview",
    "partnerRatings",
    "partnerEarnings",
    "currencyValue270",
    "partnerOrders",
    "partnerReviews",
    "listings",
    "groupPartnerListings",
    "partnerListings",
    "partnerListingViews",
    "partnerProfileViews",
    "partnerReacts",
    "partnerSaves",
    "partnerResponseRate",
    "numerationValue2702",
    "community",
    "carousellPartnerCommunity",
    "partnerSubscribers",
    "partnerConnections",
    "partnerFollowers",
    "partnerFollowing"
  ],

  overview: ["overview"],
  carousellPartnerOverview: [
    "carousellPartnerOverview",
    "partnerRatings",
    "partnerEarnings",
    "currencyValue270",
    "partnerOrders",
    "partnerReviews"
  ],

  partnerRatings: ["partnerRatings"],
  partnerEarnings: ["partnerEarnings", "currencyValue270"],
  currencyValue270: ["currencyValue270"],
  partnerOrders: ["partnerOrders"],
  partnerReviews: ["partnerReviews"],
  listings: ["listings"],
  groupPartnerListings: [
    "groupPartnerListings",
    "partnerListings",
    "partnerListingViews",
    "partnerProfileViews",
    "partnerReacts",
    "partnerSaves",
    "partnerResponseRate",
    "numerationValue2702"
  ],

  partnerListings: ["partnerListings"],
  partnerListingViews: ["partnerListingViews"],
  partnerProfileViews: ["partnerProfileViews"],
  partnerReacts: ["partnerReacts"],
  partnerSaves: ["partnerSaves"],
  partnerResponseRate: ["partnerResponseRate", "numerationValue2702"],
  numerationValue2702: ["numerationValue2702"],
  community: ["community"],
  carousellPartnerCommunity: [
    "carousellPartnerCommunity",
    "partnerSubscribers",
    "partnerConnections",
    "partnerFollowers",
    "partnerFollowing"
  ],

  partnerSubscribers: ["partnerSubscribers"],
  partnerConnections: ["partnerConnections"],
  partnerFollowers: ["partnerFollowers"],
  partnerFollowing: ["partnerFollowing"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPartnerperformance__ArgProps,
      internalVariantPropNames: PlasmicPartnerperformance__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPartnerperformance__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPartnerperformance";
  } else {
    func.displayName = `PlasmicPartnerperformance.${nodeName}`;
  }
  return func;
}

export const PlasmicPartnerperformance = Object.assign(
  // Top-level PlasmicPartnerperformance renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarPartnerEdit: makeNodeComponent("navbarPartnerEdit"),
    sectionHeaderPartnerPerformance: makeNodeComponent(
      "sectionHeaderPartnerPerformance"
    ),

    cardHeaderTitleDisplay: makeNodeComponent("cardHeaderTitleDisplay"),
    partnerPerformanceAnalytics: makeNodeComponent(
      "partnerPerformanceAnalytics"
    ),

    overview: makeNodeComponent("overview"),
    carousellPartnerOverview: makeNodeComponent("carousellPartnerOverview"),
    partnerRatings: makeNodeComponent("partnerRatings"),
    partnerEarnings: makeNodeComponent("partnerEarnings"),
    currencyValue270: makeNodeComponent("currencyValue270"),
    partnerOrders: makeNodeComponent("partnerOrders"),
    partnerReviews: makeNodeComponent("partnerReviews"),
    listings: makeNodeComponent("listings"),
    groupPartnerListings: makeNodeComponent("groupPartnerListings"),
    partnerListings: makeNodeComponent("partnerListings"),
    partnerListingViews: makeNodeComponent("partnerListingViews"),
    partnerProfileViews: makeNodeComponent("partnerProfileViews"),
    partnerReacts: makeNodeComponent("partnerReacts"),
    partnerSaves: makeNodeComponent("partnerSaves"),
    partnerResponseRate: makeNodeComponent("partnerResponseRate"),
    numerationValue2702: makeNodeComponent("numerationValue2702"),
    community: makeNodeComponent("community"),
    carousellPartnerCommunity: makeNodeComponent("carousellPartnerCommunity"),
    partnerSubscribers: makeNodeComponent("partnerSubscribers"),
    partnerConnections: makeNodeComponent("partnerConnections"),
    partnerFollowers: makeNodeComponent("partnerFollowers"),
    partnerFollowing: makeNodeComponent("partnerFollowing"),
    // Metadata about props expected for PlasmicPartnerperformance
    internalVariantProps: PlasmicPartnerperformance__VariantProps,
    internalArgProps: PlasmicPartnerperformance__ArgProps
  }
);

export default PlasmicPartnerperformance;
/* prettier-ignore-end */
