// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: oTyBGj7jMRD
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavLink from "../../NavLink"; // plasmic-import: jGROxaZ_Hy/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import sty from "./PlasmicNavbarMemberEdit.module.css"; // plasmic-import: oTyBGj7jMRD/css

export const PlasmicNavbarMemberEdit__VariantProps = new Array(
  "navItems",
  "selected"
);

export const PlasmicNavbarMemberEdit__ArgProps = new Array();

function PlasmicNavbarMemberEdit__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"nav"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      {(
        hasVariant(variants, "navItems", "settings") &&
        hasVariant(variants, "navItems", "profile")
          ? true
          : hasVariant(variants, "navItems", "profile")
          ? true
          : true
      ) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink___6RIQ, {
            [sty.navLinknavItems_membership___6RIQ7N6Rd]: hasVariant(
              variants,
              "navItems",
              "membership"
            ),

            [sty.navLinknavItems_profile___6RIQhh65T]: hasVariant(
              variants,
              "navItems",
              "profile"
            ),

            [sty.navLinknavItems_settings_navItems_profile___6RIQkg1WIHh65T]:
              hasVariant(variants, "navItems", "settings") &&
              hasVariant(variants, "navItems", "profile"),
            [sty.navLinkselected_profile___6RIQgst1U]: hasVariant(
              variants,
              "selected",
              "profile"
            )
          })}
          linkText={"Profile"}
          state={
            hasVariant(variants, "selected", "profile") ? "selected" : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "membership") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink__kS7Yn, {
            [sty.navLinknavItems_membership__kS7Yn7N6Rd]: hasVariant(
              variants,
              "navItems",
              "membership"
            ),

            [sty.navLinknavItems_team__kS7YnNmGLt]: hasVariant(
              variants,
              "navItems",
              "team"
            ),

            [sty.navLinkselected_membership__kS7Yncj7Qo]: hasVariant(
              variants,
              "selected",
              "membership"
            ),

            [sty.navLinkselected_team__kS7YnehB3C]: hasVariant(
              variants,
              "selected",
              "team"
            )
          })}
          linkText={"Membership"}
          state={
            hasVariant(variants, "selected", "membership")
              ? "selected"
              : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "team") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink__wSC, {
            [sty.navLinknavItems_team__wSCNmGLt]: hasVariant(
              variants,
              "navItems",
              "team"
            ),

            [sty.navLinknavItems_wallet__wSCSa80W]: hasVariant(
              variants,
              "navItems",
              "wallet"
            ),

            [sty.navLinkselected_team__wSCehB3C]: hasVariant(
              variants,
              "selected",
              "team"
            ),

            [sty.navLinkselected_wallet__wSC7DfUx]: hasVariant(
              variants,
              "selected",
              "wallet"
            )
          })}
          linkText={"Team"}
          state={
            hasVariant(variants, "selected", "team") ? "selected" : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "wallet") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink__cnnMf, {
            [sty.navLinknavItems_projects__cnnMfWMb6]: hasVariant(
              variants,
              "navItems",
              "projects"
            ),

            [sty.navLinknavItems_wallet__cnnMfSa80W]: hasVariant(
              variants,
              "navItems",
              "wallet"
            ),

            [sty.navLinkselected_projects__cnnMfLm5Kd]: hasVariant(
              variants,
              "selected",
              "projects"
            ),

            [sty.navLinkselected_wallet__cnnMf7DfUx]: hasVariant(
              variants,
              "selected",
              "wallet"
            )
          })}
          linkText={"Wallet"}
          state={
            hasVariant(variants, "selected", "wallet") ? "selected" : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "projects") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink__wk5G0, {
            [sty.navLinknavItems_lists__wk5G0LaFx5]: hasVariant(
              variants,
              "navItems",
              "lists"
            ),

            [sty.navLinknavItems_projects__wk5G0WMb6]: hasVariant(
              variants,
              "navItems",
              "projects"
            ),

            [sty.navLinkselected_lists__wk5G0Pa762]: hasVariant(
              variants,
              "selected",
              "lists"
            ),

            [sty.navLinkselected_projects__wk5G0Lm5Kd]: hasVariant(
              variants,
              "selected",
              "projects"
            )
          })}
          linkText={"Projects"}
          state={
            hasVariant(variants, "selected", "projects")
              ? "selected"
              : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "lists") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink___4JsCi, {
            [sty.navLinknavItems_lists___4JsCilaFx5]: hasVariant(
              variants,
              "navItems",
              "lists"
            ),

            [sty.navLinknavItems_reviews___4JsCi8WU]: hasVariant(
              variants,
              "navItems",
              "reviews"
            ),

            [sty.navLinkselected_lists___4JsCiPa762]: hasVariant(
              variants,
              "selected",
              "lists"
            ),

            [sty.navLinkselected_reviews___4JsCiW8JY3]: hasVariant(
              variants,
              "selected",
              "reviews"
            )
          })}
          linkText={"Lists"}
          state={
            hasVariant(variants, "selected", "lists") ? "selected" : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "reviews") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink__jUxP0, {
            [sty.navLinknavItems_messages__jUxP0ByhAh]: hasVariant(
              variants,
              "navItems",
              "messages"
            ),

            [sty.navLinknavItems_reviews__jUxP08WU]: hasVariant(
              variants,
              "navItems",
              "reviews"
            ),

            [sty.navLinkselected_reviews__jUxP0W8JY3]: hasVariant(
              variants,
              "selected",
              "reviews"
            )
          })}
          linkText={"Reviews"}
          state={
            hasVariant(variants, "selected", "reviews") ? "selected" : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "messages") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink__xgW97, {
            [sty.navLinknavItems_messages__xgW97ByhAh]: hasVariant(
              variants,
              "navItems",
              "messages"
            ),

            [sty.navLinknavItems_notifications__xgW97Q0Mp]: hasVariant(
              variants,
              "navItems",
              "notifications"
            ),

            [sty.navLinkselected_messages__xgW97D00Us]: hasVariant(
              variants,
              "selected",
              "messages"
            ),

            [sty.navLinkselected_notifications__xgW97TIwZ7]: hasVariant(
              variants,
              "selected",
              "notifications"
            ),

            [sty.navLinkselected_reviews__xgW97W8JY3]: hasVariant(
              variants,
              "selected",
              "reviews"
            )
          })}
          linkText={"Messages"}
          state={
            hasVariant(variants, "selected", "messages")
              ? "selected"
              : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "notifications") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink___4YzFk, {
            [sty.navLinknavItems_notifications___4YzFkq0Mp]: hasVariant(
              variants,
              "navItems",
              "notifications"
            ),

            [sty.navLinknavItems_settings___4YzFkkg1WI]: hasVariant(
              variants,
              "navItems",
              "settings"
            ),

            [sty.navLinkselected_notifications___4YzFkTIwZ7]: hasVariant(
              variants,
              "selected",
              "notifications"
            ),

            [sty.navLinkselected_settings___4YzFkYvqOg]: hasVariant(
              variants,
              "selected",
              "settings"
            )
          })}
          linkText={"Notifications"}
          state={
            hasVariant(variants, "selected", "notifications")
              ? "selected"
              : undefined
          }
        />
      ) : null}
      {(hasVariant(variants, "navItems", "settings") ? true : true) ? (
        <NavLink
          className={classNames("__wab_instance", sty.navLink__ircX2, {
            [sty.navLinknavItems_settings__ircX2Kg1WI]: hasVariant(
              variants,
              "navItems",
              "settings"
            ),

            [sty.navLinkselected_settings__ircX2YvqOg]: hasVariant(
              variants,
              "selected",
              "settings"
            )
          })}
          linkText={"Settings"}
          state={
            hasVariant(variants, "selected", "settings")
              ? "selected"
              : undefined
          }
        />
      ) : null}
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicNavbarMemberEdit__ArgProps,
      internalVariantPropNames: PlasmicNavbarMemberEdit__VariantProps
    });

    return PlasmicNavbarMemberEdit__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNavbarMemberEdit";
  } else {
    func.displayName = `PlasmicNavbarMemberEdit.${nodeName}`;
  }
  return func;
}

export const PlasmicNavbarMemberEdit = Object.assign(
  // Top-level PlasmicNavbarMemberEdit renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicNavbarMemberEdit
    internalVariantProps: PlasmicNavbarMemberEdit__VariantProps,
    internalArgProps: PlasmicNavbarMemberEdit__ArgProps
  }
);

export default PlasmicNavbarMemberEdit;
/* prettier-ignore-end */
