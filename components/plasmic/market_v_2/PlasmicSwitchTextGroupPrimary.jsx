// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: dxvh7jp8PC
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import SwitchTextPrimary from "../../SwitchTextPrimary"; // plasmic-import: 0ls58SUcEc/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicSwitchTextGroupPrimary.module.css"; // plasmic-import: dxvh7jp8PC/css

export const PlasmicSwitchTextGroupPrimary__VariantProps = new Array();

export const PlasmicSwitchTextGroupPrimary__ArgProps = new Array(
  "descriptionText",
  "textGroup"
);

function PlasmicSwitchTextGroupPrimary__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <SwitchTextPrimary
        data-plasmic-name={"switchTextPrimary"}
        data-plasmic-override={overrides.switchTextPrimary}
        className={classNames("__wab_instance", sty.switchTextPrimary)}
        text={p.renderPlasmicSlot({
          defaultContents: "Enter some text",
          value: args.textGroup
        })}
      />

      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        <div
          data-plasmic-name={"descriptionTextParent"}
          data-plasmic-override={overrides.descriptionTextParent}
          className={classNames(projectcss.all, sty.descriptionTextParent)}
        >
          <div
            data-plasmic-name={"descriptionSlotParent"}
            data-plasmic-override={overrides.descriptionSlotParent}
            className={classNames(projectcss.all, sty.descriptionSlotParent)}
          >
            {p.renderPlasmicSlot({
              defaultContents: "Description",
              value: args.descriptionText,
              className: classNames(sty.slotTargetDescriptionText)
            })}
          </div>
        </div>
      </div>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "switchTextPrimary",
    "freeBox",
    "descriptionTextParent",
    "descriptionSlotParent"
  ],

  switchTextPrimary: ["switchTextPrimary"],
  freeBox: ["freeBox", "descriptionTextParent", "descriptionSlotParent"],
  descriptionTextParent: ["descriptionTextParent", "descriptionSlotParent"],
  descriptionSlotParent: ["descriptionSlotParent"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSwitchTextGroupPrimary__ArgProps,
      internalVariantPropNames: PlasmicSwitchTextGroupPrimary__VariantProps
    });

    return PlasmicSwitchTextGroupPrimary__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSwitchTextGroupPrimary";
  } else {
    func.displayName = `PlasmicSwitchTextGroupPrimary.${nodeName}`;
  }
  return func;
}

export const PlasmicSwitchTextGroupPrimary = Object.assign(
  // Top-level PlasmicSwitchTextGroupPrimary renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    switchTextPrimary: makeNodeComponent("switchTextPrimary"),
    freeBox: makeNodeComponent("freeBox"),
    descriptionTextParent: makeNodeComponent("descriptionTextParent"),
    descriptionSlotParent: makeNodeComponent("descriptionSlotParent"),
    // Metadata about props expected for PlasmicSwitchTextGroupPrimary
    internalVariantProps: PlasmicSwitchTextGroupPrimary__VariantProps,
    internalArgProps: PlasmicSwitchTextGroupPrimary__ArgProps
  }
);

export default PlasmicSwitchTextGroupPrimary;
/* prettier-ignore-end */
