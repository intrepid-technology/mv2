// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: i2JeAjsJVt
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarOverhead from "../../NavbarOverhead"; // plasmic-import: 3cGFR-AqsO/component
import NavbarHomeCta from "../../NavbarHomeCta"; // plasmic-import: 5UV_WbRXrs/component
import CardFeatureDescription from "../../CardFeatureDescription"; // plasmic-import: g0j2UvLSvh/component
import CardSignUp from "../../CardSignUp"; // plasmic-import: kpT4G-q2jGd/component
import CardHeaderTitleDisplay from "../../CardHeaderTitleDisplay"; // plasmic-import: 1wS8JpmDTD/component
import CardImageHeadlineDescription from "../../CardImageHeadlineDescription"; // plasmic-import: Kht0-rt2fI1/component
import TextLinkUnderlinePrimary from "../../TextLinkUnderlinePrimary"; // plasmic-import: fFeX6kEAMB/component
import ButtonLinkPrimary from "../../ButtonLinkPrimary"; // plasmic-import: d7dGAYuRCt/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: o9sjFZaOQJQZ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicHome.module.css"; // plasmic-import: i2JeAjsJVt/css
import Icon144Icon from "./icons/PlasmicIcon__Icon144"; // plasmic-import: HiIdGyRzm_/icon
import GlobeAmericaIcon from "./icons/PlasmicIcon__GlobeAmerica"; // plasmic-import: RRtaLxXmQA/icon
import TeamPartnersIcon from "./icons/PlasmicIcon__TeamPartners"; // plasmic-import: nykSsHgmL/icon
import Icon169Icon from "./icons/PlasmicIcon__Icon169"; // plasmic-import: kZwjesU0eU/icon
import Icon40Icon from "./icons/PlasmicIcon__Icon40"; // plasmic-import: t-46_qdmWO/icon
import Icon166Icon from "./icons/PlasmicIcon__Icon166"; // plasmic-import: 32_Blqh-E/icon
import CircleTimeIcon from "./icons/PlasmicIcon__CircleTime"; // plasmic-import: 2emi-eIAJb/icon
import Icon133Icon from "./icons/PlasmicIcon__Icon133"; // plasmic-import: l35ROsbOC/icon

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

function PlasmicHome__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">
          {
            "The community for digital nomads, independent professionals & remote companies | Intrepid"
          }
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={
            "The community for digital nomads, independent professionals & remote companies | Intrepid"
          }
        />

        <meta
          key="description"
          property="og:description"
          name="description"
          content={"Work and grow your business from anywhere in the world.\n"}
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/687bcb366d82837e6c14393bf64e6369.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarOverhead
            data-plasmic-name={"navbarOverhead"}
            data-plasmic-override={overrides.navbarOverhead}
            className={classNames("__wab_instance", sty.navbarOverhead)}
          />

          <NavbarHomeCta
            data-plasmic-name={"navbarHomeCta"}
            data-plasmic-override={overrides.navbarHomeCta}
            className={classNames("__wab_instance", sty.navbarHomeCta)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"heroParent"}
            data-plasmic-override={overrides.heroParent}
            hasGap={true}
            className={classNames(defaultcss.all, sty.heroParent)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"heroTextBlock"}
              data-plasmic-override={overrides.heroTextBlock}
              hasGap={true}
              className={classNames(defaultcss.all, sty.heroTextBlock)}
            >
              <div
                data-plasmic-name={"headlineText"}
                data-plasmic-override={overrides.headlineText}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.headlineText
                )}
              >
                {hasVariant(globalVariants, "screen", "iphone678Plus")
                  ? "A better way to work and grow your business."
                  : hasVariant(globalVariants, "screen", "desktop")
                  ? "A better way to work and grow your business."
                  : "Join a marketplace community built for entrepreneurs and the modern way to work."}
              </div>

              <div
                data-plasmic-name={"subheadText"}
                data-plasmic-override={overrides.subheadText}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.subheadText
                )}
              >
                {hasVariant(globalVariants, "screen", "iphone678Plus")
                  ? "Start, launch, and grow a business from anywhere in the world ——buy or sell technology & creative services, collaborate with rare independent talent, get the financial services you need to live and work the way you want."
                  : hasVariant(globalVariants, "screen", "desktop")
                  ? "Start, launch, and grow a business from anywhere in the world. Buy or sell technology & creative services, collaborate with rare independent talent–– Get the financial services you need to live and work the way you want."
                  : "Start, launch, and grow a business from anywhere in the world ——buy or sell technology & creative services, collaborate with talented designers and developers, get the financial services you need to live and work the way you want."}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"featuresParent"}
                data-plasmic-override={overrides.featuresParent}
                hasGap={true}
                className={classNames(defaultcss.all, sty.featuresParent)}
              >
                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__evGi
                  )}
                  headline={
                    hasVariant(globalVariants, "screen", "iphone678Plus")
                      ? "Financial services for entrepreneurs"
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Financial services for entrepreneurs"
                      : "Financial services for entrepreneurs"
                  }
                  iconParent={
                    <div
                      data-plasmic-name={"iconBg2"}
                      data-plasmic-override={overrides.iconBg2}
                      className={classNames(defaultcss.all, sty.iconBg2)}
                    >
                      <Icon144Icon
                        className={classNames(defaultcss.all, sty.svg___0X8F)}
                        role={"img"}
                      />
                    </div>
                  }
                  size={
                    hasVariant(globalVariants, "screen", "desktop")
                      ? "_360"
                      : undefined
                  }
                  text={
                    hasVariant(globalVariants, "screen", "iphone678Plus")
                      ? "We provide what the banks won't: P2P global payments, international accounts, escrow, and special financing for independent professionals. "
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "We provide what the banks won't: P2P global payments, international accounts, escrow, and special financing for independent professionals. "
                      : "We provide what the banks won't: P2P global payments, escrow and special financing for creative businesses. "
                  }
                />

                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__fX0Zh
                  )}
                  headline={"Work and live from anywhere"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__nlzEe)}
                    >
                      <GlobeAmericaIcon
                        className={classNames(defaultcss.all, sty.svg__hG9X2)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Quit your 9-5 and work from anywhere on your terms. Start the project or business you always dreamed of building but thought you couldn't."
                  }
                />

                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription___1TqGh
                  )}
                  headline={"Community & collaboration"}
                  iconParent={
                    <div
                      className={classNames(
                        defaultcss.all,
                        sty.freeBox___3QC9S
                      )}
                    >
                      <TeamPartnersIcon
                        className={classNames(defaultcss.all, sty.svg___0D00)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Chat, connect, learn, and work with leading designers and technologist from around the world in real time."
                  }
                />

                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__xx9JY
                  )}
                  headline={"Membership perks"}
                  iconParent={
                    <div
                      data-plasmic-name={"iconBg3"}
                      data-plasmic-override={overrides.iconBg3}
                      className={classNames(defaultcss.all, sty.iconBg3)}
                    >
                      <Icon169Icon
                        className={classNames(defaultcss.all, sty.svg__da3Mi)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "We've partnered with some of the worlds leading brands and fastest growing startups to get you all the tools you need to build a modern business stack."
                  }
                />

                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription___2JhBx
                  )}
                  headline={"Build a remote business"}
                  iconParent={
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__gtFvM)}
                    >
                      <Icon40Icon
                        className={classNames(defaultcss.all, sty.svg__gsFh8)}
                        role={"img"}
                      />
                    </p.Stack>
                  }
                  text={
                    "Find rare talent and work from anywhere. Work revolves around you and your global lifestyle."
                  }
                />

                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__c5Fh
                  )}
                  headline={"Go to market fast"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__lk9Nw)}
                    >
                      <Icon166Icon
                        className={classNames(defaultcss.all, sty.svg___4ES2)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Launch new products faster—grow or transform your business by cutting down your development time from months to days."
                  }
                />

                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__xpeA
                  )}
                  headline={"Save time and money"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__ySjws)}
                    >
                      <CircleTimeIcon
                        className={classNames(defaultcss.all, sty.svg___68Hoj)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "We're a shoppable ecommerce experience, making buying, selling, and collaboration fun and easy. "
                  }
                />

                <CardFeatureDescription
                  border={"border"}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__yGxti
                  )}
                  headline={"Support small businesses"}
                  iconParent={
                    <div
                      className={classNames(
                        defaultcss.all,
                        sty.freeBox___57Srn
                      )}
                    >
                      <Icon133Icon
                        className={classNames(defaultcss.all, sty.svg___9Um6)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Buy, sell, and collaborate with other SMEs who put their heart and soul into making something innovative."
                  }
                />
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"form"}
              data-plasmic-name={"signupFormHome"}
              data-plasmic-override={overrides.signupFormHome}
              hasGap={true}
              className={classNames(defaultcss.all, sty.signupFormHome)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__zVk1H
                )}
              >
                {"Sign up"}
              </div>

              <CardSignUp
                data-plasmic-name={"cardSignUp"}
                data-plasmic-override={overrides.cardSignUp}
                className={classNames("__wab_instance", sty.cardSignUp)}
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__lqXyy)}
          >
            <div className={classNames(defaultcss.all, sty.freeBox__bR7Mr)}>
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay___2Toj8
                )}
                headings={["title"]}
                size={
                  hasVariant(globalVariants, "screen", "iphone678Plus")
                    ? "_360"
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? "_720"
                    : "_540"
                }
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text___9Ipgl
                    )}
                  >
                    {"Grow your business from anywhere"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__m55Ho
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "iphone678Plus")
                      ? "Get custom technology and creative services from a global community of professionals ready to help you grow and succeed."
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Get custom technology and creative services from a global community of independent professionals ready to help you grow and succeed."
                      : "A global community of professional technology creatives ready to help you grow and succeed."}
                  </div>
                }
              />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__d8S0D)}
            >
              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__wa1LD)}
                    src={"/plasmic/market_v_2/images/image31.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__tDfJ5
                )}
                description={"description"}
                size={"_270X270"}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__breZ0
                        )}
                      >
                        {"UX Design"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___967W9)}
                    src={"/plasmic/market_v_2/images/image29.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__owgd7
                )}
                description={"description"}
                size={"_270X270"}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__dpw1A
                        )}
                      >
                        {"Mobile apps"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__jJa2K)}
                    src={"/plasmic/market_v_2/images/image11.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription___4MJBt
                )}
                description={"description"}
                size={"_270X270"}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__po3Ep
                        )}
                      >
                        {"No Code"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__sx00A)}
                    src={"/plasmic/market_v_2/images/image30.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__vJqdx
                )}
                description={"description"}
                size={"_270X270"}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__bEklk
                        )}
                      >
                        {"Web apps"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__lRiKf)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__sJibN)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__k8APm)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__c8FT4)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__iWQf
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "iphone678Plus")
                      ? "Business services for remote teams"
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Business services for remote teams"
                      : "A world of services for dynamic teams"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__x2Mg3
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "iphone678Plus")
                      ? "Curated technology, busines, and creatives services designed for modern entrepreneurs."
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Curated technology, busines, and creatives services designed for modern entrepreneurs."
                      : "Curated services and products designed for modern entrepreneurs."}
                  </div>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "iphone678Plus")
                    ? true
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? true
                    : false
                ) ? (
                  <ButtonLinkPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonLinkPrimary__dP6E
                    )}
                    color={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "brand"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "brand"
                        : undefined
                    }
                    destination={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "/member/pricing"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "/member/pricing"
                        : undefined
                    }
                    height={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "_48"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "_40"
                        : undefined
                    }
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__hYew
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "iphone678Plus")
                          ? "Join today"
                          : hasVariant(globalVariants, "screen", "desktop")
                          ? "Join today"
                          : "Hyper Link"}
                      </div>
                    }
                    type={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "fill"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "fill"
                        : undefined
                    }
                    width={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "_360"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "_180"
                        : undefined
                    }
                  />
                ) : null}
              </p.Stack>

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img___6CsQ)}
                src={"/plasmic/market_v_2/images/image25.png"}
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__vutcc)}
          >
            <div className={classNames(defaultcss.all, sty.freeBox__lrfUu)}>
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__wfU0G
                )}
                headings={["title"]}
                size={
                  hasVariant(globalVariants, "screen", "iphone678Plus")
                    ? "_360"
                    : "_540"
                }
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text___2VRor
                    )}
                  >
                    {"Work without borders"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__o8Hc
                    )}
                  >
                    {"Discover the world and work from anywhere."}
                  </div>
                }
              />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__cXk)}
            >
              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__wAuj8)}
                    src={"/plasmic/market_v_2/images/image26.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription___7Gvnc
                )}
                size={"_360X360"}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__m8Mse
                    )}
                  >
                    {
                      "Unique places around the world for work, productivity, and inspiration."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__zNeu0
                        )}
                      >
                        {"Destinations"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__cZqyO)}
                    src={"/plasmic/market_v_2/images/image27.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__p1WZt
                )}
                size={"_360X360"}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__oQap
                    )}
                  >
                    {
                      "Get work done and connect with like minded people from around the world."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__flcUt
                        )}
                      >
                        {"Workspaces"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__kbNFx)}
                    src={"/plasmic/market_v_2/images/image33.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__n9YcB
                )}
                size={"_360X360"}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__vsuFv
                    )}
                  >
                    {
                      "Your home and neighborhood community in any city or country."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__v6MpX
                        )}
                      >
                        {"Livespaces"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>
          </p.Stack>

          <div className={classNames(defaultcss.all, sty.freeBox__s2YtE)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__xFjXe)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__inSiQ)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__btxJm)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__bf3Y2
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "iphone678Plus")
                      ? "Destination venues, events, and meetups for remote companies"
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Destination venues, events, and meetups for remote companies"
                      : "Destination meetups for remote teams"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__uQOx
                    )}
                  >
                    {
                      "Activities and experiences for building culture and lasting bonds."
                    }
                  </div>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "iphone678Plus")
                    ? true
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? true
                    : false
                ) ? (
                  <ButtonLinkPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonLinkPrimary__cuxXx
                    )}
                    color={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "brand"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "brand"
                        : undefined
                    }
                    destination={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "/member/pricing"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "/member/pricing"
                        : undefined
                    }
                    height={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "_48"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "_40"
                        : undefined
                    }
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__zKpa
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "iphone678Plus")
                          ? "Get inspired"
                          : hasVariant(globalVariants, "screen", "desktop")
                          ? "Get inspired"
                          : "Hyper Link"}
                      </div>
                    }
                    type={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "fill"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "fill"
                        : undefined
                    }
                    width={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "_360"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "_180"
                        : undefined
                    }
                  />
                ) : null}
              </p.Stack>

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__dQqz3)}
                src={"/plasmic/market_v_2/images/image23.png"}
              />
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__wvmvo)}
          >
            <div className={classNames(defaultcss.all, sty.freeBox___562Ol)}>
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__fv5Mq
                )}
                headings={["title"]}
                size={
                  hasVariant(globalVariants, "screen", "iphone678Plus")
                    ? "_360"
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? "_720"
                    : "_540"
                }
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__tnzRu
                    )}
                  >
                    {"Follow your passion"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__paM4A
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "iphone678Plus")
                      ? "Inspire and get inspired—host, teach, or join experiences that make a difference in your life and business."
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Inspire and get inspired—host, teach, or join experiences that make a difference in your life and business."
                      : "Inspire and get inspired—host, teach, or join experiences that make a difference"}
                  </div>
                }
              />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__uDeak)}
            >
              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__rezLt)}
                    src={"/plasmic/market_v_2/images/image18.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription___3RUkF
                )}
                size={"_360X360"}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__bOYsc
                    )}
                  >
                    {
                      "Business networking, meetups, and interest groups by industry professionals"
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__r1Sre
                        )}
                      >
                        {"Live events"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__mwX2T)}
                    src={"/plasmic/market_v_2/images/image22.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__pl3ER
                )}
                size={"_360X360"}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__gaPr3
                    )}
                  >
                    {
                      "Live and interactive experiences lead by community partners."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__dyXmt
                        )}
                      >
                        {"Online experiences"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__jdMs0)}
                    src={"/plasmic/market_v_2/images/image21.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__okOSs
                )}
                size={"_360X360"}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__nmKfs
                    )}
                  >
                    {
                      "Get the help you need, when you need it from professionals who understand you."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline"}
                    size={"_24"}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__yigk4
                        )}
                      >
                        {"Professional coaching"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>
          </p.Stack>

          <div className={classNames(defaultcss.all, sty.freeBox__nAfro)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__wscGy)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__y3H79)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__a7U2J)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__yDzzd
                    )}
                  >
                    {"Become a partner"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__vAxBa
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "desktop")
                      ? "Sell your professional business, technology & creative services—grow a global business by sharing your talents."
                      : "Sell your professional technology & creative services—grow a global business by sharing your talents."}
                  </div>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "iphone678Plus")
                    ? true
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? true
                    : false
                ) ? (
                  <ButtonLinkPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonLinkPrimary__hzn2V
                    )}
                    color={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "brand"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "brand"
                        : undefined
                    }
                    destination={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "/partner/pricing"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "/partner/pricing"
                        : undefined
                    }
                    height={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "_48"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "_40"
                        : undefined
                    }
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text___4HpwD
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "iphone678Plus")
                          ? "Learn more"
                          : hasVariant(globalVariants, "screen", "desktop")
                          ? "Learn more"
                          : "Hyper Link"}
                      </div>
                    }
                    type={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "fill"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "fill"
                        : undefined
                    }
                    width={
                      hasVariant(globalVariants, "screen", "iphone678Plus")
                        ? "_360"
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? "_180"
                        : undefined
                    }
                  />
                ) : null}
              </p.Stack>

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__rCc5H)}
                src={"/plasmic/market_v_2/images/image32.png"}
              />
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarOverhead",
    "navbarHomeCta",
    "heroParent",
    "heroTextBlock",
    "headlineText",
    "subheadText",
    "featuresParent",
    "iconBg2",
    "iconBg3",
    "signupFormHome",
    "cardSignUp"
  ],

  navbarOverhead: ["navbarOverhead"],
  navbarHomeCta: ["navbarHomeCta"],
  heroParent: [
    "heroParent",
    "heroTextBlock",
    "headlineText",
    "subheadText",
    "featuresParent",
    "iconBg2",
    "iconBg3",
    "signupFormHome",
    "cardSignUp"
  ],

  heroTextBlock: [
    "heroTextBlock",
    "headlineText",
    "subheadText",
    "featuresParent",
    "iconBg2",
    "iconBg3"
  ],

  headlineText: ["headlineText"],
  subheadText: ["subheadText"],
  featuresParent: ["featuresParent", "iconBg2", "iconBg3"],
  iconBg2: ["iconBg2"],
  iconBg3: ["iconBg3"],
  signupFormHome: ["signupFormHome", "cardSignUp"],
  cardSignUp: ["cardSignUp"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarOverhead: makeNodeComponent("navbarOverhead"),
    navbarHomeCta: makeNodeComponent("navbarHomeCta"),
    heroParent: makeNodeComponent("heroParent"),
    heroTextBlock: makeNodeComponent("heroTextBlock"),
    headlineText: makeNodeComponent("headlineText"),
    subheadText: makeNodeComponent("subheadText"),
    featuresParent: makeNodeComponent("featuresParent"),
    iconBg2: makeNodeComponent("iconBg2"),
    iconBg3: makeNodeComponent("iconBg3"),
    signupFormHome: makeNodeComponent("signupFormHome"),
    cardSignUp: makeNodeComponent("cardSignUp"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
