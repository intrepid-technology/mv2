// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: Ke5AuXHMAn
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import CardHeaderTitleDisplay from "../../CardHeaderTitleDisplay"; // plasmic-import: 1wS8JpmDTD/component
import SelectDropdownPrimary from "../../SelectDropdownPrimary"; // plasmic-import: T_qFWEqz1I6/component
import ChipSearchFilterButton from "../../ChipSearchFilterButton"; // plasmic-import: GbL35coVdJ/component
import CardServiceDisplay from "../../CardServiceDisplay"; // plasmic-import: 82Lpaa43lIc/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: koVqNkx_82/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicSearch.module.css"; // plasmic-import: Ke5AuXHMAn/css

export const PlasmicSearch__VariantProps = new Array();

export const PlasmicSearch__ArgProps = new Array();

function PlasmicSearch__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__mByHg)}>
            <CardHeaderTitleDisplay
              data-plasmic-name={"cardHeaderTitleDisplay"}
              data-plasmic-override={overrides.cardHeaderTitleDisplay}
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay
              )}
              headings={[]}
              slot={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wnn9X
                  )}
                >
                  {"Discover the community"}
                </div>
              }
              textDisplay={"Search"}
              textSubhead={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iAdTm
                  )}
                >
                  {
                    "There's a service for everything. Find it below and make it happen."
                  }
                </div>
              }
            />
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__srome)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__saaSc)}
            >
              <SelectDropdownPrimary
                className={classNames(
                  "__wab_instance",
                  sty.selectDropdownPrimary__ipowg
                )}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lvUbZ
                    )}
                  >
                    {"Select"}
                  </div>
                }
                width={"_160"}
              />

              <SelectDropdownPrimary
                className={classNames(
                  "__wab_instance",
                  sty.selectDropdownPrimary__hnlad
                )}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mjB1W
                    )}
                  >
                    {"Select"}
                  </div>
                }
                width={"_160"}
              />

              <SelectDropdownPrimary
                className={classNames(
                  "__wab_instance",
                  sty.selectDropdownPrimary__a9BsK
                )}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gmh8B
                    )}
                  >
                    {"Select"}
                  </div>
                }
                width={"_160"}
              />
            </p.Stack>

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__o1S0Q
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__satv
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__li596
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__zhyTy
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__yT1Sp
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__i8TWb
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__qhiOe
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__i46WC
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__k6Yp9
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__uiNw
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__vj1WB
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__vPeJn
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__pvkxo
              )}
            />
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__z9Yd)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___79Svz)}
            >
              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__uQyQm
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__qeovh
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay___2X6XN
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__xXm4Z
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay___3Y9Ri
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay___7Pgi
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__lTfeC
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__xseN7
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />

              <CardServiceDisplay
                boost={true}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__z6Gir
                )}
                membership={true}
                price={true}
                rating={true}
                size={"_360X270"}
                userStats={true}
                verification={true}
              />
            </p.Stack>

            <ButtonPrimary
              data-plasmic-name={"buttonPrimary"}
              data-plasmic-override={overrides.buttonPrimary}
              className={classNames("__wab_instance", sty.buttonPrimary)}
              type={"ghost"}
              width={"_270"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jMIx
                )}
              >
                {"Load more"}
              </div>
            </ButtonPrimary>
          </p.Stack>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "cardHeaderTitleDisplay", "buttonPrimary"],
  cardHeaderTitleDisplay: ["cardHeaderTitleDisplay"],
  buttonPrimary: ["buttonPrimary"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSearch__ArgProps,
      internalVariantPropNames: PlasmicSearch__VariantProps
    });

    return PlasmicSearch__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSearch";
  } else {
    func.displayName = `PlasmicSearch.${nodeName}`;
  }
  return func;
}

export const PlasmicSearch = Object.assign(
  // Top-level PlasmicSearch renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    cardHeaderTitleDisplay: makeNodeComponent("cardHeaderTitleDisplay"),
    buttonPrimary: makeNodeComponent("buttonPrimary"),
    // Metadata about props expected for PlasmicSearch
    internalVariantProps: PlasmicSearch__VariantProps,
    internalArgProps: PlasmicSearch__ArgProps
  }
);

export default PlasmicSearch;
/* prettier-ignore-end */
