// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3jRhtnjrFaHJWfNWC1k5BV
// Component: Ke5AuXHMAn
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavbarInternal from "../../NavbarInternal"; // plasmic-import: BXWgCr5-vns/component
import CardTitleHeading from "../../CardTitleHeading"; // plasmic-import: 1wS8JpmDTD/component
import SelectDropdownPrimary from "../../SelectDropdownPrimary"; // plasmic-import: T_qFWEqz1I6/component
import ChipSearchFilterButton from "../../ChipSearchFilterButton"; // plasmic-import: GbL35coVdJ/component
import CardServiceDisplay from "../../CardServiceDisplay"; // plasmic-import: 82Lpaa43lIc/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: koVqNkx_82/component
import FooterB from "../../FooterB"; // plasmic-import: kxeO2gTzwxU/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_market_v_2.module.css"; // plasmic-import: 3jRhtnjrFaHJWfNWC1k5BV/projectcss
import * as sty from "./PlasmicSearch.module.css"; // plasmic-import: Ke5AuXHMAn/css

export const PlasmicSearch__VariantProps = new Array();

export const PlasmicSearch__ArgProps = new Array();

function PlasmicSearch__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style global jsx>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarInternal
            data-plasmic-name={"navbarInternal"}
            data-plasmic-override={overrides.navbarInternal}
            className={classNames("__wab_instance", sty.navbarInternal)}
          />

          <div className={classNames(defaultcss.all, sty.box__mByHg)}>
            <CardTitleHeading
              data-plasmic-name={"cardTitleHeading"}
              data-plasmic-override={overrides.cardTitleHeading}
              className={classNames("__wab_instance", sty.cardTitleHeading)}
              headings={[]}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__wnn9X
                  )}
                >
                  {"Discover the community"}
                </div>
              }
              slot2={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__iAdTm
                  )}
                >
                  {
                    "There's a service for everything. Find it below and make it happen."
                  }
                </div>
              }
            >
              {"Search"}
            </CardTitleHeading>
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__srome)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__saaSc)}
            >
              <SelectDropdownPrimary
                className={classNames(
                  "__wab_instance",
                  sty.selectDropdownPrimary__ipowg
                )}
                placeholder={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__lvUbZ
                    )}
                  >
                    {"Select"}
                  </div>
                }
                size={"_160"}
              />

              <SelectDropdownPrimary
                className={classNames(
                  "__wab_instance",
                  sty.selectDropdownPrimary__hnlad
                )}
                placeholder={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__mjB1W
                    )}
                  >
                    {"Select"}
                  </div>
                }
                size={"_160"}
              />

              <SelectDropdownPrimary
                className={classNames(
                  "__wab_instance",
                  sty.selectDropdownPrimary__a9BsK
                )}
                placeholder={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__gmh8B
                    )}
                  >
                    {"Select"}
                  </div>
                }
                size={"_160"}
              />
            </p.Stack>

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__o1S0Q
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__satv
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__li596
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__zhyTy
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__yT1Sp
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__i8TWb
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__qhiOe
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__i46WC
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__k6Yp9
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__uiNw
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__vj1WB
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__vPeJn
              )}
            />

            <ChipSearchFilterButton
              className={classNames(
                "__wab_instance",
                sty.chipSearchFilterButton__pvkxo
              )}
            />
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__z9Yd)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box___79Svz)}
            >
              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__uQyQm
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__qeovh
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay___2X6XN
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__xXm4Z
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay___3Y9Ri
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay___7Pgi
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__lTfeC
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__xseN7
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />

              <CardServiceDisplay
                boost={"boost"}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__z6Gir
                )}
                membership={"membership"}
                price={"price"}
                rating={"rating"}
                size={"_360X270"}
                userStats={"userStats"}
                verification={"verification"}
              />
            </p.Stack>

            <ButtonPrimary
              data-plasmic-name={"buttonPrimary"}
              data-plasmic-override={overrides.buttonPrimary}
              className={classNames("__wab_instance", sty.buttonPrimary)}
              size={"_270"}
              type={"ghost"}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__jMIx
                )}
              >
                {"Load more"}
              </div>
            </ButtonPrimary>
          </p.Stack>

          <FooterB
            data-plasmic-name={"footerB"}
            data-plasmic-override={overrides.footerB}
            className={classNames("__wab_instance", sty.footerB)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarInternal",
    "cardTitleHeading",
    "buttonPrimary",
    "footerB"
  ],

  navbarInternal: ["navbarInternal"],
  cardTitleHeading: ["cardTitleHeading"],
  buttonPrimary: ["buttonPrimary"],
  footerB: ["footerB"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSearch__ArgProps,
      internalVariantPropNames: PlasmicSearch__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicSearch__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSearch";
  } else {
    func.displayName = `PlasmicSearch.${nodeName}`;
  }
  return func;
}

export const PlasmicSearch = Object.assign(
  // Top-level PlasmicSearch renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarInternal: makeNodeComponent("navbarInternal"),
    cardTitleHeading: makeNodeComponent("cardTitleHeading"),
    buttonPrimary: makeNodeComponent("buttonPrimary"),
    footerB: makeNodeComponent("footerB"),
    // Metadata about props expected for PlasmicSearch
    internalVariantProps: PlasmicSearch__VariantProps,
    internalArgProps: PlasmicSearch__ArgProps
  }
);

export default PlasmicSearch;
/* prettier-ignore-end */
